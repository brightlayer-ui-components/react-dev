(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1162:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),react=__webpack_require__(0),react_default=__webpack_require__.n(react),constants=__webpack_require__(38),utils=__webpack_require__(16),dist=__webpack_require__(7),basicListItem=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:Object(dist.text)("title","Info List Item"),subtitle:Object(dist.text)("subtitle","A simple demo"),divider:Object(dist.boolean)("divider",!0)?"full":void 0,hidePadding:Object(dist.boolean)("hidePadding",!0)})}),{__STORY__:"import { InfoListItem } from '@pxblue/react-components';\nimport { boolean, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const basicListItem = (): StoryFnReactReturnType => (\n    <InfoListItem\n        dense\n        title={text('title', 'Info List Item')}\n        subtitle={text('subtitle', 'A simple demo')}\n        divider={boolean('divider', true) ? 'full' : undefined}\n        hidePadding={boolean('hidePadding', true)}\n    />\n);\n\nbasicListItem.story = { name: 'basic list item' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/basic-list-item.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}}));basicListItem.story={name:"basic list item"};var colors_dist=__webpack_require__(11),icons_mui=__webpack_require__(23),withIcon=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:Object(dist.text)("title","Info List Item"),subtitle:Object(dist.text)("subtitle","A simple demo"),icon:react_default.a.createElement(icons_mui.Leaf,null),iconColor:Object(dist.color)("iconColor",colors_dist.green[500]),divider:Object(dist.boolean)("divider",!0)?"full":void 0})}),{__STORY__:"import * as Colors from '@pxblue/colors';\n//@ts-ignore\nimport { Leaf } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { boolean, color, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withIcon = (): StoryFnReactReturnType => (\n    <InfoListItem\n        dense\n        title={text('title', 'Info List Item')}\n        subtitle={text('subtitle', 'A simple demo')}\n        icon={<Leaf />}\n        iconColor={color('iconColor', Colors.green[500])}\n        divider={boolean('divider', true) ? 'full' : undefined}\n    />\n);\n\nwithIcon.story = { name: 'with icon' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-icon.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}}));withIcon.story={name:"with icon"};__webpack_require__(13).withSource;var withLongText=(0,__webpack_require__(13).addSource)((function(){var title=Object(dist.text)("title","This is a really really really really really really really really long title"),subtitle=Object(dist.text)("subtitle","this is a really really really really really really really really really really long subtitle"),divider=Object(dist.boolean)("divider",!0)?"full":void 0;return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:title,subtitle:subtitle,divider:divider,icon:react_default.a.createElement(icons_mui.Leaf,null)})}),{__STORY__:"//@ts-ignore\nimport { Leaf } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { boolean, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withLongText = (): StoryFnReactReturnType => {\n    const title = text('title', 'This is a really really really really really really really really long title');\n    const subtitle = text(\n        'subtitle',\n        'this is a really really really really really really really really really really long subtitle'\n    );\n    const divider = boolean('divider', true) ? 'full' : undefined;\n\n    return <InfoListItem dense title={title} subtitle={subtitle} divider={divider} icon={<Leaf />} />;\n};\n\nwithLongText.story = { name: 'with long text' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-long-text.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withLongText.story={name:"with long text"};__webpack_require__(13).withSource;var arrayForSubtitles=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:Object(dist.text)("Title","Temperature"),subtitle:["4",react_default.a.createElement(icons_mui.Leaf,{key:"subtitle",fontSize:"inherit"}),"leaves"],subtitleSeparator:Object(dist.text)("separator","-"),divider:"full",icon:react_default.a.createElement(icons_mui.Temp,null)})}),{__STORY__:"//@ts-ignore\nimport { Leaf, Temp } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const arrayForSubtitles = (): StoryFnReactReturnType => (\n    <InfoListItem\n        dense\n        title={text('Title', 'Temperature')}\n        subtitle={['4', <Leaf key={'subtitle'} fontSize={'inherit'} />, 'leaves']}\n        subtitleSeparator={text('separator', '-')}\n        divider={'full'}\n        icon={<Temp />}\n    />\n);\n\narrayForSubtitles.story = { name: 'array for subtitles' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/array-for-subtitles.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});arrayForSubtitles.story={name:"array for subtitles"};__webpack_require__(13).withSource;var withAvatar=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:Object(dist.text)("title","Info List Item"),subtitle:Object(dist.text)("subtitle","A simple demo"),avatar:!0,statusColor:Object(dist.color)("statusColor",colors_dist.green[500]),icon:react_default.a.createElement(icons_mui.GradeA,null)})}),{__STORY__:"import * as Colors from '@pxblue/colors';\n//@ts-ignore\nimport { GradeA } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { color, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withAvatar = (): StoryFnReactReturnType => (\n    <InfoListItem\n        dense\n        title={text('title', 'Info List Item')}\n        subtitle={text('subtitle', 'A simple demo')}\n        avatar\n        statusColor={color('statusColor', Colors.green[500])}\n        icon={<GradeA />}\n    />\n);\n\nwithAvatar.story = { name: 'with avatar' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-avatar.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withAvatar.story={name:"with avatar"};__webpack_require__(13).withSource;var withStatusBackgroundColor=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:Object(dist.text)("title","Info List Item"),subtitle:Object(dist.text)("subtitle","A simple demo"),divider:Object(dist.boolean)("divider",!0)?"full":void 0,statusColor:Object(dist.color)("statusColor",colors_dist.green[500]),fontColor:colors_dist.green[500],icon:react_default.a.createElement(icons_mui.Leaf,null),backgroundColor:Object(dist.color)("backgroundColor",colors_dist.blue[500])})}),{__STORY__:"import * as Colors from '@pxblue/colors';\n//@ts-ignore\nimport { Leaf } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { boolean, color, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withStatusBackgroundColor = (): StoryFnReactReturnType => (\n    <InfoListItem\n        dense\n        title={text('title', 'Info List Item')}\n        subtitle={text('subtitle', 'A simple demo')}\n        divider={boolean('divider', true) ? 'full' : undefined}\n        statusColor={color('statusColor', Colors.green[500])}\n        fontColor={Colors.green[500]}\n        icon={<Leaf />}\n        backgroundColor={color('backgroundColor', Colors.blue[500])}\n    />\n);\n\nwithStatusBackgroundColor.story = { name: 'with status and background color' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-status-and-background-color.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withStatusBackgroundColor.story={name:"with status and background color"};__webpack_require__(13).withSource;var withCustomControl=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:Object(dist.text)("title","Test"),divider:Object(dist.boolean)("divider",!0)?"full":void 0,hidePadding:Object(dist.boolean)("hidePadding",!0),icon:react_default.a.createElement(icons_mui.Device,null),rightComponent:react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value","15"),units:Object(dist.text)("units","A")})})}),{__STORY__:"//@ts-ignore\nimport { Device } from '@pxblue/icons-mui';\nimport { ChannelValue, InfoListItem } from '@pxblue/react-components';\nimport { boolean, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withCustomControl = (): StoryFnReactReturnType => (\n    <InfoListItem\n        dense\n        title={text('title', 'Test')}\n        divider={boolean('divider', true) ? 'full' : undefined}\n        hidePadding={boolean('hidePadding', true)}\n        icon={<Device />}\n        rightComponent={<ChannelValue value={text('value', '15')} units={text('units', 'A')} />}\n    />\n);\n\nwithCustomControl.story = { name: 'with custom control' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-control.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withCustomControl.story={name:"with custom control"};__webpack_require__(13).withSource;var withCustomLeftComponent=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:Object(dist.text)("title","Test"),divider:Object(dist.boolean)("divider",!0)?"full":void 0,hidePadding:Object(dist.boolean)("hidePadding",!0),icon:react_default.a.createElement(icons_mui.Device,null),leftComponent:react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value","15"),units:Object(dist.text)("units","A")})})}),{__STORY__:"//@ts-ignore\nimport { Device } from '@pxblue/icons-mui';\nimport { ChannelValue, InfoListItem } from '@pxblue/react-components';\nimport { boolean, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withCustomLeftComponent = (): StoryFnReactReturnType => (\n    <InfoListItem\n        dense\n        title={text('title', 'Test')}\n        divider={boolean('divider', true) ? 'full' : undefined}\n        hidePadding={boolean('hidePadding', true)}\n        icon={<Device />}\n        leftComponent={<ChannelValue value={text('value', '15')} units={text('units', 'A')} />}\n    />\n);\n\nwithCustomLeftComponent.story = { name: 'with custom leftComponent' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-leftComponent.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withCustomLeftComponent.story={name:"with custom leftComponent"};var List=__webpack_require__(330),inAFullList=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(List.a,{style:{color:colors_dist.gray[800],padding:0}},react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:"Status",divider:"full",statusColor:colors_dist.green[500],subtitleSeparator:"/",icon:react_default.a.createElement(icons_mui.Leaf,{color:"inherit"}),rightComponent:react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:"Online, ESS+"})}),react_default.a.createElement(react_components.InfoListItem,{title:"Input Voltage",divider:"full",avatar:!0,subtitle:["Phase A","Phase B","Phase C"],icon:react_default.a.createElement(icons_mui.GradeA,null),rightComponent:react_default.a.createElement("span",null,react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:478,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:479,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:473,units:"V"}))}),react_default.a.createElement(react_components.InfoListItem,{title:"Output Voltage",divider:"full",avatar:!0,statusColor:colors_dist.red[500],fontColor:colors_dist.red[500],subtitle:["Phase A","Phase B","Phase C"],icon:react_default.a.createElement(icons_mui.GradeA,{color:"inherit"}),rightComponent:react_default.a.createElement("span",{style:{color:colors_dist.red[500]}},react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:480,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:480,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:480,units:"V"}))}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:"Output Current",divider:"full",icon:react_default.a.createElement(icons_mui.Device,{color:"inherit"}),rightComponent:react_default.a.createElement("span",null,react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:15,units:"A"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:14.9,units:"A"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:15,units:"A"}))}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:"Temperature",divider:"full",icon:react_default.a.createElement(icons_mui.Temp,null),rightComponent:react_default.a.createElement(react_components.ChannelValue,{fontSize:16,icon:react_default.a.createElement(icons_mui.Leaf,{htmlColor:colors_dist.green[500]}),value:68,units:"°F"})}))}),{__STORY__:"import { List } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\n//@ts-ignore\nimport { Device, GradeA, Leaf, Temp } from '@pxblue/icons-mui';\nimport { ChannelValue, InfoListItem } from '@pxblue/react-components';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const inAFullList = (): StoryFnReactReturnType => (\n    <List style={{ color: Colors.gray['800'], padding: 0 }}>\n        <InfoListItem\n            dense\n            title={'Status'}\n            divider={'full'}\n            statusColor={Colors.green[500]}\n            subtitleSeparator={'/'}\n            icon={<Leaf color={'inherit'} />}\n            rightComponent={<ChannelValue fontSize={16} value={'Online, ESS+'} />}\n        />\n        <InfoListItem\n            title={'Input Voltage'}\n            divider={'full'}\n            avatar\n            subtitle={['Phase A', 'Phase B', 'Phase C']}\n            icon={<GradeA />}\n            rightComponent={\n                <span>\n                    <ChannelValue fontSize={16} value={478} units={'V'} />,{' '}\n                    <ChannelValue fontSize={16} value={479} units={'V'} />,{' '}\n                    <ChannelValue fontSize={16} value={473} units={'V'} />\n                </span>\n            }\n        />\n        <InfoListItem\n            title={'Output Voltage'}\n            divider={'full'}\n            avatar\n            statusColor={Colors.red[500]}\n            fontColor={Colors.red[500]}\n            subtitle={['Phase A', 'Phase B', 'Phase C']}\n            icon={<GradeA color={'inherit'} />}\n            rightComponent={\n                <span style={{ color: Colors.red[500] }}>\n                    <ChannelValue fontSize={16} value={480} units={'V'} />,{' '}\n                    <ChannelValue fontSize={16} value={480} units={'V'} />,{' '}\n                    <ChannelValue fontSize={16} value={480} units={'V'} />\n                </span>\n            }\n        />\n        <InfoListItem\n            dense\n            title={'Output Current'}\n            divider={'full'}\n            icon={<Device color={'inherit'} />}\n            rightComponent={\n                <span>\n                    <ChannelValue fontSize={16} value={15} units={'A'} />,{' '}\n                    <ChannelValue fontSize={16} value={14.9} units={'A'} />,{' '}\n                    <ChannelValue fontSize={16} value={15} units={'A'} />\n                </span>\n            }\n        />\n        <InfoListItem\n            dense\n            title={'Temperature'}\n            divider={'full'}\n            icon={<Temp />}\n            rightComponent={\n                <ChannelValue fontSize={16} icon={<Leaf htmlColor={Colors.green[500]} />} value={68} units={'°F'} />\n            }\n        />\n    </List>\n);\n\ninAFullList.story = { name: 'in a full list' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/in-a-full-list.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}}));inAFullList.story={name:"in a full list"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"basicListItem",(function(){return basicListItem})),__webpack_require__.d(__webpack_exports__,"withIcon",(function(){return withIcon})),__webpack_require__.d(__webpack_exports__,"withLongText",(function(){return withLongText})),__webpack_require__.d(__webpack_exports__,"arrayForSubtitles",(function(){return arrayForSubtitles})),__webpack_require__.d(__webpack_exports__,"withAvatar",(function(){return withAvatar})),__webpack_require__.d(__webpack_exports__,"withStatusBackgroundColor",(function(){return withStatusBackgroundColor})),__webpack_require__.d(__webpack_exports__,"withCustomControl",(function(){return withCustomControl})),__webpack_require__.d(__webpack_exports__,"withCustomLeftComponent",(function(){return withCustomLeftComponent})),__webpack_require__.d(__webpack_exports__,"inAFullList",(function(){return inAFullList}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},infoListModule={title:constants.a+"/Info List Item",component:react_components.InfoListItem,decorators:[utils.e,function(storyFn){return react_default.a.createElement("div",{style:{margin:20,width:"90%",backgroundColor:"white"}},storyFn())}],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("InfoListItem.md")}})};__webpack_exports__.default=infoListModule},1163:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(38),utils=__webpack_require__(16),List=__webpack_require__(330),ListItem=__webpack_require__(1186),ListItemText=__webpack_require__(1203),dist=__webpack_require__(7),react=__webpack_require__(0),react_default=__webpack_require__.n(react),withBasicUsage=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:Object(dist.text)("headerTitle","Card Title")},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemText } from '@material-ui/core';\nimport { ScoreCard } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withBasicUsage = (): StoryFnReactReturnType => (\n    <ScoreCard style={{ width: 400, flex: '0 0 auto' }} headerTitle={text('headerTitle', 'Card Title')}>\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithBasicUsage.story = { name: 'with basic usage' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}}));withBasicUsage.story={name:"with basic usage"};var colors_dist=__webpack_require__(11),with_custom_header_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),backgroundImage=__webpack_require__(147),withCustomHeader=with_custom_header_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:Object(dist.text)("headerTitle","Card Title"),headerSubtitle:Object(dist.text)("headerSubtitle","Card Subtitle"),headerInfo:Object(dist.text)("headerInfo","4 Devices"),headerColor:Object(dist.color)("headerColor",colors_dist.red[500]),headerFontColor:Object(dist.color)("headerFontColor",colors_dist.white[50]),headerBackgroundImage:backgroundImage},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemText } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { ScoreCard } from '@pxblue/react-components';\nimport { color, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const withCustomHeader = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={text('headerTitle', 'Card Title')}\n        headerSubtitle={text('headerSubtitle', 'Card Subtitle')}\n        headerInfo={text('headerInfo', '4 Devices')}\n        headerColor={color('headerColor', Colors.red[500])}\n        headerFontColor={color('headerFontColor', Colors.white[50])}\n        headerBackgroundImage={backgroundImage}\n    >\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithCustomHeader.story = { name: 'with custom header' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-header.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withCustomHeader.story={name:"with custom header"};var ListItemSecondaryAction=__webpack_require__(1202),ChevronRight=__webpack_require__(529),MoreVert=__webpack_require__(540),Search=__webpack_require__(545),Mail=__webpack_require__(539),Notifications=__webpack_require__(541),ListAlt=__webpack_require__(538),Cloud=__webpack_require__(530),addon_actions_dist=__webpack_require__(25),with_actions_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),with_actions_backgroundImage=__webpack_require__(147),actionRow=react_default.a.createElement(List.a,{style:{cursor:"pointer"}},react_default.a.createElement(ListItem.a,{onClick:Object(addon_actions_dist.action)("view location")},react_default.a.createElement(ListItemText.a,{primary:"View Location"}),react_default.a.createElement(ListItemSecondaryAction.a,null,react_default.a.createElement(ChevronRight.a,null)))),actionItems=[react_default.a.createElement(MoreVert.a,{onClick:Object(addon_actions_dist.action)("clicked more"),key:"morevert"}),react_default.a.createElement(Search.a,{onClick:Object(addon_actions_dist.action)("clicked search"),key:"search"}),react_default.a.createElement(Mail.a,{onClick:Object(addon_actions_dist.action)("clicked mail"),key:"mail"}),react_default.a.createElement(Notifications.a,{onClick:Object(addon_actions_dist.action)("clicked alarms"),key:"notifications"}),react_default.a.createElement(ListAlt.a,{onClick:Object(addon_actions_dist.action)("clicked list"),key:"listalt"}),react_default.a.createElement(Cloud.a,{onClick:Object(addon_actions_dist.action)("clicked cloud"),key:"cloud"})],withActions=with_actions_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:"Substation 3",headerSubtitle:"High Humidity Alarm",headerInfo:"4 Devices",headerColor:colors_dist.red[500],headerFontColor:colors_dist.white[50],headerBackgroundImage:with_actions_backgroundImage,actionItems:actionItems,actionLimit:Object(dist.number)("actionLimit",3,{range:!0,min:1,max:6,step:1}),actionRow:actionRow},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\nimport { ChevronRight, Cloud, ListAlt, Mail, MoreVert, Notifications, Search } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { ScoreCard } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const actionRow = (\n    <List style={{ cursor: 'pointer' }}>\n        <ListItem onClick={action('view location')}>\n            <ListItemText primary=\"View Location\" />\n            <ListItemSecondaryAction>\n                <ChevronRight />\n            </ListItemSecondaryAction>\n        </ListItem>\n    </List>\n);\n\nexport const actionItems = [\n    <MoreVert onClick={action('clicked more')} key={'morevert'} />,\n    <Search onClick={action('clicked search')} key={'search'} />,\n    <Mail onClick={action('clicked mail')} key={'mail'} />,\n    <Notifications onClick={action('clicked alarms')} key={'notifications'} />,\n    <ListAlt onClick={action('clicked list')} key={'listalt'} />,\n    <Cloud onClick={action('clicked cloud')} key={'cloud'} />,\n];\n\nexport const withActions = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={'Substation 3'}\n        headerSubtitle={'High Humidity Alarm'}\n        headerInfo={'4 Devices'}\n        headerColor={Colors.red[500]}\n        headerFontColor={Colors.white[50]}\n        headerBackgroundImage={backgroundImage}\n        actionItems={actionItems}\n        actionLimit={number('actionLimit', 3, { range: true, min: 1, max: 6, step: 1 })}\n        actionRow={actionRow}\n    >\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithActions.story = { name: 'with actions' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-actions.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withActions.story={name:"with actions"};var icons_mui=__webpack_require__(23),with_heroes_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),with_heroes_backgroundImage=__webpack_require__(147),heroes=[react_default.a.createElement(react_components.Hero,{key:"hero1",icon:react_default.a.createElement(icons_mui.Temp,{fontSize:"inherit",htmlColor:colors_dist.black[500]}),label:"Temperature",iconSize:48,iconBackgroundColor:colors_dist.white[50],value:98,units:"°F",fontSize:"normal"}),react_default.a.createElement(react_components.Hero,{key:"hero2",icon:react_default.a.createElement(icons_mui.Moisture,{fontSize:"inherit",htmlColor:colors_dist.blue[300]}),label:"Humidity",value:54,iconBackgroundColor:colors_dist.white[50],units:"%",iconSize:48,fontSize:"normal"})],withHeroes=with_heroes_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:"Substation 3",headerSubtitle:"High Humidity Alarm",headerInfo:"4 Devices",headerColor:colors_dist.red[500],headerFontColor:colors_dist.white[50],headerBackgroundImage:with_heroes_backgroundImage,actionItems:[react_default.a.createElement(MoreVert.a,{onClick:Object(addon_actions_dist.action)("clicked more"),key:"morevert"})],actionRow:actionRow,badge:react_default.a.createElement(react_components.HeroBanner,null,heroes.slice(0,Object(dist.number)("Number of Heroes",1,{range:!0,min:0,max:2,step:1}))),badgeOffset:0},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemText } from '@material-ui/core';\nimport { MoreVert } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { Moisture as Humidity, Temp } from '@pxblue/icons-mui';\nimport { Hero, HeroBanner, ScoreCard } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { actionRow } from './with-actions';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const heroes: JSX.Element[] = [\n    <Hero\n        key={'hero1'}\n        icon={<Temp fontSize={'inherit'} htmlColor={Colors.black[500]} />}\n        label={'Temperature'}\n        iconSize={48}\n        iconBackgroundColor={Colors.white[50]}\n        value={98}\n        units={'°F'}\n        fontSize={'normal'}\n    />,\n    <Hero\n        key={'hero2'}\n        icon={<Humidity fontSize={'inherit'} htmlColor={Colors.blue[300]} />}\n        label={'Humidity'}\n        value={54}\n        iconBackgroundColor={Colors.white[50]}\n        units={'%'}\n        iconSize={48}\n        fontSize={'normal'}\n    />,\n];\n\nexport const withHeroes = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={'Substation 3'}\n        headerSubtitle={'High Humidity Alarm'}\n        headerInfo={'4 Devices'}\n        headerColor={Colors.red[500]}\n        headerFontColor={Colors.white[50]}\n        headerBackgroundImage={backgroundImage}\n        actionItems={[<MoreVert onClick={action('clicked more')} key={'morevert'} />]}\n        actionRow={actionRow}\n        badge={\n            <HeroBanner>\n                {heroes.slice(0, number('Number of Heroes', 1, { range: true, min: 0, max: 2, step: 1 }))}\n            </HeroBanner>\n        }\n        badgeOffset={0}\n    >\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithHeroes.story = { name: 'with heroes' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-heroes.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withHeroes.story={name:"with heroes"};__webpack_require__(13).withSource;var with_score_badge_addSourceDecorator=__webpack_require__(13).addSource,with_score_badge_backgroundImage=__webpack_require__(147),withScoreBadge=with_score_badge_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:"Substation 3",headerSubtitle:"Normal",headerInfo:"4 Devices",headerFontColor:colors_dist.white[50],headerBackgroundImage:with_score_badge_backgroundImage,actionItems:[react_default.a.createElement(MoreVert.a,{onClick:Object(addon_actions_dist.action)("clicked more"),key:"morevert"})],actionRow:react_default.a.createElement(List.a,{style:{cursor:"pointer"}},react_default.a.createElement(ListItem.a,{onClick:Object(addon_actions_dist.action)("view location")},react_default.a.createElement(ListItemText.a,{primary:"View Location"}),react_default.a.createElement(ListItemSecondaryAction.a,{style:{display:"flex"}},react_default.a.createElement(ChevronRight.a,null)))),badge:react_default.a.createElement(react_components.HeroBanner,null,react_default.a.createElement(react_components.Hero,{icon:react_default.a.createElement(icons_mui.GradeA,{fontSize:"inherit",htmlColor:colors_dist.green[500]}),label:"Grade",iconSize:72,iconBackgroundColor:colors_dist.white[50],value:"98",units:"/100",fontSize:"normal"})),badgeOffset:Object(dist.number)("badgeOffset",-52)},react_default.a.createElement(List.a,{style:{padding:"16px 0"}},react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"0 Alarms",icon:react_default.a.createElement(Notifications.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},fontColor:colors_dist.blue[500],iconColor:colors_dist.blue[500],title:"1 Event",icon:react_default.a.createElement(ListAlt.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"Online",icon:react_default.a.createElement(Cloud.a,{color:"inherit"})})))}),{__STORY__:"import { List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\nimport { ChevronRight, Cloud, ListAlt, MoreVert, Notifications } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { GradeA } from '@pxblue/icons-mui';\nimport { Hero, HeroBanner, InfoListItem, ScoreCard } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const withScoreBadge = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={'Substation 3'}\n        headerSubtitle={'Normal'}\n        headerInfo={'4 Devices'}\n        headerFontColor={Colors.white[50]}\n        headerBackgroundImage={backgroundImage}\n        actionItems={[<MoreVert onClick={action('clicked more')} key={'morevert'} />]}\n        actionRow={\n            <List style={{ cursor: 'pointer' }}>\n                <ListItem onClick={action('view location')}>\n                    <ListItemText primary=\"View Location\" />\n                    <ListItemSecondaryAction style={{ display: 'flex' }}>\n                        <ChevronRight />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        }\n        badge={\n            <HeroBanner>\n                <Hero\n                    icon={<GradeA fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n                    label={'Grade'}\n                    iconSize={72}\n                    iconBackgroundColor={Colors.white[50]}\n                    value={'98'}\n                    units={'/100'}\n                    fontSize={'normal'}\n                />\n            </HeroBanner>\n        }\n        badgeOffset={number('badgeOffset', -52)}\n    >\n        <List style={{ padding: '16px 0' }}>\n            <InfoListItem dense style={{ height: 36 }} title={'0 Alarms'} icon={<Notifications color={'inherit'} />} />\n            <InfoListItem\n                dense\n                style={{ height: 36 }}\n                fontColor={Colors.blue[500]}\n                iconColor={Colors.blue[500]}\n                title={'1 Event'}\n                icon={<ListAlt color={'inherit'} />}\n            />\n            <InfoListItem dense style={{ height: 36 }} title={'Online'} icon={<Cloud color={'inherit'} />} />\n        </List>\n    </ScoreCard>\n);\n\nwithScoreBadge.story = { name: 'with score badge' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-score-badge.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withScoreBadge.story={name:"with score badge"};__webpack_require__(13).withSource;var with_full_config_addSourceDecorator=__webpack_require__(13).addSource,with_full_config_backgroundImage=__webpack_require__(147),withFullConfig=with_full_config_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:Object(dist.text)("headerTitle","Substation 3"),headerSubtitle:Object(dist.text)("headerSubtitle","High Humidity Alarm"),headerInfo:Object(dist.text)("headerInfo","4 Devices"),headerColor:Object(dist.color)("headerColor",colors_dist.red[500]),headerFontColor:Object(dist.color)("headerFontColor",colors_dist.white[50]),headerBackgroundImage:Object(dist.boolean)("headerBackgroundImage",!0)?with_full_config_backgroundImage:void 0,actionLimit:Object(dist.number)("actionLimit",3,{range:!0,min:1,max:6,step:1}),actionItems:actionItems,actionRow:actionRow,badge:react_default.a.createElement(react_components.HeroBanner,null,heroes.slice(0,Object(dist.number)("Number of Heroes",1,{range:!0,min:0,max:2,step:1}))),badgeOffset:Object(dist.number)("badgeOffset",-40)},react_default.a.createElement(List.a,{style:{padding:"16px 0"}},react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"0 Alarms",icon:react_default.a.createElement(Notifications.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},fontColor:colors_dist.blue[500],iconColor:colors_dist.blue[500],title:"1 Event",icon:react_default.a.createElement(ListAlt.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"Online",icon:react_default.a.createElement(Cloud.a,{color:"inherit"})})))}),{__STORY__:"import { List } from '@material-ui/core';\nimport { Cloud, ListAlt, Notifications } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { HeroBanner, InfoListItem, ScoreCard } from '@pxblue/react-components';\nimport { boolean, color, number, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { actionItems, actionRow } from './with-actions';\nimport { heroes } from './with-heroes';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const withFullConfig = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={text('headerTitle', 'Substation 3')}\n        headerSubtitle={text('headerSubtitle', 'High Humidity Alarm')}\n        headerInfo={text('headerInfo', '4 Devices')}\n        headerColor={color('headerColor', Colors.red[500])}\n        headerFontColor={color('headerFontColor', Colors.white[50])}\n        headerBackgroundImage={boolean('headerBackgroundImage', true) ? backgroundImage : undefined}\n        actionLimit={number('actionLimit', 3, { range: true, min: 1, max: 6, step: 1 })}\n        actionItems={actionItems}\n        actionRow={actionRow}\n        badge={\n            <HeroBanner>\n                {heroes.slice(0, number('Number of Heroes', 1, { range: true, min: 0, max: 2, step: 1 }))}\n            </HeroBanner>\n        }\n        badgeOffset={number('badgeOffset', -40)}\n    >\n        <List style={{ padding: '16px 0' }}>\n            <InfoListItem dense style={{ height: 36 }} title={'0 Alarms'} icon={<Notifications color={'inherit'} />} />\n            <InfoListItem\n                dense\n                style={{ height: 36 }}\n                fontColor={Colors.blue[500]}\n                iconColor={Colors.blue[500]}\n                title={'1 Event'}\n                icon={<ListAlt color={'inherit'} />}\n            />\n            <InfoListItem dense style={{ height: 36 }} title={'Online'} icon={<Cloud color={'inherit'} />} />\n        </List>\n    </ScoreCard>\n);\n\nwithFullConfig.story = { name: 'with full config' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withFullConfig.story={name:"with full config"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withCustomHeader",(function(){return withCustomHeader})),__webpack_require__.d(__webpack_exports__,"withActions",(function(){return withActions})),__webpack_require__.d(__webpack_exports__,"withHeroes",(function(){return withHeroes})),__webpack_require__.d(__webpack_exports__,"withScoreBadge",(function(){return withScoreBadge})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},scorecardModule={title:constants.a+"/Scorecard",component:react_components.ScoreCard,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("ScoreCard.md")}})};__webpack_exports__.default=scorecardModule},1164:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(38),utils=__webpack_require__(16),Avatar=__webpack_require__(1206),Settings=__webpack_require__(546),Email=__webpack_require__(533),Send=__webpack_require__(117),Send_default=__webpack_require__.n(Send),dist=__webpack_require__(25),addon_knobs_dist=__webpack_require__(7),react=__webpack_require__(0),react_default=__webpack_require__.n(react),addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),menuItems=[{fontColor:"",items:[{title:"Log Out",icon:react_default.a.createElement(Send_default.a,null),itemID:"Log Out",onClick:Object(dist.action)("Log Out Selected")},{title:"Account Settings",itemID:"Account Settings",icon:react_default.a.createElement(Settings.a,null),onClick:Object(dist.action)("Account Settings Selected")},{title:"Contact Us",itemID:"Contact Us",icon:react_default.a.createElement(Email.a,null),onClick:Object(dist.action)("Contact Us Selected")}]}],withDefaultColors=addSourceDecorator((function(){var value=Object(addon_knobs_dist.text)("value","AB"),avatar=react_default.a.createElement(Avatar.a,null,value);return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:menuItems})}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport { Email, Settings } from '@material-ui/icons';\nimport SendIcon from '@material-ui/icons/Send';\nimport { UserMenu, UserMenuGroup } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const menuItems: UserMenuGroup[] = [\n    {\n        fontColor: '',\n        items: [\n            {\n                title: 'Log Out',\n                icon: <SendIcon />,\n                itemID: 'Log Out',\n                onClick: action('Log Out Selected'),\n            },\n            {\n                title: 'Account Settings',\n                itemID: 'Account Settings',\n                icon: <Settings />,\n                onClick: action('Account Settings Selected'),\n            },\n            {\n                title: 'Contact Us',\n                itemID: 'Contact Us',\n                icon: <Email />,\n                onClick: action('Contact Us Selected'),\n            },\n        ],\n    },\n];\n\nexport const withDefaultColors = (): StoryFnReactReturnType => {\n    const value = text('value', 'AB');\n    const avatar = <Avatar>{value}</Avatar>;\n    return <UserMenu avatar={avatar} menuGroups={menuItems} />;\n};\n\nwithDefaultColors.story = { name: 'with default colors ' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-default-colors.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withDefaultColors.story={name:"with default colors "};var makeStyles=__webpack_require__(188),colors_dist=__webpack_require__(11),withCustomColors=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){var classes=Object(makeStyles.a)({root:{color:Object(addon_knobs_dist.color)("fontColor",colors_dist.white[50],"Avatar"),backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.blue[800],"Avatar")},paper:{backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.blue[50],"Menu")}})(),avatar=react_default.a.createElement(Avatar.a,{classes:{root:classes.root}},"CD"),items=menuItems[0];return items.fontColor=Object(addon_knobs_dist.color)("fontColor",colors_dist.gray[500],"Menu"),items.iconColor=Object(addon_knobs_dist.color)("iconColor",colors_dist.blue[800],"Menu"),react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:[items],MenuProps:{classes:{paper:classes.paper}}})}),{__STORY__:"import React from 'react';\nimport { Avatar, makeStyles } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { UserMenu } from '@pxblue/react-components';\nimport { color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport { menuItems } from './with-default-colors';\n\nexport const withCustomColors = (): StoryFnReactReturnType => {\n    const useStyles = makeStyles({\n        root: {\n            color: color('fontColor', Colors.white[50], 'Avatar'),\n            backgroundColor: color('backgroundColor', Colors.blue[800], 'Avatar'),\n        },\n        paper: {\n            backgroundColor: color('backgroundColor', Colors.blue[50], 'Menu'),\n        },\n    });\n    const classes = useStyles();\n    const avatar = <Avatar classes={{ root: classes.root }}>CD</Avatar>;\n    const items = menuItems[0];\n    items.fontColor = color('fontColor', Colors.gray[500], 'Menu');\n    items.iconColor = color('iconColor', Colors.blue[800], 'Menu');\n\n    return <UserMenu avatar={avatar} menuGroups={[items]} MenuProps={{ classes: { paper: classes.paper } }} />;\n};\n\nwithCustomColors.story = { name: 'with custom colors' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-colors.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}}));withCustomColors.story={name:"with custom colors"};var SvgIcon=__webpack_require__(248),SvgIcon_default=__webpack_require__.n(SvgIcon),with_non_text_avatar_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),tRex=__webpack_require__(556),withNonTextAvatar=with_non_text_avatar_addSourceDecorator((function(){var tRexAvatar=react_default.a.createElement(Avatar.a,{src:tRex}),iconAvatar=react_default.a.createElement(Avatar.a,null,react_default.a.createElement(SvgIcon_default.a,null));return react_default.a.createElement("div",{style:{display:"flex",width:"100px",justifyContent:"space-between"}},react_default.a.createElement(react_components.UserMenu,{avatar:tRexAvatar,menuGroups:menuItems}),react_default.a.createElement(react_components.UserMenu,{avatar:iconAvatar,menuGroups:menuItems}))}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport SendIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport { UserMenu } from '@pxblue/react-components';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { menuItems } from './with-default-colors';\nconst tRex = require('../../assets/trex.jpeg');\n\nexport const withNonTextAvatar = (): StoryFnReactReturnType => {\n    const tRexAvatar = <Avatar src={tRex} />;\n    const iconAvatar = (\n        <Avatar>\n            <SendIcon />\n        </Avatar>\n    );\n    return (\n        <div style={{ display: 'flex', width: '100px', justifyContent: 'space-between' }}>\n            <UserMenu avatar={tRexAvatar} menuGroups={menuItems} />\n            <UserMenu avatar={iconAvatar} menuGroups={menuItems} />\n        </div>\n    );\n};\n\nwithNonTextAvatar.story = { name: 'with non-text avatar' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-non-text-avatar.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withNonTextAvatar.story={name:"with non-text avatar"};__webpack_require__(13).withSource;var withMenuHeader=(0,__webpack_require__(13).addSource)((function(){var avatar=react_default.a.createElement(Avatar.a,null,"EM"),menuTitle=Object(addon_knobs_dist.text)("menuTitle","Menu Title"),menuSubtitle=Object(addon_knobs_dist.text)("menuSubtitle","Menu Subtitle");return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:menuItems,menuTitle:menuTitle,menuSubtitle:menuSubtitle})}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport { UserMenu } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { menuItems } from './with-default-colors';\n\nexport const withMenuHeader = (): StoryFnReactReturnType => {\n    const avatar = <Avatar>EM</Avatar>;\n    const menuTitle = text('menuTitle', 'Menu Title');\n    const menuSubtitle = text('menuSubtitle', 'Menu Subtitle');\n    return <UserMenu avatar={avatar} menuGroups={menuItems} menuTitle={menuTitle} menuSubtitle={menuSubtitle} />;\n};\n\nwithMenuHeader.story = { name: 'with menu headers' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-menu-header.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withMenuHeader.story={name:"with menu headers"};__webpack_require__(13).withSource;var withMenuPlacementOptions=(0,__webpack_require__(13).addSource)((function(){var avatar=react_default.a.createElement(Avatar.a,null,"CD"),items=menuItems[0],anchorOriginHorizontal=Object(addon_knobs_dist.select)("anchorOrigin.horizontal",["left","center","right"],"left"),anchorOriginVertical=Object(addon_knobs_dist.select)("anchorOrigin.vertical",["top","center","bottom"],"top"),transformOriginHorizontal=Object(addon_knobs_dist.select)("transformOrigin.horizontal",["left","center","right"],"left"),transformOriginVertical=Object(addon_knobs_dist.select)("transformOrigin.vertical",["top","center","bottom"],"top");return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:[items],MenuProps:{anchorOrigin:{horizontal:anchorOriginHorizontal,vertical:anchorOriginVertical},transformOrigin:{horizontal:transformOriginHorizontal,vertical:transformOriginVertical}}})}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport { UserMenu } from '@pxblue/react-components';\nimport { select } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { menuItems } from './with-default-colors';\n\nexport const withMenuPlacementOptions = (): StoryFnReactReturnType => {\n    const avatar = <Avatar>CD</Avatar>;\n    const items = menuItems[0];\n\n    const anchorOriginHorizontal = select('anchorOrigin.horizontal', ['left', 'center', 'right'], 'left');\n    const anchorOriginVertical = select('anchorOrigin.vertical', ['top', 'center', 'bottom'], 'top');\n    const transformOriginHorizontal = select('transformOrigin.horizontal', ['left', 'center', 'right'], 'left');\n    const transformOriginVertical = select('transformOrigin.vertical', ['top', 'center', 'bottom'], 'top');\n\n    return (\n        <UserMenu\n            avatar={avatar}\n            menuGroups={[items]}\n            MenuProps={{\n                anchorOrigin: { horizontal: anchorOriginHorizontal, vertical: anchorOriginVertical },\n                transformOrigin: { horizontal: transformOriginHorizontal, vertical: transformOriginVertical },\n            }}\n        />\n    );\n};\n\nwithMenuPlacementOptions.story = { name: 'with menu placement options' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-menu-placement-options.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withMenuPlacementOptions.story={name:"with menu placement options"};var Menu=__webpack_require__(560),Typography=__webpack_require__(84),Divider=__webpack_require__(518),MenuItem=__webpack_require__(1204),storybook_state_dist=__webpack_require__(51),with_custom_menu_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),EatonLogo=__webpack_require__(235),with_custom_menu_tRex=__webpack_require__(556),store=new storybook_state_dist.Store({open:!1}),withCustomMenu=with_custom_menu_addSourceDecorator((function(){var open=function(){store.set({open:!0})},close=function(){store.set({open:!1})},avatar=react_default.a.createElement(Avatar.a,{src:with_custom_menu_tRex});store.set({open:!1});var menu=function(state){return react_default.a.createElement(Menu.a,{open:state.open,onClose:close},react_default.a.createElement("div",{key:"header",style:{position:"relative",padding:10}},react_default.a.createElement(Typography.a,{variant:"h6"},"Welcome, "),react_default.a.createElement(Typography.a,{style:{fontWeight:600,marginTop:"-10px"},variant:"h3"},"T-Rex"),react_default.a.createElement("div",{style:{position:"absolute",right:0,top:0,height:"100%",width:"100%",opacity:.2,backgroundSize:"cover",backgroundImage:"url("+with_custom_menu_tRex+")"}})),react_default.a.createElement(Divider.a,{key:"divider-1"}),react_default.a.createElement(MenuItem.a,{onClick:close,key:"account"},"My Account"),react_default.a.createElement(MenuItem.a,{onClick:close,key:"logout"},"Logout"),react_default.a.createElement(Divider.a,{key:"divider-2"}),react_default.a.createElement("img",{key:"footer",alt:"tRex",style:{textAlign:"center",padding:"12px 16px 0 16px",height:40},src:EatonLogo}))};return react_default.a.createElement(storybook_state_dist.State,{store:store},(function(state){return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,onOpen:open,menu:menu(state)})}))}),{__STORY__:"import { Avatar, Divider, Menu, MenuItem, Typography } from '@material-ui/core';\nimport { UserMenu } from '@pxblue/react-components';\nimport { State, Store } from '@sambego/storybook-state';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nconst EatonLogo = require('../../assets/EatonLogo.svg');\nconst tRex = require('../../assets/trex.jpeg');\n\ntype UserMenuState = {\n    open: boolean;\n};\nconst store = new Store<UserMenuState>({\n    open: false,\n});\n\nexport const withCustomMenu = (): StoryFnReactReturnType => {\n    const open = (): void => {\n        store.set({ open: true });\n    };\n    const close = (): void => {\n        store.set({ open: false });\n    };\n    const avatar = <Avatar src={tRex} />;\n    store.set({ open: false });\n    const menu = (state: any): JSX.Element => (\n        <Menu open={state.open} onClose={close}>\n            <div key={'header'} style={{ position: 'relative', padding: 10 }}>\n                <Typography variant={'h6'}>Welcome, </Typography>\n                <Typography style={{ fontWeight: 600, marginTop: '-10px' }} variant={'h3'}>\n                    T-Rex\n                </Typography>\n                <div\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        height: '100%',\n                        width: '100%',\n                        opacity: 0.2,\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${tRex})`,\n                    }}\n                />\n            </div>\n            <Divider key={'divider-1'} />\n            <MenuItem onClick={close} key={'account'}>\n                My Account\n            </MenuItem>\n            <MenuItem onClick={close} key={'logout'}>\n                Logout\n            </MenuItem>\n            <Divider key={'divider-2'} />\n            <img\n                key={'footer'}\n                alt={'tRex'}\n                style={{ textAlign: 'center', padding: '12px 16px 0 16px', height: 40 }}\n                src={EatonLogo}\n            />\n        </Menu>\n    );\n\n    return (\n        <State store={store}>\n            {(state): JSX.Element => <UserMenu avatar={avatar} onOpen={open} menu={menu(state)} />}\n        </State>\n    );\n};\n\nwithCustomMenu.story = { name: 'with custom menu' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-menu.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withCustomMenu.story={name:"with custom menu"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withDefaultColors",(function(){return withDefaultColors})),__webpack_require__.d(__webpack_exports__,"withCustomColors",(function(){return withCustomColors})),__webpack_require__.d(__webpack_exports__,"withNonTextAvatar",(function(){return withNonTextAvatar})),__webpack_require__.d(__webpack_exports__,"withMenuHeader",(function(){return withMenuHeader})),__webpack_require__.d(__webpack_exports__,"withMenuPlacementOptions",(function(){return withMenuPlacementOptions})),__webpack_require__.d(__webpack_exports__,"withCustomMenu",(function(){return withCustomMenu}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},userMenuModule={title:constants.a+"/User Menu",component:react_components.UserMenu,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:__webpack_require__(515)}})};__webpack_exports__.default=userMenuModule},1165:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(38),utils=__webpack_require__(16),dist=__webpack_require__(7),react=__webpack_require__(0),react_default=__webpack_require__.n(react),withValue=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value",Object(dist.text)("value","123"))})}),{__STORY__:"import { ChannelValue } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withValue = (): StoryFnReactReturnType => <ChannelValue value={text('value', text('value', '123'))} />;\n\nwithValue.story = { name: 'with value' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-value.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}}));withValue.story={name:"with value"};__webpack_require__(13).withSource;var withUnits=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value",Object(dist.text)("value","123")),units:Object(dist.text)("units","hz")})}),{__STORY__:"import { ChannelValue } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withUnits = (): StoryFnReactReturnType => (\n    <ChannelValue value={text('value', text('value', '123'))} units={text('units', 'hz')} />\n);\n\nwithUnits.story = { name: 'with units' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-units.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}});withUnits.story={name:"with units"};var TrendingUp=__webpack_require__(116),TrendingUp_default=__webpack_require__.n(TrendingUp),colors_dist=__webpack_require__(11),withIcon=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value",Object(dist.text)("value","123")),units:Object(dist.text)("units","hz"),icon:react_default.a.createElement(TrendingUp_default.a,{htmlColor:colors_dist.red[500]})})}),{__STORY__:"import Trend from '@material-ui/icons/TrendingUp';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withIcon = (): StoryFnReactReturnType => (\n    <ChannelValue\n        value={text('value', text('value', '123'))}\n        units={text('units', 'hz')}\n        icon={<Trend htmlColor={Colors.red[500]} />}\n    />\n);\n\nwithIcon.story = { name: 'with icon' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-icon.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}}));withIcon.story={name:"with icon"};__webpack_require__(13).withSource;var withExtraLargeFontSize=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value",Object(dist.text)("value","123")),units:Object(dist.text)("units","hz"),icon:react_default.a.createElement(TrendingUp_default.a,{htmlColor:colors_dist.red[500]}),fontSize:Object(dist.number)("font size",30)})}),{__STORY__:"import Trend from '@material-ui/icons/TrendingUp';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue } from '@pxblue/react-components';\nimport { number, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withExtraLargeFontSize = (): StoryFnReactReturnType => (\n    <ChannelValue\n        value={text('value', text('value', '123'))}\n        units={text('units', 'hz')}\n        icon={<Trend htmlColor={Colors.red[500]} />}\n        fontSize={number('font size', 30)}\n    />\n);\n\nwithExtraLargeFontSize.story = { name: 'with extraLarge font size' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-extraLarge-font-size.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}});withExtraLargeFontSize.story={name:"with extraLarge font size"};__webpack_require__(13).withSource;var withAllProps=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value",Object(dist.text)("value","123")),units:Object(dist.text)("units","hz"),color:Object(dist.color)("textColor",colors_dist.red[500]),icon:react_default.a.createElement(TrendingUp_default.a,{htmlColor:colors_dist.red[500]}),fontSize:Object(dist.number)("font size",30),prefix:Object(dist.boolean)("prefix",!1)})}),{__STORY__:"import Trend from '@material-ui/icons/TrendingUp';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue } from '@pxblue/react-components';\nimport { boolean, color, number, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withAllProps = (): StoryFnReactReturnType => (\n    <ChannelValue\n        value={text('value', text('value', '123'))}\n        units={text('units', 'hz')}\n        color={color('textColor', Colors.red[500])}\n        icon={<Trend htmlColor={Colors.red[500]} />}\n        fontSize={number('font size', 30)}\n        prefix={boolean('prefix', false)}\n    />\n);\n\nwithAllProps.story = { name: 'with all props' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-all-props.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}});withAllProps.story={name:"with all props"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withValue",(function(){return withValue})),__webpack_require__.d(__webpack_exports__,"withUnits",(function(){return withUnits})),__webpack_require__.d(__webpack_exports__,"withIcon",(function(){return withIcon})),__webpack_require__.d(__webpack_exports__,"withExtraLargeFontSize",(function(){return withExtraLargeFontSize})),__webpack_require__.d(__webpack_exports__,"withAllProps",(function(){return withAllProps}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},channelValueModule={title:constants.a+"/Channel Value",component:react_components.ChannelValue,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("ChannelValue.md")}})};__webpack_exports__.default=channelValueModule},1166:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),react=__webpack_require__(0),react_default=__webpack_require__.n(react),constants=__webpack_require__(38),utils=__webpack_require__(16),Typography=__webpack_require__(84),AddAPhoto=__webpack_require__(526),Accessibility=__webpack_require__(524),NotificationsActive=__webpack_require__(542),Send=__webpack_require__(117),Send_default=__webpack_require__.n(Send),Menu=__webpack_require__(91),Menu_default=__webpack_require__.n(Menu),Drawer=__webpack_require__(36),dist=__webpack_require__(51),addon_knobs_dist=__webpack_require__(7),addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),farmBgImage=__webpack_require__(990),store=new dist.Store({selected:""}),withCustomHeader=addSourceDecorator((function(){var open=Object(addon_knobs_dist.boolean)("Open",!0);return react_default.a.createElement(dist.State,{store:store},(function(state){return[react_default.a.createElement(Drawer.Drawer,{open:open,key:"drawer"},react_default.a.createElement(Drawer.DrawerHeader,{backgroundImage:farmBgImage,backgroundOpacity:.5,icon:react_default.a.createElement(Menu_default.a,null),titleContent:react_default.a.createElement("div",{style:{zIndex:1,paddingLeft:"20px",paddingTop:"15px"}},react_default.a.createElement(Typography.a,{variant:"subtitle2"},"Customizable"),react_default.a.createElement(Typography.a,{variant:"h6",style:{marginTop:"-10px"}},"Header Content Goes Here"))}),react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{title:"Default Navigation Group",activeItem:state.selected,items:[{title:"User Guide",itemID:"User Guide",onClick:function(){store.set({selected:"User Guide"})},icon:react_default.a.createElement(AddAPhoto.a,null)},{title:"License",itemID:"License",onClick:function(){store.set({selected:"License"})},icon:react_default.a.createElement(Send_default.a,null)},{title:"Accessibility",itemID:"Accessibility",onClick:function(){store.set({selected:"Accessibility"})},icon:react_default.a.createElement(Accessibility.a,null)},{title:"Notifications",itemID:"Notifications",onClick:function(){store.set({selected:"Notifications"})},icon:react_default.a.createElement(NotificationsActive.a,null)}]}),react_default.a.createElement("div",{style:{flex:"1 1 0px"}})))]}))}),{__STORY__:"import { Typography } from '@material-ui/core';\nimport { Accessibility, AddAPhoto, NotificationsActive } from '@material-ui/icons';\nimport SendIcon from '@material-ui/icons/Send';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Drawer, DrawerBody, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components/core/Drawer';\nimport { State, Store } from '@sambego/storybook-state';\nimport { boolean } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst farmBgImage = require('../../assets/farm.jpg');\n\ntype DrawerState = {\n    selected: string;\n};\n\nconst store = new Store<DrawerState>({\n    selected: '',\n});\n\nconst userGuide = 'User Guide';\nconst accessibility = 'Accessibility';\nconst notifications = 'Notifications';\nconst license = 'License';\n\nexport const withCustomHeader = (): StoryFnReactReturnType => {\n    const open = boolean('Open', true);\n    return (\n        <State store={store}>\n            {(state): JSX.Element[] => [\n                <Drawer open={open} key={'drawer'}>\n                    <DrawerHeader\n                        backgroundImage={farmBgImage}\n                        backgroundOpacity={0.5}\n                        icon={<MenuIcon />}\n                        titleContent={\n                            <div style={{ zIndex: 1, paddingLeft: '20px', paddingTop: '15px' }}>\n                                <Typography variant=\"subtitle2\">Customizable</Typography>\n                                <Typography variant=\"h6\" style={{ marginTop: '-10px' }}>\n                                    Header Content Goes Here\n                                </Typography>\n                            </div>\n                        }\n                    />\n                    <DrawerBody>\n                        <DrawerNavGroup\n                            title={'Default Navigation Group'}\n                            activeItem={state.selected}\n                            items={[\n                                {\n                                    title: userGuide,\n                                    itemID: userGuide,\n                                    onClick: (): void => {\n                                        store.set({ selected: userGuide });\n                                    },\n                                    icon: <AddAPhoto />,\n                                },\n                                {\n                                    title: license,\n                                    itemID: license,\n                                    onClick: (): void => {\n                                        store.set({ selected: license });\n                                    },\n                                    icon: <SendIcon />,\n                                },\n                                {\n                                    title: accessibility,\n                                    itemID: accessibility,\n                                    onClick: (): void => {\n                                        store.set({ selected: accessibility });\n                                    },\n                                    icon: <Accessibility />,\n                                },\n                                {\n                                    title: notifications,\n                                    itemID: notifications,\n                                    onClick: (): void => {\n                                        store.set({ selected: notifications });\n                                    },\n                                    icon: <NotificationsActive />,\n                                },\n                            ]}\n                        />\n                        <div style={{ flex: '1 1 0px' }} />\n                    </DrawerBody>\n                </Drawer>,\n            ]}\n        </State>\n    );\n};\n\nwithCustomHeader.story = { name: 'with custom header' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-header.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withCustomHeader.story={name:"with custom header"};var TextField=__webpack_require__(1205),IconButton=__webpack_require__(328),ExpansionPanel=__webpack_require__(1207),ExpansionPanelSummary=__webpack_require__(1200),ExpansionPanelDetails=__webpack_require__(1199),InputAdornment=__webpack_require__(1201),SvgIcon=__webpack_require__(248),SvgIcon_default=__webpack_require__.n(SvgIcon),Search=__webpack_require__(545),with_subheader_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),with_subheader_store=new dist.Store({selected:""}),withSubheader=with_subheader_addSourceDecorator((function(){var open=Object(addon_knobs_dist.boolean)("Open",!0),value=Object(addon_knobs_dist.optionsKnob)("content",{Filter:"Filter",Accordion:"Accordion"},"Filter",{display:"inline-radio"}),filter=react_default.a.createElement(TextField.a,{id:"outlined-basic",label:"filter",variant:"outlined",fullWidth:!0,InputProps:{endAdornment:react_default.a.createElement(InputAdornment.a,{position:"end"},react_default.a.createElement(IconButton.a,null,react_default.a.createElement(Search.a,null)))}}),accordion=react_default.a.createElement(ExpansionPanel.a,null,react_default.a.createElement(ExpansionPanelSummary.a,{expandIcon:react_default.a.createElement(SvgIcon_default.a,null),"aria-controls":"panel1a-content",id:"panel1a-header"},react_default.a.createElement(Typography.a,null,"Expansion Panel 1")),react_default.a.createElement(ExpansionPanelDetails.a,null,react_default.a.createElement(Typography.a,null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget.")));return react_default.a.createElement(dist.State,{store:with_subheader_store},(function(state){return[react_default.a.createElement(Drawer.Drawer,{open:open,key:"drawer"},react_default.a.createElement(Drawer.DrawerHeader,{icon:react_default.a.createElement(Menu_default.a,null),title:"Subheader Demo"}),react_default.a.createElement(Drawer.DrawerSubheader,null,react_default.a.createElement("div",{style:{display:"flex",justifyContent:"center",padding:"20px"}},"Filter"===value?filter:accordion)),react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{title:"Default Navigation Group",activeItem:state.selected,items:[{title:"User Guide",itemID:"User Guide",onClick:function(){with_subheader_store.set({selected:"User Guide"})},icon:react_default.a.createElement(AddAPhoto.a,null)},{title:"License",itemID:"License",onClick:function(){with_subheader_store.set({selected:"License"})},icon:react_default.a.createElement(Send_default.a,null)},{title:"Accessibility",itemID:"Accessibility",onClick:function(){with_subheader_store.set({selected:"Accessibility"})},icon:react_default.a.createElement(Accessibility.a,null)},{title:"Notifications",itemID:"Notifications",onClick:function(){with_subheader_store.set({selected:"Notifications"})},icon:react_default.a.createElement(NotificationsActive.a,null)}]}),react_default.a.createElement("div",{style:{flex:"1 1 0px"}})))]}))}),{__STORY__:"import {\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    IconButton,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ExpandMoreIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport { Accessibility, NotificationsActive, Search, AddAPhoto } from '@material-ui/icons';\nimport SendIcon from '@material-ui/icons/Send';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerNavGroup,\n    DrawerSubheader,\n} from '@pxblue/react-components/core/Drawer';\nimport { State, Store } from '@sambego/storybook-state';\nimport { boolean, optionsKnob } from '@storybook/addon-knobs';\nimport { OptionsKnobOptionsDisplay } from '@storybook/addon-knobs/dist/components/types/Options';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\ntype DrawerState = {\n    selected: string;\n};\n\nconst store = new Store<DrawerState>({\n    selected: '',\n});\n\nconst userGuide = 'User Guide';\nconst accessibility = 'Accessibility';\nconst notifications = 'Notifications';\nconst license = 'License';\n\nexport const withSubheader = (): StoryFnReactReturnType => {\n    const open = boolean('Open', true);\n    const label = 'content';\n    const valuesObj = {\n        Filter: 'Filter',\n        Accordion: 'Accordion',\n    };\n    const defaultValue = 'Filter';\n    const optionsObj = {\n        display: 'inline-radio' as OptionsKnobOptionsDisplay,\n    };\n\n    const value = optionsKnob(label, valuesObj, defaultValue, optionsObj);\n\n    const filter = (\n        <TextField\n            id=\"outlined-basic\"\n            label=\"filter\"\n            variant=\"outlined\"\n            fullWidth\n            InputProps={{\n                endAdornment: (\n                    <InputAdornment position=\"end\">\n                        <IconButton>\n                            <Search />\n                        </IconButton>\n                    </InputAdornment>\n                ),\n            }}\n        />\n    );\n    const accordion = (\n        <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n                <Typography>Expansion Panel 1</Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n                <Typography>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet\n                    blandit leo lobortis eget.\n                </Typography>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n\n    return (\n        <State store={store}>\n            {(state): JSX.Element[] => [\n                <Drawer open={open} key={'drawer'}>\n                    <DrawerHeader icon={<MenuIcon />} title={'Subheader Demo'} />\n                    <DrawerSubheader>\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'center',\n                                padding: '20px',\n                            }}\n                        >\n                            {value === 'Filter' ? filter : accordion}\n                        </div>\n                    </DrawerSubheader>\n                    <DrawerBody>\n                        <DrawerNavGroup\n                            title={'Default Navigation Group'}\n                            activeItem={state.selected}\n                            items={[\n                                {\n                                    title: userGuide,\n                                    itemID: userGuide,\n                                    onClick: (): void => {\n                                        store.set({ selected: userGuide });\n                                    },\n                                    icon: <AddAPhoto />,\n                                },\n                                {\n                                    title: license,\n                                    itemID: license,\n                                    onClick: (): void => {\n                                        store.set({ selected: license });\n                                    },\n                                    icon: <SendIcon />,\n                                },\n                                {\n                                    title: accessibility,\n                                    itemID: accessibility,\n                                    onClick: (): void => {\n                                        store.set({ selected: accessibility });\n                                    },\n                                    icon: <Accessibility />,\n                                },\n                                {\n                                    title: notifications,\n                                    itemID: notifications,\n                                    onClick: (): void => {\n                                        store.set({ selected: notifications });\n                                    },\n                                    icon: <NotificationsActive />,\n                                },\n                            ]}\n                        />\n                        <div style={{ flex: '1 1 0px' }} />\n                    </DrawerBody>\n                </Drawer>,\n            ]}\n        </State>\n    );\n};\n\nwithSubheader.story = { name: 'with subheader' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-subheader.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withSubheader.story={name:"with subheader"};var Add=__webpack_require__(525),PinDrop=__webpack_require__(543),Remove=__webpack_require__(544),FitnessCenter=__webpack_require__(534),colors_dist=__webpack_require__(11),with_nested_list_items_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),with_nested_list_items_store=new dist.Store({selected:""}),withNestedListItems=with_nested_list_items_addSourceDecorator((function(){var open=Object(addon_knobs_dist.boolean)("Open",!0,"DrawerNavGroup"),divider=Object(addon_knobs_dist.boolean)("divider",!0,"DrawerNavGroup"),nestedDivider=Object(addon_knobs_dist.boolean)("nestedDivider",!1,"DrawerNavGroup"),ripple=Object(addon_knobs_dist.boolean)("ripple",!0,"DrawerNavGroup"),chevron=Object(addon_knobs_dist.boolean)("chevron",!1,"DrawerNavGroup"),round=Object(addon_knobs_dist.select)("activeBackgroundShape",["round","square"],"round","DrawerNavGroup"),useIcon=Object(addon_knobs_dist.boolean)("Use icons",!0,"NavItem"),useRightComponent=Object(addon_knobs_dist.select)("rightComponent",["undefined","<ListItemTag />","<ChannelValue />"],"undefined","NavItem"),useExpandIcon=Object(addon_knobs_dist.select)("expandIcon",["undefined","<Add />","<PinDrop />"],"undefined","NavItem"),useCollapseIcon=Object(addon_knobs_dist.select)("collapseIcon",["undefined","<Remove />","<AddAPhoto />"],"undefined","NavItem"),rightComponent=function(){switch(useRightComponent){case"undefined":return;case"<ListItemTag />":return react_default.a.createElement(react_components.ListItemTag,{label:"56+",backgroundColor:colors_dist.gold[50],fontColor:colors_dist.gold[800]});case"<ChannelValue />":return react_default.a.createElement(react_components.ChannelValue,{value:2,units:"V"})}}(),expandIcon=function(){switch(useExpandIcon){case"undefined":return;case"<Add />":return react_default.a.createElement(Add.a,null);case"<PinDrop />":return react_default.a.createElement(PinDrop.a,null)}}(),collapseIcon=function(){switch(useCollapseIcon){case"undefined":return;case"<Remove />":return react_default.a.createElement(Remove.a,null);case"<AddAPhoto />":return react_default.a.createElement(AddAPhoto.a,null)}}(),drawerItemList=function(state){return react_default.a.createElement(react_components.DrawerBody,null,react_default.a.createElement(react_components.DrawerNavGroup,{divider:divider,nestedDivider:nestedDivider,title:"Default Navigation Group",hidePadding:!useIcon,ripple:ripple,activeItem:state.selected,titleColor:colors_dist.black[500],activeBackgroundShape:round,chevron:chevron,items:[{title:"User Guide",icon:useIcon?react_default.a.createElement(AddAPhoto.a,null):void 0,itemID:"User Guide",rightComponent:rightComponent,expandIcon:expandIcon,collapseIcon:collapseIcon,items:[{title:"Getting Started",itemID:"Getting Started",subtitle:"Introduction to Eaton",onClick:function(){with_nested_list_items_store.set({selected:"Getting Started"})}},{title:"Tutorials",itemID:"Tutorials",items:[{title:"For Developers",itemID:"For Developers",onClick:function(){with_nested_list_items_store.set({selected:"For Developers"})}},{title:"For Designers",itemID:"For Designers",items:[{title:"Component Library",itemID:"Component Library",onClick:function(){with_nested_list_items_store.set({selected:"Component Library"})}},{title:"Typography Rules",itemID:"Typography Rules",onClick:function(){with_nested_list_items_store.set({selected:"Typography Rules"})}},{title:"Theme Rules",itemID:"Theme Rules",onClick:function(){with_nested_list_items_store.set({selected:"Theme Rules"})}}]}]},{title:"Environment Setup",itemID:"Environment Setup",onClick:function(){with_nested_list_items_store.set({selected:"Environment Setup"})}}]},{title:"Community",itemID:"Community",icon:useIcon?react_default.a.createElement(FitnessCenter.a,null):void 0,onClick:function(){with_nested_list_items_store.set({selected:"Community"})},items:[{title:"License",itemID:"License",onClick:function(){with_nested_list_items_store.set({selected:"License"})}},{title:"Contribute",itemID:"Contribute",items:[{title:"Hall of Fame",itemID:"Hall of Fame",onClick:function(){with_nested_list_items_store.set({selected:"Hall of Fame"})}},{title:"Contributing Guide",itemID:"Contributing Guide",onClick:function(){with_nested_list_items_store.set({selected:"Contributing Guide"})}}]}]},{title:"Accessibility",itemID:"Accessibility",icon:useIcon?react_default.a.createElement(Accessibility.a,null):void 0,onClick:function(){with_nested_list_items_store.set({selected:"Accessibility"})}},{title:"Notifications",itemID:"Notifications",icon:useIcon?react_default.a.createElement(NotificationsActive.a,null):void 0,onClick:function(){with_nested_list_items_store.set({selected:"Notifications"})}}]}),react_default.a.createElement("div",{style:{flex:"1 1 0px"}}))};return react_default.a.createElement(dist.State,{store:with_nested_list_items_store},(function(state){return[react_default.a.createElement(Drawer.Drawer,{open:open,key:"drawer"},react_default.a.createElement(Drawer.DrawerHeader,{title:"Power Xpert Blue",icon:react_default.a.createElement(Menu_default.a,null)}),drawerItemList(state))]}))}),{__STORY__:"import { Accessibility, Add, AddAPhoto, FitnessCenter, NotificationsActive, PinDrop, Remove } from '@material-ui/icons';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue, DrawerBody, DrawerNavGroup, ListItemTag } from '@pxblue/react-components';\nimport { Drawer, DrawerHeader } from '@pxblue/react-components/core/Drawer';\nimport { State, Store } from '@sambego/storybook-state';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\ntype DrawerState = {\n    selected: string;\n};\n\nconst store = new Store<DrawerState>({\n    selected: '',\n});\n\nconst userGuide = 'User Guide';\nconst license = 'License';\nconst accessibility = 'Accessibility';\nconst notifications = 'Notifications';\nconst gettingStarted = 'Getting Started';\nconst tutorials = 'Tutorials';\nconst forDevelopers = 'For Developers';\nconst forDesigners = 'For Designers';\nconst environmentSetup = 'Environment Setup';\nconst community = 'Community';\nconst hallOfFame = 'Hall of Fame';\nconst contribute = 'Contribute';\nconst contributingGuide = 'Contributing Guide';\nconst componentLibrary = 'Component Library';\nconst typographyRules = 'Typography Rules';\nconst themeRules = 'Theme Rules';\n\nexport const withNestedListItems = (): StoryFnReactReturnType => {\n    const DrawerNavGroupID = 'DrawerNavGroup';\n    const open = boolean('Open', true, DrawerNavGroupID);\n    const divider = boolean('divider', true, DrawerNavGroupID);\n    const nestedDivider = boolean('nestedDivider', false, DrawerNavGroupID);\n    const ripple = boolean('ripple', true, DrawerNavGroupID);\n    const chevron = boolean('chevron', false, DrawerNavGroupID);\n    const round = select('activeBackgroundShape', ['round', 'square'], 'round', DrawerNavGroupID);\n\n    const NavItemID = 'NavItem';\n    const useIcon = boolean('Use icons', true, NavItemID);\n    const useRightComponent = select(\n        'rightComponent',\n        ['undefined', '<ListItemTag />', '<ChannelValue />'],\n        'undefined',\n        NavItemID\n    );\n    const useExpandIcon = select('expandIcon', ['undefined', '<Add />', '<PinDrop />'], 'undefined', NavItemID);\n    const useCollapseIcon = select(\n        'collapseIcon',\n        ['undefined', '<Remove />', '<AddAPhoto />'],\n        'undefined',\n        NavItemID\n    );\n\n    const rightComponent = ((): JSX.Element | undefined => {\n        switch (useRightComponent) {\n            case 'undefined':\n                return undefined;\n            case '<ListItemTag />':\n                return <ListItemTag label=\"56+\" backgroundColor={Colors.gold[50]} fontColor={Colors.gold[800]} />;\n            case '<ChannelValue />':\n                return <ChannelValue value={2} units={'V'} />;\n            default:\n                break;\n        }\n    })();\n\n    const expandIcon = ((): JSX.Element | undefined => {\n        switch (useExpandIcon) {\n            case 'undefined':\n                return undefined;\n            case '<Add />':\n                return <Add />;\n            case '<PinDrop />':\n                return <PinDrop />;\n            default:\n                break;\n        }\n    })();\n\n    const collapseIcon = ((): JSX.Element | undefined => {\n        switch (useCollapseIcon) {\n            case 'undefined':\n                return undefined;\n            case '<Remove />':\n                return <Remove />;\n            case '<AddAPhoto />':\n                return <AddAPhoto />;\n            default:\n                break;\n        }\n    })();\n\n    const drawerItemList = (state: DrawerState): JSX.Element => (\n        <DrawerBody>\n            <DrawerNavGroup\n                divider={divider}\n                nestedDivider={nestedDivider}\n                title={'Default Navigation Group'}\n                hidePadding={!useIcon}\n                ripple={ripple}\n                activeItem={state.selected}\n                titleColor={Colors.black[500]}\n                activeBackgroundShape={round}\n                chevron={chevron}\n                items={[\n                    {\n                        title: userGuide,\n                        icon: useIcon ? <AddAPhoto /> : undefined,\n                        itemID: userGuide,\n                        rightComponent: rightComponent,\n                        expandIcon: expandIcon,\n                        collapseIcon: collapseIcon,\n                        items: [\n                            {\n                                title: gettingStarted,\n                                itemID: gettingStarted,\n                                subtitle: 'Introduction to Eaton',\n                                onClick: (): void => {\n                                    store.set({ selected: gettingStarted });\n                                },\n                            },\n                            {\n                                title: tutorials,\n                                itemID: tutorials,\n                                items: [\n                                    {\n                                        title: forDevelopers,\n                                        itemID: forDevelopers,\n                                        onClick: (): void => {\n                                            store.set({ selected: forDevelopers });\n                                        },\n                                    },\n                                    {\n                                        title: forDesigners,\n                                        itemID: forDesigners,\n                                        items: [\n                                            {\n                                                title: componentLibrary,\n                                                itemID: componentLibrary,\n                                                onClick: (): void => {\n                                                    store.set({ selected: componentLibrary });\n                                                },\n                                            },\n                                            {\n                                                title: typographyRules,\n                                                itemID: typographyRules,\n                                                onClick: (): void => {\n                                                    store.set({ selected: typographyRules });\n                                                },\n                                            },\n                                            {\n                                                title: themeRules,\n                                                itemID: themeRules,\n                                                onClick: (): void => {\n                                                    store.set({ selected: themeRules });\n                                                },\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                            {\n                                title: environmentSetup,\n                                itemID: environmentSetup,\n                                onClick: (): void => {\n                                    store.set({ selected: environmentSetup });\n                                },\n                            },\n                        ],\n                    },\n                    {\n                        title: community,\n                        itemID: community,\n                        icon: useIcon ? <FitnessCenter /> : undefined,\n                        onClick: (): void => {\n                            store.set({ selected: community });\n                        },\n                        items: [\n                            {\n                                title: license,\n                                itemID: license,\n                                onClick: (): void => {\n                                    store.set({ selected: license });\n                                },\n                            },\n                            {\n                                title: contribute,\n                                itemID: contribute,\n                                items: [\n                                    {\n                                        title: hallOfFame,\n                                        itemID: hallOfFame,\n                                        onClick: (): void => {\n                                            store.set({ selected: hallOfFame });\n                                        },\n                                    },\n                                    {\n                                        title: contributingGuide,\n                                        itemID: contributingGuide,\n                                        onClick: (): void => {\n                                            store.set({ selected: contributingGuide });\n                                        },\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                    {\n                        title: accessibility,\n                        itemID: accessibility,\n                        icon: useIcon ? <Accessibility /> : undefined,\n                        onClick: (): void => {\n                            store.set({ selected: accessibility });\n                        },\n                    },\n                    {\n                        title: notifications,\n                        itemID: notifications,\n                        icon: useIcon ? <NotificationsActive /> : undefined,\n                        onClick: (): void => {\n                            store.set({ selected: notifications });\n                        },\n                    },\n                ]}\n            />\n            <div style={{ flex: '1 1 0px' }} />\n        </DrawerBody>\n    );\n\n    return (\n        <State store={store}>\n            {(state): JSX.Element[] => [\n                <Drawer open={open} key={'drawer'}>\n                    <DrawerHeader title={'Power Xpert Blue'} icon={<MenuIcon />} />\n                    {drawerItemList(state)}\n                </Drawer>,\n            ]}\n        </State>\n    );\n};\n\nwithNestedListItems.story = { name: 'with nested list items' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-nested-list-items.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withNestedListItems.story={name:"with nested list items"};var Apps=__webpack_require__(528),FormatListBulleted=__webpack_require__(535),Settings=__webpack_require__(546),Gavel=__webpack_require__(536),Help=__webpack_require__(537),addon_actions_dist=__webpack_require__(25),EatonLogo=__webpack_require__(235),EatonLogo_default=__webpack_require__.n(EatonLogo),in_a_drawerLayout_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),defaultBody=react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{activeItem:"",items:[{title:"Overview",onClick:Object(addon_actions_dist.action)("Overview"),itemID:"Overview",icon:react_default.a.createElement(Apps.a,null)},{itemID:"Timeline",title:"Timeline",onClick:Object(addon_actions_dist.action)("Timeline"),icon:react_default.a.createElement(FormatListBulleted.a,null)},{itemID:"Locations",title:"Locations",onClick:Object(addon_actions_dist.action)("Locations"),icon:react_default.a.createElement(PinDrop.a,null)},{itemID:"Devices",title:"Devices",onClick:Object(addon_actions_dist.action)("Devices"),icon:react_default.a.createElement(NotificationsActive.a,null)},{itemID:"Settings",title:"Settings",onClick:Object(addon_actions_dist.action)("Settings"),icon:react_default.a.createElement(Settings.a,null)},{itemID:"Legal",title:"Legal",onClick:Object(addon_actions_dist.action)("Legal"),icon:react_default.a.createElement(Gavel.a,null)},{itemID:"Help",title:"Help",onClick:Object(addon_actions_dist.action)("Help"),icon:react_default.a.createElement(Help.a,null)}]})),inDrawerLayout=in_a_drawerLayout_addSourceDecorator((function(){var open=Object(addon_knobs_dist.boolean)("Open",!0),width=Object(addon_knobs_dist.number)("Width",350,{range:!0,min:200,max:700,step:50});return react_default.a.createElement(react_components.DrawerLayout,{drawer:react_default.a.createElement(Drawer.Drawer,{open:open,width:width},react_default.a.createElement(Drawer.DrawerHeader,{icon:react_default.a.createElement(Menu_default.a,null),titleContent:react_default.a.createElement("div",{style:{paddingLeft:"20px",paddingTop:"15px"}},react_default.a.createElement(Typography.a,{variant:"subtitle2",style:{fontWeight:100}},"PX Blue"),react_default.a.createElement(Typography.a,{variant:"h6",style:{marginTop:"-10px"}},"DrawerLayout"))}),defaultBody,react_default.a.createElement(Drawer.DrawerFooter,null,react_default.a.createElement("div",{style:{display:"flex",justifyContent:"center"}},react_default.a.createElement("img",{src:EatonLogo_default.a,style:{margin:"10px"},alt:"Eaton Logo",height:50,width:"auto"}))))},react_default.a.createElement("div",{style:{backgroundColor:"#b7b7b7",color:"white",height:"100%",padding:"30px",boxSizing:"border-box",fontSize:"60px"}},"Body content goes here."))}),{__STORY__:"import { Typography } from '@material-ui/core';\nimport { Apps, FormatListBulleted, Gavel, Help, NotificationsActive, PinDrop, Settings } from '@material-ui/icons';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { DrawerLayout } from '@pxblue/react-components';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components/core/Drawer';\nimport { action } from '@storybook/addon-actions';\nimport { boolean, number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n// @ts-ignore\nimport EatonLogo from '../../assets/EatonLogo.svg';\n\nconst defaultBody = (\n    <DrawerBody>\n        <DrawerNavGroup\n            activeItem={''}\n            items={[\n                {\n                    title: 'Overview',\n                    onClick: action('Overview'),\n                    itemID: 'Overview',\n                    icon: <Apps />,\n                },\n                {\n                    itemID: 'Timeline',\n                    title: 'Timeline',\n                    onClick: action('Timeline'),\n                    icon: <FormatListBulleted />,\n                },\n                {\n                    itemID: 'Locations',\n                    title: 'Locations',\n                    onClick: action('Locations'),\n                    icon: <PinDrop />,\n                },\n                {\n                    itemID: 'Devices',\n                    title: 'Devices',\n                    onClick: action('Devices'),\n                    icon: <NotificationsActive />,\n                },\n                {\n                    itemID: 'Settings',\n                    title: 'Settings',\n                    onClick: action('Settings'),\n                    icon: <Settings />,\n                },\n                {\n                    itemID: 'Legal',\n                    title: 'Legal',\n                    onClick: action('Legal'),\n                    icon: <Gavel />,\n                },\n                {\n                    itemID: 'Help',\n                    title: 'Help',\n                    onClick: action('Help'),\n                    icon: <Help />,\n                },\n            ]}\n        />\n    </DrawerBody>\n);\n\nexport const inDrawerLayout = (): StoryFnReactReturnType => {\n    const open = boolean('Open', true);\n    const width = number('Width', 350, {\n        range: true,\n        min: 200,\n        max: 700,\n        step: 50,\n    });\n\n    return (\n        <DrawerLayout\n            drawer={\n                <Drawer open={open} width={width}>\n                    <DrawerHeader\n                        icon={<MenuIcon />}\n                        titleContent={\n                            <div style={{ paddingLeft: '20px', paddingTop: '15px' }}>\n                                <Typography variant=\"subtitle2\" style={{ fontWeight: 100 }}>\n                                    PX Blue\n                                </Typography>\n                                <Typography variant=\"h6\" style={{ marginTop: '-10px' }}>\n                                    DrawerLayout\n                                </Typography>\n                            </div>\n                        }\n                    />\n                    {defaultBody}\n                    <DrawerFooter>\n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <img\n                                src={EatonLogo}\n                                style={{ margin: '10px' }}\n                                alt=\"Eaton Logo\"\n                                height={50}\n                                width={'auto'}\n                            />\n                        </div>\n                    </DrawerFooter>\n                </Drawer>\n            }\n        >\n            <div\n                style={{\n                    backgroundColor: '#b7b7b7',\n                    color: 'white',\n                    height: '100%',\n                    padding: '30px',\n                    boxSizing: 'border-box',\n                    fontSize: '60px',\n                }}\n            >\n                Body content goes here.\n            </div>\n        </DrawerLayout>\n    );\n};\n\ninDrawerLayout.story = { name: 'in a DrawerLayout' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/in-a-drawerLayout.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});inDrawerLayout.story={name:"in a DrawerLayout"};var Divider=__webpack_require__(518),Dashboard=__webpack_require__(531),Toc=__webpack_require__(547),Devices=__webpack_require__(532),AirportShuttle=__webpack_require__(527),MoveToInbox=__webpack_require__(563),MoveToInbox_default=__webpack_require__.n(MoveToInbox),with_full_config_addSourceDecorator=(__webpack_require__(13).withSource,__webpack_require__(13).addSource),with_full_config_EatonLogo=__webpack_require__(235),topologyBgImage=__webpack_require__(147),with_full_config_store=new dist.Store({selected:""}),with_full_config_userGuide="User Guide",with_full_config_accessibility="Accessibility",with_full_config_notifications="Notifications",overview="Overview",timeline="Timeline",locations="Locations",devices="Devices",photos="Photos",schedule="Schedule",agreement="License Agreement",withFullConfig=with_full_config_addSourceDecorator((function(){var headerIcon,open=Object(addon_knobs_dist.boolean)("Open",!0,"Drawer"),width=Object(addon_knobs_dist.number)("Width",350,{range:!0,min:200,max:700,step:50},"Drawer"),headerTitle=Object(addon_knobs_dist.text)("title","PX Blue Drawer","Header"),headerSubtitle=Object(addon_knobs_dist.text)("subtitle","Organize your menu items here","Header");switch(Object(addon_knobs_dist.select)("icon",["Menu","Fitness","None"],"Menu","Header")){case"Menu":headerIcon=react_default.a.createElement(Menu_default.a,null);break;case"Fitness":headerIcon=react_default.a.createElement(FitnessCenter.a,null);break;default:headerIcon=react_default.a.createElement(react_default.a.Fragment,null)}var headerFontColor=Object(addon_knobs_dist.color)("fontColor",colors_dist.white[50],"Header"),headerBackgroundColor=Object(addon_knobs_dist.color)("backgroundColor",colors_dist.blue[800],"Header"),headerBackgroundImage="Pattern"===Object(addon_knobs_dist.select)("backgroundImage",["None","Pattern"],"Pattern","Header")?topologyBgImage:"",groupTitle1=Object(addon_knobs_dist.text)("title1","NavGroup 1","Body"),groupTitle2=Object(addon_knobs_dist.text)("title2","NavGroup 2","Body"),bodyFontColor=Object(addon_knobs_dist.color)("fontColor",colors_dist.black[500],"Body"),bodyIconColor=Object(addon_knobs_dist.color)("iconColor",colors_dist.blue[500],"Body"),bodyBackgroundColor=Object(addon_knobs_dist.color)("backgroundColor",colors_dist.white[50],"Body"),bodyActiveFontColor=Object(addon_knobs_dist.color)("activeFontColor",colors_dist.blue[500],"Body"),bodyActiveIconColor=Object(addon_knobs_dist.color)("activeIconColor",colors_dist.blue[500],"Body"),bodyActiveBackgroundColor=Object(addon_knobs_dist.color)("activeBackgroundColor",colors_dist.blue[50],"Body"),bodyChevron=Object(addon_knobs_dist.boolean)("chevron",!1,"Body"),bodyDividers=Object(addon_knobs_dist.boolean)("showDividers",!0,"Body"),links1=[{title:overview,itemID:overview,onClick:function(){with_full_config_store.set({selected:overview})},icon:react_default.a.createElement(Dashboard.a,null)},{title:timeline,itemID:timeline,onClick:function(){with_full_config_store.set({selected:timeline})},icon:react_default.a.createElement(Toc.a,null)},{title:locations,itemID:locations,onClick:function(){with_full_config_store.set({selected:locations})},icon:react_default.a.createElement(PinDrop.a,null)},{title:devices,itemID:devices,subtitle:"5 new warnings",statusColor:colors_dist.yellow[500],onClick:function(){with_full_config_store.set({selected:devices})},icon:react_default.a.createElement(Devices.a,null)},{title:photos,itemID:photos,onClick:function(){with_full_config_store.set({selected:photos})},icon:react_default.a.createElement(AddAPhoto.a,null)},{title:schedule,itemID:schedule,onClick:function(){with_full_config_store.set({selected:schedule})},icon:react_default.a.createElement(AirportShuttle.a,null)}].slice(0,4),links2=[{title:with_full_config_userGuide,itemID:with_full_config_userGuide,onClick:function(){with_full_config_store.set({selected:with_full_config_userGuide})},icon:react_default.a.createElement(MoveToInbox_default.a,null)},{title:agreement,itemID:agreement,subtitle:"For Eaton employees only",onClick:function(){with_full_config_store.set({selected:agreement})},icon:react_default.a.createElement(Send_default.a,null)},{title:with_full_config_accessibility,itemID:with_full_config_accessibility,onClick:function(){with_full_config_store.set({selected:with_full_config_accessibility})},icon:react_default.a.createElement(Accessibility.a,null)},{title:with_full_config_notifications,itemID:with_full_config_notifications,onClick:function(){with_full_config_store.set({selected:with_full_config_notifications})},icon:react_default.a.createElement(NotificationsActive.a,null)}].slice(0,2),showFooter=Object(addon_knobs_dist.boolean)("show footer",!0,"Footer"),footerBackgroundColor=Object(addon_knobs_dist.color)("backgroundColor",colors_dist.white[50],"Footer");return react_default.a.createElement(dist.State,{store:with_full_config_store},(function(state){return[react_default.a.createElement(react_components.Drawer,{open:open,width:width,key:"drawer"},react_default.a.createElement(react_components.DrawerHeader,{title:headerTitle,subtitle:headerSubtitle,icon:headerIcon,backgroundImage:headerBackgroundImage,fontColor:headerFontColor,backgroundColor:headerBackgroundColor}),react_default.a.createElement(react_components.DrawerBody,{iconColor:bodyIconColor,fontColor:bodyFontColor,backgroundColor:bodyBackgroundColor,activeFontColor:bodyActiveFontColor,activeBackgroundColor:bodyActiveBackgroundColor,activeIconColor:bodyActiveIconColor,chevron:bodyChevron},react_default.a.createElement(react_components.DrawerNavGroup,{activeItem:state.selected,divider:bodyDividers,items:links1,title:groupTitle1}),react_default.a.createElement(react_components.DrawerNavGroup,{divider:bodyDividers,activeItem:state.selected,items:links2,titleContent:react_default.a.createElement("div",{style:{display:"flex",justifyContent:"space-between",fontWeight:600}},react_default.a.createElement("div",null,groupTitle2),react_default.a.createElement("div",null,"Software Version v1.0.3"))})),showFooter&&react_default.a.createElement(react_components.DrawerFooter,{backgroundColor:footerBackgroundColor},react_default.a.createElement(Divider.a,null),react_default.a.createElement("div",{style:{display:"flex",justifyContent:"center"}},react_default.a.createElement("img",{src:with_full_config_EatonLogo,style:{margin:"10px"},alt:"Eaton Logo",height:50,width:"auto"}))))]}))}),{__STORY__:"import { Divider } from '@material-ui/core';\nimport {\n    Accessibility,\n    AddAPhoto,\n    AirportShuttle,\n    Dashboard,\n    Devices,\n    FitnessCenter,\n    NotificationsActive,\n    PinDrop,\n    Toc,\n} from '@material-ui/icons';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\nimport SendIcon from '@material-ui/icons/Send';\nimport * as Colors from '@pxblue/colors';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components';\nimport { State, Store } from '@sambego/storybook-state';\nimport { boolean, color, number, select, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst EatonLogo = require('../../assets/EatonLogo.svg');\nconst topologyBgImage = require('../../assets/topology_40.png');\n\ntype DrawerState = {\n    selected: string;\n};\n\nconst store = new Store<DrawerState>({\n    selected: '',\n});\n\nconst userGuide = 'User Guide';\nconst accessibility = 'Accessibility';\nconst notifications = 'Notifications';\nconst overview = 'Overview';\nconst timeline = 'Timeline';\nconst locations = 'Locations';\nconst devices = 'Devices';\nconst photos = 'Photos';\nconst schedule = 'Schedule';\nconst agreement = 'License Agreement';\n\nexport const withFullConfig = (): StoryFnReactReturnType => {\n    const drawerGroupId = 'Drawer';\n    const headerGroupId = 'Header';\n    const bodyGroupId = 'Body';\n    const footerGroupId = 'Footer';\n\n    const open = boolean('Open', true, drawerGroupId);\n    const width = number(\n        'Width',\n        350,\n        {\n            range: true,\n            min: 200,\n            max: 700,\n            step: 50,\n        },\n        drawerGroupId\n    );\n\n    // Header\n    const headerTitle = text('title', 'PX Blue Drawer', headerGroupId);\n    const headerSubtitle = text('subtitle', 'Organize your menu items here', headerGroupId);\n    const headerIconOptions = select('icon', ['Menu', 'Fitness', 'None'], 'Menu', headerGroupId);\n    let headerIcon: JSX.Element;\n    switch (headerIconOptions) {\n        case 'Menu':\n            headerIcon = <MenuIcon />;\n            break;\n        case 'Fitness':\n            headerIcon = <FitnessCenter />;\n            break;\n        default:\n            headerIcon = <></>;\n    }\n    const headerFontColor = color('fontColor', Colors.white[50], headerGroupId);\n    const headerBackgroundColor = color('backgroundColor', Colors.blue[800], headerGroupId);\n    const headerBackground = select('backgroundImage', ['None', 'Pattern'], 'Pattern', headerGroupId);\n    const headerBackgroundImage = headerBackground === 'Pattern' ? topologyBgImage : '';\n\n    // Body\n    const groupTitle1 = text('title1', 'NavGroup 1', bodyGroupId);\n    const groupTitle2 = text('title2', 'NavGroup 2', bodyGroupId);\n    const bodyFontColor = color('fontColor', Colors.black[500], bodyGroupId);\n    const bodyIconColor = color('iconColor', Colors.blue[500], bodyGroupId);\n    const bodyBackgroundColor = color('backgroundColor', Colors.white[50], bodyGroupId);\n    const bodyActiveFontColor = color('activeFontColor', Colors.blue[500], bodyGroupId);\n    const bodyActiveIconColor = color('activeIconColor', Colors.blue[500], bodyGroupId);\n    const bodyActiveBackgroundColor = color('activeBackgroundColor', Colors.blue[50], bodyGroupId);\n    const bodyChevron = boolean('chevron', false, bodyGroupId);\n    const bodyDividers = boolean('showDividers', true, bodyGroupId);\n\n    const numberLinksGroup1 = 4;\n    const numberLinksGroup2 = 2;\n\n    const links1 = [\n        {\n            title: overview,\n            itemID: overview,\n            onClick: (): void => {\n                store.set({ selected: overview });\n            },\n            icon: <Dashboard />,\n        },\n        {\n            title: timeline,\n            itemID: timeline,\n            onClick: (): void => {\n                store.set({ selected: timeline });\n            },\n            icon: <Toc />,\n        },\n        {\n            title: locations,\n            itemID: locations,\n            onClick: (): void => {\n                store.set({ selected: locations });\n            },\n            icon: <PinDrop />,\n        },\n        {\n            title: devices,\n            itemID: devices,\n            subtitle: '5 new warnings',\n            statusColor: Colors.yellow[500],\n            onClick: (): void => {\n                store.set({ selected: devices });\n            },\n            icon: <Devices />,\n        },\n        {\n            title: photos,\n            itemID: photos,\n            onClick: (): void => {\n                store.set({ selected: photos });\n            },\n            icon: <AddAPhoto />,\n        },\n        {\n            title: schedule,\n            itemID: schedule,\n            onClick: (): void => {\n                store.set({ selected: schedule });\n            },\n            icon: <AirportShuttle />,\n        },\n    ].slice(0, numberLinksGroup1);\n\n    const links2 = [\n        {\n            title: userGuide,\n            itemID: userGuide,\n            onClick: (): void => {\n                store.set({ selected: userGuide });\n            },\n            icon: <MoveToInboxIcon />,\n        },\n        {\n            title: agreement,\n            itemID: agreement,\n            subtitle: 'For Eaton employees only',\n            onClick: (): void => {\n                store.set({ selected: agreement });\n            },\n            icon: <SendIcon />,\n        },\n        {\n            title: accessibility,\n            itemID: accessibility,\n            onClick: (): void => {\n                store.set({ selected: accessibility });\n            },\n            icon: <Accessibility />,\n        },\n        {\n            title: notifications,\n            itemID: notifications,\n            onClick: (): void => {\n                store.set({ selected: notifications });\n            },\n            icon: <NotificationsActive />,\n        },\n    ].slice(0, numberLinksGroup2);\n\n    // Footer\n    const showFooter = boolean('show footer', true, footerGroupId);\n    const footerBackgroundColor = color('backgroundColor', Colors.white[50], footerGroupId);\n\n    return (\n        <State store={store}>\n            {(state): JSX.Element[] => [\n                <Drawer open={open} width={width} key={'drawer'}>\n                    <DrawerHeader\n                        title={headerTitle}\n                        subtitle={headerSubtitle}\n                        icon={headerIcon}\n                        backgroundImage={headerBackgroundImage}\n                        fontColor={headerFontColor}\n                        backgroundColor={headerBackgroundColor}\n                    />\n\n                    <DrawerBody\n                        iconColor={bodyIconColor}\n                        fontColor={bodyFontColor}\n                        backgroundColor={bodyBackgroundColor}\n                        activeFontColor={bodyActiveFontColor}\n                        activeBackgroundColor={bodyActiveBackgroundColor}\n                        activeIconColor={bodyActiveIconColor}\n                        chevron={bodyChevron}\n                    >\n                        <DrawerNavGroup\n                            activeItem={state.selected}\n                            divider={bodyDividers}\n                            items={links1}\n                            title={groupTitle1}\n                        />\n                        <DrawerNavGroup\n                            divider={bodyDividers}\n                            activeItem={state.selected}\n                            items={links2}\n                            titleContent={\n                                <div style={{ display: 'flex', justifyContent: 'space-between', fontWeight: 600 }}>\n                                    <div>{groupTitle2}</div>\n                                    <div>Software Version v1.0.3</div>\n                                </div>\n                            }\n                        />\n                    </DrawerBody>\n\n                    {showFooter && (\n                        <DrawerFooter backgroundColor={footerBackgroundColor}>\n                            <Divider />\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <img\n                                    src={EatonLogo}\n                                    style={{ margin: '10px' }}\n                                    alt=\"Eaton Logo\"\n                                    height={50}\n                                    width={'auto'}\n                                />\n                            </div>\n                        </DrawerFooter>\n                    )}\n                </Drawer>,\n            ]}\n        </State>\n    );\n};\n\nwithFullConfig.story = { name: 'with full config' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withFullConfig.story={name:"with full config"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withCustomHeader",(function(){return withCustomHeader})),__webpack_require__.d(__webpack_exports__,"withSubheader",(function(){return withSubheader})),__webpack_require__.d(__webpack_exports__,"withNestedListItems",(function(){return withNestedListItems})),__webpack_require__.d(__webpack_exports__,"inDrawerLayout",(function(){return inDrawerLayout})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},drawerModule={title:constants.a+"/Drawer",component:react_components.Drawer,decorators:[utils.e,function(storyFn){return react_default.a.createElement("div",{style:{margin:20,display:"flex",height:"100%"}},storyFn())}],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("Drawer.md")}})};__webpack_exports__.default=drawerModule},1168:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(38),utils=__webpack_require__(16),NotificationImportant=__webpack_require__(564),NotificationImportant_default=__webpack_require__.n(NotificationImportant),dist=__webpack_require__(7),react=__webpack_require__(0),react_default=__webpack_require__.n(react),asTextOnly=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){var title=Object(dist.text)("title","No Alarms Found");return react_default.a.createElement(react_components.EmptyState,{icon:react_default.a.createElement(NotificationImportant_default.a,{fontSize:"inherit"}),title:title})}),{__STORY__:"import AlertIcon from '@material-ui/icons/NotificationImportant';\nimport { EmptyState } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const asTextOnly = (): StoryFnReactReturnType => {\n    const title = text('title', 'No Alarms Found');\n    return <EmptyState icon={<AlertIcon fontSize={'inherit'} />} title={title} />;\n};\n\nasTextOnly.story = { name: 'as text only' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/as-text-only.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/empty-state",__IDS_TO_FRAMEWORKS__:{}}));asTextOnly.story={name:"as text only"};var Button=__webpack_require__(1176),AddCircleOutlined=__webpack_require__(566),AddCircleOutlined_default=__webpack_require__.n(AddCircleOutlined),Devices=__webpack_require__(565),Devices_default=__webpack_require__.n(Devices),addon_actions_dist=__webpack_require__(25),withActions=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){var title=Object(dist.text)("title","No Devices"),actionText=Object(dist.text)("Action Text","Add Device");return react_default.a.createElement(react_components.EmptyState,{icon:react_default.a.createElement(Devices_default.a,{fontSize:"inherit"}),title:title,actions:react_default.a.createElement(Button.a,{variant:"contained",color:"primary",style:{margin:"10px"},onClick:Object(addon_actions_dist.action)("Button Clicked")},react_default.a.createElement(AddCircleOutlined_default.a,{style:{marginRight:"5px"}}),actionText)})}),{__STORY__:"import Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/AddCircleOutlined';\n\nimport DevicesIcon from '@material-ui/icons/Devices';\nimport { EmptyState } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withActions = (): StoryFnReactReturnType => {\n    const title = text('title', 'No Devices');\n    const actionText = text('Action Text', 'Add Device');\n    return (\n        <EmptyState\n            icon={<DevicesIcon fontSize={'inherit'} />}\n            title={title}\n            actions={\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    style={{ margin: '10px' }}\n                    onClick={action('Button Clicked')}\n                >\n                    <AddIcon style={{ marginRight: '5px' }} />\n                    {actionText}\n                </Button>\n            }\n        />\n    );\n};\n\nwithActions.story = { name: 'with actions' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-actions.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/empty-state",__IDS_TO_FRAMEWORKS__:{}}));withActions.story={name:"with actions"};var TrendingUp=__webpack_require__(116),TrendingUp_default=__webpack_require__.n(TrendingUp),asPlaceholder=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){var title=Object(dist.text)("title","Predictions Page Coming Soon"),description=Object(dist.text)("description","A fully redesigned predictions page is coming in our next release!"),actionText=Object(dist.text)("Action Text","Learn More");return react_default.a.createElement(react_components.EmptyState,{icon:react_default.a.createElement(TrendingUp_default.a,{fontSize:"inherit",style:{marginBottom:"0"}}),title:title,description:description,actions:react_default.a.createElement(Button.a,{variant:"outlined",size:"small",color:"primary",style:{margin:"10px"},onClick:Object(addon_actions_dist.action)("Button Clicked")},actionText)})}),{__STORY__:"import Button from '@material-ui/core/Button';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { EmptyState } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const asPlaceholder = (): StoryFnReactReturnType => {\n    const title = text('title', 'Predictions Page Coming Soon');\n    const description = text('description', 'A fully redesigned predictions page is coming in our next release!');\n    const actionText = text('Action Text', 'Learn More');\n    return (\n        <EmptyState\n            icon={<TrendingUpIcon fontSize={'inherit'} style={{ marginBottom: '0' }} />}\n            title={title}\n            description={description}\n            actions={\n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    color=\"primary\"\n                    style={{ margin: '10px' }}\n                    onClick={action('Button Clicked')}\n                >\n                    {actionText}\n                </Button>\n            }\n        />\n    );\n};\n\nasPlaceholder.story = { name: 'as a placeholder' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/as-a-placeholder.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/empty-state",__IDS_TO_FRAMEWORKS__:{}}));asPlaceholder.story={name:"as a placeholder"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"asTextOnly",(function(){return asTextOnly})),__webpack_require__.d(__webpack_exports__,"withActions",(function(){return withActions})),__webpack_require__.d(__webpack_exports__,"asPlaceholder",(function(){return asPlaceholder}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},emptyStateModule={title:constants.a+"/Empty State",component:react_components.EmptyState,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("EmptyState.md")}})};__webpack_exports__.default=emptyStateModule},1169:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),react=__webpack_require__(0),react_default=__webpack_require__.n(react),constants=__webpack_require__(38),utils=__webpack_require__(16),dist=__webpack_require__(11),icons_mui=__webpack_require__(23),addon_knobs_dist=__webpack_require__(7),withBasicProps=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.Hero,{icon:react_default.a.createElement(icons_mui.GradeA,{fontSize:"inherit",htmlColor:dist.blue[500]}),label:Object(addon_knobs_dist.text)("label","Efficiency"),value:Object(addon_knobs_dist.text)("value","94"),units:Object(addon_knobs_dist.text)("units","%")})}),{__STORY__:"import * as Colors from '@pxblue/colors';\n//@ts-ignore\nimport { GradeA } from '@pxblue/icons-mui';\nimport { Hero } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withBasicProps = (): StoryFnReactReturnType => (\n    <Hero\n        icon={<GradeA fontSize={'inherit'} htmlColor={Colors.blue[500]} />}\n        label={text('label', 'Efficiency')}\n        value={text('value', '94')}\n        units={text('units', '%')}\n    />\n);\n\nwithBasicProps.story = { name: 'with basic properties' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-props.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}}));withBasicProps.story={name:"with basic properties"};__webpack_require__(13).withSource;var withChannelValueChildren=(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.Hero,{label:Object(addon_knobs_dist.text)("label","Duration"),icon:react_default.a.createElement(icons_mui.Leaf,{fontSize:"inherit",htmlColor:dist.green[500]})},react_default.a.createElement(react_components.ChannelValue,{fontSize:"large",value:Object(addon_knobs_dist.number)("hours",1),units:"h"}),react_default.a.createElement(react_components.ChannelValue,{fontSize:"large",value:Object(addon_knobs_dist.number)("minutes",27),units:"m"}))}),{__STORY__:"import * as Colors from '@pxblue/colors';\n//@ts-ignore\nimport { Leaf } from '@pxblue/icons-mui';\nimport { ChannelValue, Hero } from '@pxblue/react-components';\n\nimport { number, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withChannelValueChildren = (): StoryFnReactReturnType => (\n    <Hero label={text('label', 'Duration')} icon={<Leaf fontSize={'inherit'} htmlColor={Colors.green[500]} />}>\n        <ChannelValue fontSize={'large'} value={number('hours', 1)} units={'h'} />\n        <ChannelValue fontSize={'large'} value={number('minutes', 27)} units={'m'} />\n    </Hero>\n);\n\nwithChannelValueChildren.story = { name: 'with channelValue children' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-channelValue-children.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}});withChannelValueChildren.story={name:"with channelValue children"};__webpack_require__(13).withSource;var inBanner=(0,__webpack_require__(13).addSource)((function(){var heroes=[react_default.a.createElement(react_components.Hero,{key:"hero1",icon:react_default.a.createElement(icons_mui.GradeA,{fontSize:"inherit",htmlColor:dist.green[500]}),label:"Healthy",value:96,units:"/100"}),react_default.a.createElement(react_components.Hero,{key:"hero2",icon:react_default.a.createElement(icons_mui.CurrentCircled,{fontSize:"inherit",htmlColor:dist.yellow[500]}),label:"Load",value:"90",units:"%",fontSize:"normal"}),react_default.a.createElement(react_components.Hero,{key:"hero3",icon:react_default.a.createElement(icons_mui.Temp,{fontSize:"inherit",htmlColor:dist.green[500]}),label:"Temp",value:55,units:"C"}),react_default.a.createElement(react_components.Hero,{key:"hero4",icon:react_default.a.createElement(icons_mui.Leaf,{fontSize:"inherit",htmlColor:dist.green[500]}),label:"Battery",value:96,units:"/100"})],numberDisplayed=Object(addon_knobs_dist.number)("count",4,{range:!0,min:0,max:4,step:1});return react_default.a.createElement(react_components.HeroBanner,null,heroes.slice(0,numberDisplayed))}),{__STORY__:"import * as Colors from '@pxblue/colors';\n//@ts-ignore\nimport { CurrentCircled, GradeA, Leaf, Temp } from '@pxblue/icons-mui';\nimport { Hero, HeroBanner } from '@pxblue/react-components';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const inBanner = (): StoryFnReactReturnType => {\n    const heroes = [\n        <Hero\n            key={'hero1'}\n            icon={<GradeA fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n            label={'Healthy'}\n            value={96}\n            units={'/100'}\n        />,\n        <Hero\n            key={'hero2'}\n            icon={<CurrentCircled fontSize={'inherit'} htmlColor={Colors.yellow[500]} />}\n            label={'Load'}\n            value={'90'}\n            units={'%'}\n            fontSize={'normal'}\n        />,\n        <Hero\n            key={'hero3'}\n            icon={<Temp fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n            label={'Temp'}\n            value={55}\n            units={'C'}\n        />,\n        <Hero\n            key={'hero4'}\n            icon={<Leaf fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n            label={'Battery'}\n            value={96}\n            units={'/100'}\n        />,\n    ];\n    const numberDisplayed = number('count', 4, { range: true, min: 0, max: 4, step: 1 });\n    return <HeroBanner>{heroes.slice(0, numberDisplayed)}</HeroBanner>;\n};\n\ninBanner.story = { name: 'in a banner' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/in-a-banner.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}});inBanner.story={name:"in a banner"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicProps",(function(){return withBasicProps})),__webpack_require__.d(__webpack_exports__,"withChannelValueChildren",(function(){return withChannelValueChildren})),__webpack_require__.d(__webpack_exports__,"inBanner",(function(){return inBanner}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},heroModule={title:constants.a+"/Hero",component:react_components.Hero,decorators:[utils.e,function(storyFn){return react_default.a.createElement("div",{style:{alignItems:"center",display:"flex",height:"100%"}},storyFn())}],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("Hero.md")}})};__webpack_exports__.default=heroModule},1170:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(38),utils=__webpack_require__(16),dist=__webpack_require__(11),addon_knobs_dist=__webpack_require__(7),react=__webpack_require__(0),react_default=__webpack_require__.n(react),withDifferentColors=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ListItemTag,{label:Object(addon_knobs_dist.text)("label","active"),backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",dist.gold[500]),fontColor:Object(addon_knobs_dist.color)("fontColor",dist.black[500]),style:{boxSizing:"border-box"}})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { ListItemTag } from '@pxblue/react-components';\nimport { color, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withDifferentColors = (): StoryFnReactReturnType => (\n    <ListItemTag\n        label={text('label', 'active')}\n        backgroundColor={color('backgroundColor', Colors.gold['500'])}\n        fontColor={color('fontColor', Colors.black['500'])}\n        style={{ boxSizing: 'border-box' }}\n    />\n);\n\nwithDifferentColors.story = { name: 'with different colors' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-diff-colors.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/list-item-tag",__IDS_TO_FRAMEWORKS__:{}}));withDifferentColors.story={name:"with different colors"};var addon_actions_dist=__webpack_require__(25),withTypographyProps=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){return react_default.a.createElement(react_components.ListItemTag,{label:Object(addon_knobs_dist.text)("label","clickable"),backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",dist.green[700]),fontColor:Object(addon_knobs_dist.color)("fontColor",dist.white[100]),onClick:Object(addon_actions_dist.action)("ListItemTag: onClick"),variant:Object(addon_knobs_dist.select)("variant",["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline","srOnly","inherit"],"overline"),style:{padding:Object(addon_knobs_dist.text)("style.padding","0 4px"),width:Object(addon_knobs_dist.text)("style.width","initial"),boxSizing:"border-box"},paragraph:Object(addon_knobs_dist.boolean)("paragraph",!1),noWrap:Object(addon_knobs_dist.boolean)("noWrap",!0)})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { ListItemTag } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { boolean, color, select, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withTypographyProps = (): StoryFnReactReturnType => (\n    <ListItemTag\n        label={text('label', 'clickable')}\n        backgroundColor={color('backgroundColor', Colors.green['700'])}\n        fontColor={color('fontColor', Colors.white['100'])}\n        onClick={action('ListItemTag: onClick')}\n        variant={select(\n            'variant',\n            [\n                'h1',\n                'h2',\n                'h3',\n                'h4',\n                'h5',\n                'h6',\n                'subtitle1',\n                'subtitle2',\n                'body1',\n                'body2',\n                'caption',\n                'button',\n                'overline',\n                'srOnly',\n                'inherit',\n            ],\n            'overline'\n        )}\n        style={{\n            padding: text('style.padding', '0 4px'),\n            width: text('style.width', 'initial'),\n            boxSizing: 'border-box',\n        }}\n        paragraph={boolean('paragraph', false)}\n        noWrap={boolean('noWrap', true)}\n    />\n);\n\nwithTypographyProps.story = { name: 'with typography props' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-typography-props.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/list-item-tag",__IDS_TO_FRAMEWORKS__:{}}));withTypographyProps.story={name:"with typography props"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withDifferentColors",(function(){return withDifferentColors})),__webpack_require__.d(__webpack_exports__,"withTypographyProps",(function(){return withTypographyProps}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},listItemTagModule={title:constants.a+"/List Item Tag",component:react_components.ListItemTag,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("ListItemTag.md")}})};__webpack_exports__.default=listItemTagModule},1171:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(38),utils=__webpack_require__(16),Typography=__webpack_require__(84),dist=__webpack_require__(11),addon_knobs_dist=__webpack_require__(7),react=__webpack_require__(0),react_default=__webpack_require__.n(react),flexLayout=(__webpack_require__(13).withSource,(0,__webpack_require__(13).addSource)((function(){var flex1=Object(addon_knobs_dist.number)("Item 1 Flex",1,{range:!0,min:1,max:5,step:1}),flex2=Object(addon_knobs_dist.number)("Item 2 Flex",1,{range:!0,min:1,max:5,step:1}),flex3=Object(addon_knobs_dist.number)("Item 3 Flex",1,{range:!0,min:1,max:5,step:1});return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(Typography.a,null,"Horizontal"),react_default.a.createElement("div",{style:{width:300,height:50,display:"flex",flexDirection:"row",alignItems:"stretch"}},react_default.a.createElement(react_components.Spacer,{flex:flex1,style:{background:dist.blue[300]}},"1"),react_default.a.createElement(react_components.Spacer,{flex:flex2,style:{background:dist.yellow[300]}},"2"),react_default.a.createElement(react_components.Spacer,{flex:flex3,style:{background:dist.red[300]}},"3")),react_default.a.createElement(Typography.a,{style:{marginTop:20}},"Vertical"),react_default.a.createElement("div",{style:{width:300,height:150,display:"flex",flexDirection:"column",alignItems:"stretch"}},react_default.a.createElement(react_components.Spacer,{flex:flex1,style:{background:dist.blue[300]}},"1"),react_default.a.createElement(react_components.Spacer,{flex:flex2,style:{background:dist.yellow[300]}},"2"),react_default.a.createElement(react_components.Spacer,{flex:flex3,style:{background:dist.red[300]}},"3")))}),{__STORY__:"import { Typography } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { Spacer } from '@pxblue/react-components';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const flexLayout = (): StoryFnReactReturnType => {\n    const flex1 = number('Item 1 Flex', 1, { range: true, min: 1, max: 5, step: 1 });\n    const flex2 = number('Item 2 Flex', 1, { range: true, min: 1, max: 5, step: 1 });\n    const flex3 = number('Item 3 Flex', 1, { range: true, min: 1, max: 5, step: 1 });\n\n    return (\n        <>\n            <Typography>Horizontal</Typography>\n            <div style={{ width: 300, height: 50, display: 'flex', flexDirection: 'row', alignItems: 'stretch' }}>\n                <Spacer flex={flex1} style={{ background: Colors.blue[300] }}>\n                    1\n                </Spacer>\n                <Spacer flex={flex2} style={{ background: Colors.yellow[300] }}>\n                    2\n                </Spacer>\n                <Spacer flex={flex3} style={{ background: Colors.red[300] }}>\n                    3\n                </Spacer>\n            </div>\n            <Typography style={{ marginTop: 20 }}>Vertical</Typography>\n            <div style={{ width: 300, height: 150, display: 'flex', flexDirection: 'column', alignItems: 'stretch' }}>\n                <Spacer flex={flex1} style={{ background: Colors.blue[300] }}>\n                    1\n                </Spacer>\n                <Spacer flex={flex2} style={{ background: Colors.yellow[300] }}>\n                    2\n                </Spacer>\n                <Spacer flex={flex3} style={{ background: Colors.red[300] }}>\n                    3\n                </Spacer>\n            </div>\n        </>\n    );\n};\n\nflexLayout.story = { name: 'with flex layout' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/flex-layout.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/spacer",__IDS_TO_FRAMEWORKS__:{}}));flexLayout.story={name:"with flex layout"};__webpack_require__(13).withSource;var staticLayout=(0,__webpack_require__(13).addSource)((function(){var size1=Object(addon_knobs_dist.number)("Item 1 Size (px)",60,{range:!0,min:20,max:100,step:20}),size2=Object(addon_knobs_dist.number)("Item 2 Size (px)",60,{range:!0,min:20,max:100,step:20}),size3=Object(addon_knobs_dist.number)("Item 3 Size (px)",60,{range:!0,min:20,max:100,step:20});return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(Typography.a,null,"Horizontal"),react_default.a.createElement("div",{style:{width:300,height:50,display:"inline"}},react_default.a.createElement(react_components.Spacer,{width:size1,style:{background:dist.blue[300],display:"inline-block"}},"1"),react_default.a.createElement(react_components.Spacer,{width:size2,style:{background:dist.yellow[300],display:"inline-block"}},"2"),react_default.a.createElement(react_components.Spacer,{width:size3,style:{background:dist.red[300],display:"inline-block"}},"3")),react_default.a.createElement(Typography.a,{style:{marginTop:20}},"Vertical"),react_default.a.createElement("div",{style:{width:300,height:300}},react_default.a.createElement(react_components.Spacer,{height:size1,style:{background:dist.blue[300]}},"1"),react_default.a.createElement(react_components.Spacer,{height:size2,style:{background:dist.yellow[300]}},"2"),react_default.a.createElement(react_components.Spacer,{height:size3,style:{background:dist.red[300]}},"3")))}),{__STORY__:"import { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport * as Colors from '@pxblue/colors';\nimport { Spacer } from '@pxblue/react-components';\nimport { Typography } from '@material-ui/core';\nimport { number } from '@storybook/addon-knobs';\n\nexport const staticLayout = (): StoryFnReactReturnType => {\n    const size1 = number('Item 1 Size (px)', 60, { range: true, min: 20, max: 100, step: 20 });\n    const size2 = number('Item 2 Size (px)', 60, { range: true, min: 20, max: 100, step: 20 });\n    const size3 = number('Item 3 Size (px)', 60, { range: true, min: 20, max: 100, step: 20 });\n\n    return (\n        <>\n            <Typography>Horizontal</Typography>\n            <div style={{ width: 300, height: 50, display: 'inline' }}>\n                <Spacer width={size1} style={{ background: Colors.blue[300], display: 'inline-block' }}>\n                    1\n                </Spacer>\n                <Spacer width={size2} style={{ background: Colors.yellow[300], display: 'inline-block' }}>\n                    2\n                </Spacer>\n                <Spacer width={size3} style={{ background: Colors.red[300], display: 'inline-block' }}>\n                    3\n                </Spacer>\n            </div>\n            <Typography style={{ marginTop: 20 }}>Vertical</Typography>\n            <div style={{ width: 300, height: 300 }}>\n                <Spacer height={size1} style={{ background: Colors.blue[300] }}>\n                    1\n                </Spacer>\n                <Spacer height={size2} style={{ background: Colors.yellow[300] }}>\n                    2\n                </Spacer>\n                <Spacer height={size3} style={{ background: Colors.red[300] }}>\n                    3\n                </Spacer>\n            </div>\n        </>\n    );\n};\n\nstaticLayout.story = { name: 'with static layout' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/static-layout.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/spacer",__IDS_TO_FRAMEWORKS__:{}});staticLayout.story={name:"with static layout"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"flexLayout",(function(){return flexLayout})),__webpack_require__.d(__webpack_exports__,"staticLayout",(function(){return staticLayout}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},spacerModule={title:constants.a+"/Spacer",component:react_components.Spacer,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("Spacer.md")}})};__webpack_exports__.default=spacerModule},147:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/topology_40.a5d5a664.png"},16:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return hideTopBanner})),__webpack_require__.d(__webpack_exports__,"e",(function(){return storyWrapper})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getReadMeStory})),__webpack_require__.d(__webpack_exports__,"d",(function(){return storyParams})),__webpack_require__.d(__webpack_exports__,"a",(function(){return getReadMe}));var banner,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(38),getBanner=function getBanner(){return banner||(banner=window.top.document.getElementsByClassName("simplebar-content")[1]),banner},setBannerStyle=function setBannerStyle(display){return getBanner().setAttribute("style","display: ".concat(display))},hideTopBanner=function hideTopBanner(){return setBannerStyle("none")},prevUrl="",storyWrapper=function storyWrapper(storyFn){var currentUrl=window.top.location.href;return function showTopBanner(){setBannerStyle("unset")}(),function updateTitle(){setTimeout((function(){window.top.document.title="PX Blue | React Components"}),10);var link=window.top.document.querySelector("link[rel*='icon']")||document.createElement("link");link.type="image/x-icon",link.rel="shortcut icon",link.href="./pxblue.png",window.top.document.getElementsByTagName("head")[0].appendChild(link)}(),currentUrl.replace("/story/","").replace("/info/","")!==prevUrl.replace("/story/","").replace("/info/","")&&!currentUrl.includes("get-read-me")&&currentUrl.includes("/info/")&&function selectCanvasTab(){window.top.history.replaceState(null,"",window.top.location.href.replace("/info/","/story/")),getBanner().children[0].children[0].children[0].children[0].click()}(),prevUrl=currentUrl,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,storyFn())},getReadMeStory=function getReadMeStory(){return hideTopBanner(),window.top.location.href.includes("/story/")&&function selectNotesTab(){window.top.history.replaceState(null,"",window.top.location.href.replace("/story/","/info/")),getBanner().children[0].children[0].children[0].children[1].click()}(),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null)};getReadMeStory.story={name:_constants__WEBPACK_IMPORTED_MODULE_1__.b};var storyParams={options:{showPanel:!0},notes:{}},getReadMe=function getReadMe(name){var md=__webpack_require__(926)("./".concat(name));return md.default=md.default.replace(/\(.\/.*md\)/g,(function(substring){var root=window.top.location.href.split("/?")[0],path="?path=/info/".concat(_constants__WEBPACK_IMPORTED_MODULE_1__.a.toLowerCase()),dashed=substring.split("/")[1].split(".")[0].replace(/\.?([A-Z])/g,(function(x){return"-".concat(x.toLowerCase())}));return"(".concat(root).concat(path).concat(dashed,"--get-read-me-story)")})),md}},235:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/EatonLogo.bb857d1a.svg"},326:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"appliedTheme",(function(){return appliedTheme}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(118),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(7),_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(190),_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1173),_pxblue_react_themes__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(558),_pxblue_colors__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(11),_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__(912),__webpack_require__(191));_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a.brandTitle="PX Blue React Component Library",_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a.brandImage=__webpack_require__(918),_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a.brandUrl="https://pxblue.github.io",Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addParameters)({name:"PXBlue",notes:{markdown:"<div> </div>"},viewport:{viewports:{iPhone5:{name:"iPhone 5",styles:{width:"320px",height:"568px"}},iPhone6:{name:"iPhone 6",styles:{width:"375px",height:"667px"}},iPad:{name:"iPad",styles:{width:"768px",height:"1024px"}}}},options:{theme:_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a,showRoots:!0}});var appliedTheme=Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__.a)(_pxblue_react_themes__WEBPACK_IMPORTED_MODULE_5__.blue);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addDecorator)((function(storyFn){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__.a,{theme:appliedTheme},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"wrapper",style:{color:_pxblue_colors__WEBPACK_IMPORTED_MODULE_6__.gray[800]}},storyFn()))})),Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addDecorator)(Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.withKnobs)({escapeHTML:!1}))},38:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return COMPONENT_SECTION_NAME})),__webpack_require__.d(__webpack_exports__,"b",(function(){return README_STORY_NAME}));var COMPONENT_SECTION_NAME="Components",README_STORY_NAME="README"},514:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__.d(__webpack_exports__,"stories",(function(){return stories}));var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(188),_material_ui_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(327),_material_ui_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(84),_material_ui_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1176),_storybook_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(118),react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__),_storybook_config__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(326),_src_utils__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(16),_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(11),withSourceLoader=__webpack_require__(13).withSource,__STORY__=(__webpack_require__(13).addSource,withSourceLoader=__webpack_require__(13).withSource,__webpack_require__(13).addSource,"import { Button, createStyles, makeStyles, Typography } from '@material-ui/core';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport { appliedTheme } from '../.storybook/config';\nimport { hideTopBanner, storyWrapper } from '../src/utils';\nimport * as Colors from '@pxblue/colors';\nconst backgroundImage = require('../assets/circles-bg.svg');\n\nexport const stories = storiesOf('Intro/Overview', module);\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            //@ts-ignore\n            color: Colors.white[50],\n            //@ts-ignore\n            backgroundColor: appliedTheme.palette.primary[500],\n            backgroundImage: `url(${backgroundImage})`,\n            height: '100%',\n            width: '100%',\n            display: 'flex',\n            alignContent: 'center',\n            justifyContent: 'center',\n        },\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            textAlign: 'center',\n        },\n        icon: {\n            textAlign: 'center',\n        },\n        description: {\n            maxWidth: 900,\n            padding: 36,\n            paddingBottom: 0,\n            fontWeight: 100,\n        },\n        link: {\n            minWidth: 100,\n            fontWeight: 600,\n            borderColor: Colors.white[50],\n            textTransform: 'none',\n            '&:hover': {\n                borderColor: Colors.white[50],\n            },\n        },\n        githubIcon: {\n            width: 24,\n            height: 24,\n            marginRight: 8,\n            fill: Colors.white[50],\n        },\n        github: {\n            fontWeight: 100,\n            color: Colors.white[50],\n        },\n        buttons: {\n            display: 'flex',\n            justifyContent: 'space-around',\n            marginTop: 36,\n        },\n    })\n);\nstories.addParameters({\n    options: {\n        showPanel: false,\n    },\n});\n\nstories.addDecorator(storyWrapper);\n\nstories.add('PX Blue React Components', () => {\n    const classes = useStyles();\n    const icon = require('../assets/pxb-icon.svg');\n    hideTopBanner();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <div className={classes.icon}>\n                    <img src={icon} alt=\"pxb-icon\" className={'rotate'} />\n                </div>\n                <Typography variant={'h2'}>\n                    Power Xpert <strong>Blue</strong>\n                </Typography>\n                <Typography variant={'h4'}>React Component Library</Typography>\n                <Typography variant={'subtitle1'} className={classes.description}>\n                    Learn about and interact with our PX Blue components using Storybook.\n                </Typography>\n\n                <div className={classes.buttons}>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.link}\n                        target={'_blank'}\n                        href={'https://github.com/pxblue/react-component-library'}\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={classes.githubIcon}>\n                            <title>github</title>\n                            <rect width=\"24\" height=\"24\" fill=\"none\" />\n                            <path d=\"M12,2A10,10,0,0,0,8.84,21.5c.5.08.66-.23.66-.5V19.31C6.73,19.91,6.14,18,6.14,18A2.69,2.69,0,0,0,5,16.5c-.91-.62.07-.6.07-.6a2.1,2.1,0,0,1,1.53,1,2.15,2.15,0,0,0,2.91.83,2.16,2.16,0,0,1,.63-1.34C8,16.17,5.62,15.31,5.62,11.5a3.87,3.87,0,0,1,1-2.71,3.58,3.58,0,0,1,.1-2.64s.84-.27,2.75,1a9.63,9.63,0,0,1,5,0c1.91-1.29,2.75-1,2.75-1a3.58,3.58,0,0,1,.1,2.64,3.87,3.87,0,0,1,1,2.71c0,3.82-2.34,4.66-4.57,4.91a2.39,2.39,0,0,1,.69,1.85V21c0,.27.16.59.67.5A10,10,0,0,0,12,2Z\" />\n                        </svg>\n                        <Typography variant={'subtitle2'} className={classes.github}>\n                            Github\n                        </Typography>\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n});\n"),__ADDS_MAP__={},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},backgroundImage=__webpack_require__(949),stories=Object(_storybook_react__WEBPACK_IMPORTED_MODULE_4__.storiesOf)("Intro/Overview",module).addParameters({storySource:{source:__STORY__,locationsMap:__ADDS_MAP__}}).addDecorator(withSourceLoader(__STORY__,__ADDS_MAP__,"/welcome.stories.tsx",__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,"/home/circleci/project/demos/storybook/stories",__IDS_TO_FRAMEWORKS__)).addParameters({storySource:{source:__STORY__,locationsMap:__ADDS_MAP__}}).addDecorator(withSourceLoader(__STORY__,__ADDS_MAP__,"/welcome.stories.tsx",__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,"/home/circleci/project/demos/storybook/stories",__IDS_TO_FRAMEWORKS__)),useStyles=Object(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.a)((function(){return Object(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.a)({root:{color:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50],backgroundColor:_storybook_config__WEBPACK_IMPORTED_MODULE_6__.appliedTheme.palette.primary[500],backgroundImage:"url("+backgroundImage+")",height:"100%",width:"100%",display:"flex",alignContent:"center",justifyContent:"center"},container:{display:"flex",flexDirection:"column",justifyContent:"center",textAlign:"center"},icon:{textAlign:"center"},description:{maxWidth:900,padding:36,paddingBottom:0,fontWeight:100},link:{minWidth:100,fontWeight:600,borderColor:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50],textTransform:"none","&:hover":{borderColor:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50]}},githubIcon:{width:24,height:24,marginRight:8,fill:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50]},github:{fontWeight:100,color:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50]},buttons:{display:"flex",justifyContent:"space-around",marginTop:36}})}));stories.addParameters({options:{showPanel:!1}}),stories.addDecorator(_src_utils__WEBPACK_IMPORTED_MODULE_7__.e),stories.add("PX Blue React Components",(function(){var classes=useStyles(),icon=__webpack_require__(950);return Object(_src_utils__WEBPACK_IMPORTED_MODULE_7__.c)(),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.root},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.container},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.icon},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("img",{src:icon,alt:"pxb-icon",className:"rotate"})),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"h2"},"Power Xpert ",react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("strong",null,"Blue")),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"h4"},"React Component Library"),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"subtitle1",className:classes.description},"Learn about and interact with our PX Blue components using Storybook."),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.buttons},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.a,{variant:"outlined",color:"primary",className:classes.link,target:"_blank",href:"https://github.com/pxblue/react-component-library"},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",className:classes.githubIcon},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("title",null,"github"),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("rect",{width:"24",height:"24",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("path",{d:"M12,2A10,10,0,0,0,8.84,21.5c.5.08.66-.23.66-.5V19.31C6.73,19.91,6.14,18,6.14,18A2.69,2.69,0,0,0,5,16.5c-.91-.62.07-.6.07-.6a2.1,2.1,0,0,1,1.53,1,2.15,2.15,0,0,0,2.91.83,2.16,2.16,0,0,1,.63-1.34C8,16.17,5.62,15.31,5.62,11.5a3.87,3.87,0,0,1,1-2.71,3.58,3.58,0,0,1,.1-2.64s.84-.27,2.75,1a9.63,9.63,0,0,1,5,0c1.91-1.29,2.75-1,2.75-1a3.58,3.58,0,0,1,.1,2.64,3.87,3.87,0,0,1,1,2.71c0,3.82-2.34,4.66-4.57,4.91a2.39,2.39,0,0,1,.69,1.85V21c0,.27.16.59.67.5A10,10,0,0,0,12,2Z"})),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"subtitle2",className:classes.github},"Github")))))}))}.call(this,__webpack_require__(513)(module))},515:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# UserMenu\nThe `UserMenu` is an Avatar that opens a Menu when clicked. It is typically used in the top-right corner of an application and indicates who is logged in.\n\nThe Menu can be populated via the `menuGroups` prop, or can be entirely customized by supplying your own `Menu`.\n\n## Usage \n```typescript\nimport { UserMenu } from '@pxblue/react-components';\nimport { Avatar, Menu } from '@material-ui/core';\nimport {Email, Settings} from \"@material-ui/icons\";\nimport SendIcon from '@material-ui/icons/Send';\n\nconst avatar = <Avatar><SendIcon/></Avatar>;\n...\n/* Using menuGroups prop */\n<UserMenu avatar={avatar} menuGroups={[\n    {\n       items: [\n           {\n               title: 'Log Out',\n               icon: <SendIcon />,\n           },\n           {\n               title: 'Account Settings',\n               icon: <Settings />,\n           },\n           {\n               title: 'Contact Us',\n               icon: <Email />,\n           },\n       ],\n    },\n]} />\n\n/* Using menu prop */\n<UserMenu avatar={avatar} menu={<Menu/>} />\n\n```\n\n\n## API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name         | Description                                      | Type                     | Required | Default     |\n|-------------------|--------------------------------------------------|--------------------------|----------|-------------|\n| avatar            | MUI Avatar that displays                         | `Avatar`                 | no       |             |  \n| classes           | Style overrides                                  | `StyleRules`             | no       |             |           \n| onClose           | Function called when the menu is closed          | `Function`               | no       |             |                                         \n| onOpen            | Function called when the menu is opened          | `Function`               | no       |             |                                         \n| menu              | Custom MUI Menu displayed when Avatar is clicked | Material-UI `Menu`       | no       |             |                                         \n| menuTitle         | Title shown when menu is open                    | `string`                 | no       |             |                                         \n| menuSubtitle      | Subtitle shown when menu is open                 | `string`                 | no       |             |                                         \n| menuGroups        | Groups of menu items that display                | `UserMenuGroups`         | no       |             |                                         \n| MenuProps         | Property overrides for the MUI Menu              | `MenuProps`              | no       |             |          \n                               \n</div>\n\n#### UserMenuGroups Object\nThe `menuGroups` prop of the `UserMenu` includes many properties from the `DrawerNavGroup` array found within a `DrawerBody`.\n\n<div style=\"overflow: auto;\">\n\n| Prop Name             | Description                             | Type              | Required | Default |\n|-----------------------|-----------------------------------------|-------------------|----------|---------|\n| fontColor             | The color used for the text             | `string`          | no       |         |\n| iconColor             | The color used for icons                | `string`          | no       |         |\n| items                 | List of navigation items to render      | `UserMenuItem[]`  | no       |         |  \n| title                 | Text to display in the group header     | `string`          | no       |         |  \n\n</div>\n\n#### UserMenuItem Object\n\n<div style=\"overflow: auto;\">\n\n| Attribute       | Description                             | Type               | Required | Default                      |\n|-----------------|-----------------------------------------|--------------------|----------|------------------------------|\n| chevron         | Show chevron icon to the right          | `boolean`          | no       | false                        |  \n| divider         | Show a divider line below the item      | `boolean`          | no       | true                         |  \n| icon            | A component to render for the icon      | `React.Component`  | no       |                              |      \n| onClick         | A function to execute when clicked      | `function`         | no       |                              |    \n| statusColor     | Status stripe and icon color            | `string`           | no       |                              |    \n| subtitle        | The text to show on the second line     | `string`           | no       |                              |    \n| title           | The text to show on the first line      | `string`           | no       |                              |    \n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                 |\n|------------------|---------------------------------------------|\n| root             | Styles applied to the root element          |\n\n"},556:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/trex.16a80028.jpeg"},573:function(module,exports,__webpack_require__){__webpack_require__(574),__webpack_require__(720),__webpack_require__(326),__webpack_require__(921),module.exports=__webpack_require__(922)},638:function(module,exports){},918:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/pxblue-react.004ac03a.svg"},922:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(118);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(923),__webpack_require__(952)],module)}.call(this,__webpack_require__(513)(module))},923:function(module,exports,__webpack_require__){var map={"./welcome.stories.tsx":514};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=923},926:function(module,exports,__webpack_require__){var map={"./ChannelValue.md":927,"./Drawer.md":928,"./DrawerLayout.md":929,"./EmptyState.md":930,"./Hero.md":931,"./InfoListItem.md":932,"./ListItemTag.md":933,"./README.md":934,"./ScoreCard.md":935,"./Spacer.md":936,"./UserMenu.md":515,"./images/channelValue.png":937,"./images/drawer.png":938,"./images/drawerAnatomy.png":939,"./images/drawerLayout.png":940,"./images/emptyState.png":941,"./images/heroes.png":942,"./images/infoListItem.png":943,"./images/listItemTag.png":944,"./images/scoreCard.png":945,"./images/scoreCardAnatomy.png":946,"./images/scoreCard_alt.png":947,"./images/spacer.png":948};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=926},927:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# ChannelValue\nThe ChannelValue component is used to display...a channel value (and units). This component abstracts the styles used to display the channel and units as well as an optional inline icon. These are used as part of the [Hero](./Hero.md) component, but can also be used inline (e.g., in a list).\n\n<div style="text-align:center; width: 100%">\n    <img width="100%" style="max-width: 600px" alt="Channel Value in Hero" src="./images/heroes.png">\n    <hr />\n    <img width="100%" style="max-width: 600px" alt="Channel Value in a list item" src="./images/channelValue.png">\n</div>\n\n\n## Usage\n```typescript\nimport { ChannelValue } from \'@pxblue/react-components\';\n...\n<ChannelValue value={100} units={\'%\'} icon={<Icon/>} />\n```\n\n### API\n<div style="overflow: auto;">\n\n| Prop Name   | Description                                    | Type                     | Required | Default   | Examples           |\n|-------------|------------------------------------------------|--------------------------|----------|-----------|--------------------|\n| value       | The the value (bold text) to display           | `string` \\| `number`     | yes      |           | \'125\'              |\n| units       | The text to display for the units (light text) | `string`                 | no       |           | \'Hz\'               |\n| icon        | The inline icon to display                     | `React.Component`        | no       |           | \'Hz\'               |\n| prefix      | Show units before the value                    | `boolean`                | no       | false     |                    |\n| fontSize    | The size of the font                           | `string` \\| `number`     | no       | \'inherit\' | \'12rem\'            |\n| color       | The color of the font                          | `string`                 | no       | \'inherit\' | \'rgba(0,0,0,0.25)\' |\n\n</div>\n'},928:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# Drawer\nThe Drawer component is a wrapper around the Material UI Drawer that adds specific PX Blue functionality and styling. It is used to organize content (typically navigation links) in a collapsible side panel. The PX Blue Drawer includes helper components for `DrawerHeader`, `DrawerSubheader`, `DrawerBody`, `DrawerNavGroup`, and `DrawerFooter` to help organize the content.\n\n<div style=\"width: 100%; text-align: center\">\n    <img width=\"100%\" style=\"max-width: 200px\" alt=\"Nested Drawer\" src=\"./images/drawer.png\">\n</div>\n\n## Drawer\nThe Drawer component is the parent container, which manages the overall state of the drawer and renders the child components.\n\n<div style=\"width: 100%; text-align: center\">\n    <img width=\"100%\" style=\"max-width: 400px\" alt=\"Drawer Anatomy\" src=\"./images/drawerAnatomy.png\">\n</div>\n\n### Drawer Usage\n```typescript\nimport { Drawer, DrawerHeader, DrawerSubheader, DrawerBody, DrawerNavGroup, DrawerFooter } from '@pxblue/react-components';\n...\n<Drawer open={true}>\n    <DrawerHeader />\n    <DrawerSubheader />\n    <DrawerBody>\n        <DrawerNavGroup/>\n        <DrawerNavGroup/>\n        <DrawerNavGroup/>\n    </DrawerBody>\n    <DrawerFooter />\n</Drawer>\n```\n\n### Drawer API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name           | Description                                      | Type        | Required | Default  |          \n|---------------------|--------------------------------------------------|-------------|----------|----------|\n| open                | Controls the open/closed state of the drawer     | `boolean`   | yes      |          |\n| width               | Sets the width of the drawer (in px) when open   | `number `   | no       |          |\n\n</div>\n\n## DrawerHeader\nThe `DrawerHeader` contains the content at the top of the `Drawer`. By default, it renders multiple lines of text in the PX Blue style. If you supply a `titleContent`, you can render your own custom content in the title area. \n    \n### DrawerHeader API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name         | Description                                    | Type              | Required | Default                      |\n|-------------------|------------------------------------------------|-------------------|----------|------------------------------|\n| backgroundColor   | The color used for the background              | `string`          | no       | `theme.palette.primary.main` |\n| backgroundImage   | An image to display in the header              | `string`          | no       |                              |\n| backgroundOpacity | The opacity of the background image            | `number`          | no       | `0.3`                        |\n| fontColor         | The color of the text elements                 | `string`          | no       | `Colors.white[50]`           |\n| icon              | A component to render for the icon             | `React.Component` | no       |                              |\n| onIconClick       | A function to execute when the icon is clicked | `function`        | no       | `() => {}`                   |\n| subtitle          | The text to show on the second line            | `string`          | no       |                              |\n| title             | The text to show on the first line             | `string`          | no       |                              |\n| titleContent      | Custom content for header title area           | `React.Component` | no       |                              |\n\n</div>\n\n## DrawerSubheader\nThe `DrawerSubheader` is an optional section that renders below the header and above the body of the `Drawer`. It can be used to support custom content (passed as children), such as filtering options or to display additional information.\n\n### DrawerSubheader Usage\n```typescript\nimport DrawerSubheader from '@pxblue/react-components/core/Drawer';\n...\n<DrawerSubheader>\n    <div>Custom Subheader Content</div>\n</DrawerSubheader>\n```\n\n## DrawerBody\nThe `DrawerBody` is a wrapper for the main content of the Drawer. The typical use case is to display `DrawerNavGroup` elements, but custom elements (e.g., for spacing) are accepted as well.\n\n### DrawerBody Usage\n```typescript\nimport DrawerBody from '@pxblue/react-components/core/Drawer';\n...\n<DrawerBody>\n    <DrawerNavGroup title={'Nav Items'} items={...} />\n    <DrawerNavGroup title={'More Nav Items'} items={...} />\n</DrawerBody>\n```\n\n### DrawerBody API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name               | Description                                    | Type          | Required | Default |\n|-------------------------|------------------------------------------------|---------------|----------|---------|\n| activeBackgroundColor   | Background color for the 'active' item         | `string`      | no       |         |\n| activeFontColor         | Font color for the 'active' item               | `string`      | no       |         |\n| activeIconColor         | Icon color for the 'active' item               | `string`      | no       |         |\n| backgroundColor         | The color used for the background              | `string`      | no       |         |\n| fontColor               | The color used for the text                    | `string`      | no       |         |\n| iconColor               | The color used for icons                       | `string`      | no       |         |\n| titleColor              | The color used for `DrawerNavGroup` title text | `string`      | no       |         |\n\n</div>\n\n## DrawerNavGroup \nA `DrawerNavGroup` is used inside of the `DrawerBody` to organize links/content. Each group consists of an (optional) group title and a series of NavItems. Most visual props are inherited from the `DrawerBody` but can be overridden at the NavGroup level if desired.\n\nThe `items` property supports nested items to generate collapsible sections in the menu. This can be used to create an arbitrary tree depth, but we do not recommend going more than two levels deep in a navigation Drawer.\n\n### DrawerNavGroup API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name             | Description                                                      | Type                      | Required | Default   |\n|-----------------------|------------------------------------------------------------------|---------------------------|----------|-----------|\n| activeBackgroundColor | Background color for the 'active' item                           | `string`                  | no       |           |\n| activeFontColor       | Font color for the 'active' item                                 | `string`                  | no       |           |\n| activeIconColor       | Icon color for the 'active' item                                 | `string`                  | no       |           | \n| activeItem            | `itemID` of the 'active' item                                    | `string`                  | no       |           | \n| activeItemShape       | Shape of the active item highlight                               | `'square'` \\| `'round'`   | no       | 'round'   | \n| backgroundColor       | The color used for the background                                | `string`                  | no       |           |   \n| chevron               | Show chevron icon (shortcut for `rightComponent`)                | `boolean`                 | no       |           |    \n| titleContent          | Custom element to render as the title                            | `React.Component`         | no       |           |    \n| divider               | Whether to show a line between top-level NavItems                | `boolean`                 | no       | true      |    \n| fontColor             | The color used for NavItem text                                  | `string`                  | no       | theme.palette.text.secondary |   \n| hidePadding           | Whether to hide the paddings reserved for NavItem icons          | `boolean`                 | no       |           | \n| iconColor             | The color used for the icon                                      | `string`                  | no       |           |   \n| items                 | List of NavItems to render                                       | `NestedNavItem[]`         | yes      |           | \n| nestedDivider         | Whether to show a line between nested NavItems                   | `boolean`                 | no       | false     |    \n| open                  | Whether the group is expanded                                    | `function`                | no       |           |\n| ripple                | Whether to apply material ripple effect to items                 | `boolean`                 | no       | true      |\n| title                 | Text to display in the group header                              | `string`                  | no       |           |  \n| titleColor            | Font color for group header title text                           | `string`                  | no       |           | \n\n</div>\n\n#### NavItem Object\nThe `items` prop of the `DrawerNavGroup` takes a list of items with the following structure (most of these properties are inherited from `<InfoListItem/>`). NavItem can also include a list of `NestedNavItem` to create a tree structure (see below).\n\n<div style=\"overflow: auto;\">\n\n| Attribute       | Description                                                                                                    | Type               | Required | Default                          |\n|-----------------|----------------------------------------------------------------------------------------------------------------|--------------------|----------|----------------------------------|\n| chevron         | Show chevron icon to the right (shortcut for `rightComponent` )                                                | `boolean`          | no       | false                            |  \n| collapseIcon    | Icon used to collapse drawer                                                                                   | `JSX.Element`      | no       | expandIcon rotated 180 deg       |  \n| divider         | Show a divider line below the top-level item                                                                   | `boolean`          | no       | true                             | \n| expandIcon      | Icon used to expand drawer                                                                                     | `JSX.Element`      | no       | `<ExpandLess />`, or  `<ArrowDropUp />` if it is a `NestedNavItem` |  \n| icon            | A component to render for the left icon                                                                        | `JSX.Element`      | no       |                                  |\n| itemID          | An unique identifier of the NavItem. Item will have 'active' style when this matches  DrawerNavGroup.activeItem | `string`          | yes      |                                  |  \n| items           | The items nested under this item                                                                               | `NestedNavItem[]`  | no       |                                  |    \n| onClick         | A function to execute when clicked                                                                             | `function`         | no       |                                  |       \n| rightComponent  | An icon/component to display to the right                                                                      | `JSX.Element`      | no       |                                  |   \n| statusColor     | Status stripe and icon color                                                                                   | `string`           | no       |                                  |   \n| subtitle        | The text to show on the second line                                                                            | `string`           | no       |                                  |    \n| title           | The text to show on the first line                                                                             | `string`           | yes      |                                  |    \n\n</div>\n\n#### NestedNavItem Object\nThe `items` property of the NavItem can be nested to create a tree structure with expand/collapse panels. Nested items take the same properties as `NavItem` with the exception of `icon` (nested items cannot use icons). \n\n``` typescript\n<DrawerNavGroup \n    items=[\n        {\n            title: 'a',\n            itemID: 'a',\n            items: [\n                {\n                    title: 'a-1',\n                    itemID: 'a-1',\n                },\n                {\n                    title: 'a-2',\n                    itemID: 'a-2',\n                    items: [\n                        {\n                            title: 'a-2-1',\n                            itemID: 'a-2-1',\n                        },\n                        {\n                            title: 'a-2-2',\n                            itemID: 'a-2-2',\n                        },\n                    ]\n                },\n                {\n                    title: 'a-3',\n                    itemID: 'a-3',\n                },\n            ]\n        },\n    ]\n/>\n```\n\n## Drawer Footer\nThe `DrawerFooter` is an optional section that renders at the bottom of the `Drawer`. It can be used to add any custom content (as children).\n\n\n### Drawer Footer API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name       | Description                             | Type          | Required | Default |\n|-----------------|-----------------------------------------|---------------|----------|---------|\n| backgroundColor | The color used for the background       | `string`      | no       |         |   \n\n</div>\n\n### Usage\n```typescript\nimport DrawerFooter from '@pxblue/react-components/core/Drawer';\n...\n<DrawerFooter>\n    <div>Custom Footer goes here</div>\n</DrawerFooter>\n```\n"},929:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# DrawerLayout\nThe `DrawerLayout` component is used to provide the appropriate resizing behavior for your main application content when used in conjunction with  a PX Blue `Drawer`. It accepts a `Drawer` as a prop, and the main page content is passed in through child elements.\n\n<div style="width: 100%; text-align: center">\n    <img width="100%" style="max-width: 600px" alt="DrawerLayout with labels" src="./images/drawerLayout.png">\n</div>\n\n### Usage\n```typescript\nimport { Drawer, DrawerLayout } from \'@pxblue/react-components\';\n...\n<DrawerLayout drawer={<Drawer ... />} >\n    <>\n        /* Page content goes here */\n    </>\n</DrawerLayout>\n```\n'},930:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# EmptyState\nThe EmptyState component is an element that can be used as a placeholder when no data is present (such as an empty list, or a placeholder page for future content). This is only used when no data is available, rather than during loading (see [empty states pattern](https://pxblue.github.io/patterns/empty-states)).\n\n<div style="width: 100%; text-align: center">\n    <img width="100%" style="max-width: 200px" alt="Empty State component with action button" src="./images/emptyState.png">\n</div>\n\n## Usage\n```typescript\nimport { EmptyState } from \'@pxblue/react-components\';\n\n<EmptyState\n    icon={<AlertIcon style={{ fontSize: \'100px\', marginBottom: \'15px\' }} />}\n    title={"No Alarms Found"}\n/>\n```\n \n## API\n\n<div style="overflow: auto;">\n\n| Prop Name   | Description                             | Type              | Required | Default | Examples                              |\n|-------------|-----------------------------------------|-------------------|----------|---------|---------------------------------------|\n| title       | The main text to display                | `string`          | yes      |         | \'No Data Found\'                       |\n| description | The secondary text to display           | `string`          | no       |         | \'Come back to this page later\'        |\n| icon        | The primary icon                        | `React.Component` | no       |         | `<DevicesIcon fontSize={\'inherit\'}/>` |\n| actions     | Additional components to render below   | `React.Component` | no       |         | `<Button>Add Device</Button>`         |\n\n</div>\n'},931:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# Hero\nThe PX Blue Hero components are used to call attention to particular values that are of the most importance to the user. These are typically displayed in a banner.\n\n<div style=\"width: 100%; text-align:center\">\n<img width=\"100%\" style=\"max-width: 600px\" alt=\"Hero Banner\" src=\"./images/heroes.png\">\n</div>\n\n## Hero\nThe Hero component displays a particular icon, value/units, and a label. The icon property will accept any valid component - this will typically be a Material icon, PX Blue icon, or Progress Icon. It will also accept Text/Emoji values.\n\nThe value section of the Hero utilizes a [ChannelValue](./ChannelValue.md) component. To display a single simple value, the information can be passed as props (```value```, ```units```, ```valueIcon```). For more complex values (such as a duration that displays hours and minutes), you can pass in ```<ChannelValue>``` components as children and they will be displayed inline.\n\n### Usage\n```typescript\nimport { Hero } from '@pxblue/react-components';\n\n// Simple usage passing props\n<Hero\n    icon={<Icon/>}\n    label={'Label'}\n    value={99}\n    units={'%'}\n/>\n// Complex example with multiple values as children\n<Hero\n    icon={<Icon/>}\n    label={'Label'}\n>\n    <ChannelValue value={1} units={'h'} />\n    <ChannelValue value={26} units={'m'} />\n</Hero>\n```\n\n### Hero API\n<div style=\"overflow: auto;\">\n\n| Prop Name           | Description                             | Type                                                               | Required | Default                | Examples                       |\n|---------------------|-----------------------------------------|--------------------------------------------------------------------|----------|------------------------|--------------------------------|\n| icon                | The primary icon                        | `React.Component` \\| `string`                                      | yes      |                        | `<Icon/>`                      |\n| label               | The text shown below the `ChannelValue` | `string`                                                           | yes      |                        | 'Status'                       |\n| iconSize            | The size of the primary icon (10-72)    | `number`                                                           | no       | 36                     | 24                             |\n| iconBackgroundColor | The color used behind the primary icon  | `string`                                                           | no       | 'transparent'          | 'red'                          |\n| fontSize            | The text size for the value line        | `'normal'` \\| `'small'`                                            | no       | 'normal'               |                                |\n| value               | The value for the channel               | `string` \\| `number`                                               | no       |                        | 240, 'Off'                     |\n| units               | Text to show after the value            | `string`                                                           | no       |                        | 'Hz', '$'                      |\n| valueIcon           | The inline icon with the value          | `React.Component`                                                  | no       |                        | `<Icon/>`                      |\n\n</div>\n\n## HeroBanner\nThe HeroBanner component is a simple wrapper component that is used to contain ```<Hero/>```s. It creates the flex container and sets up the spacing rules to display them. It accepts up to four ```<Hero/>``` components as its children.\n\n### HeroBanner Usage\n```typescript\nimport HeroBanner from '@pxblue/react-components/core/HeroBanner';\nimport Hero from '@pxblue/react-components/core/Hero';\n...\n<HeroBanner divider>\n    <Hero/>\n    <Hero/>\n    <Hero/>\n    <Hero/>\n</HeroBanner>\n```\n\n### HeroBanner API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name | Description                             | Type      | Required | Default | Examples |\n|-----------|-----------------------------------------|-----------|----------|---------|----------|\n| divider   | Whether to show the line separator      | `boolean` | no       | false   |          |\n| limit     | Max number of children to display       | `number`  | no       | 4       |          |\n\n</div>\n"},932:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# InfoListItem\nThe InfoListItem is intended to be used in List views. It positions a title as well as optional subtitle(s), icon, and status stripe.\n\n<img width=\"100%\" alt=\"Info List Items in a variety of styles\" src=\"./images/infoListItem.png\">\n\n## Usage\n\n```typescript\nimport { InfoListItem } from '@pxblue/react-components';\nimport { GradeA, Leaf, CurrentCircled, VoltageCircled, Temp } from '@pxblue/icons-mui';\nimport * as Colors from '@pxblue/colors';\n...\n<InfoListItem\n    title={'Status'}\n    divider={'full'}\n    statusColor={Colors.green[500]}\n    subtitleSeparator={'/'}\n    icon={<Leaf color={'inherit'} />}\n/>\n```\n\n### API\n\n<div style=\"overflow: auto;\">\n| Prop Name         | Description                                      | Type                                               | Required | Default             | Examples                                |\n|-------------------|--------------------------------------------------|----------------------------------------------------|----------|---------------------|-----------------------------------------|\n| avatar            | Show colored background for icon                 | `boolean`                                          | no       | false               |                                         |\n| backgroundColor   | The color used for the background                | `string`                                           | no       |                     | 'white', 'blue'                         |\n| chevron           | Add a chevron icon on the right                  | `boolean`                                          | no       | false               |                                         |\n| dense             | Smaller height row with less padding             | `boolean`                                          | no       | false               |                                         |\n| divider           | Show a row separator below the row               | `'full'` \\| `'partial'`                            | no       |                     |                                         |\n| fontColor         | Title text color                                 | `string`                                           | no       |                     | '#ff3333', 'orange'                     |\n| hidePadding       | Remove left padding if no icon is used           | `boolean`                                          | no       | false               |                                         |\n| icon              | A component to render for the icon               | `React.Component`                                  | no       |                     | `<Leaf color={'inherit'} />`            |\n| iconColor         | Color override for the row icon                  | `string`                                           | no       |                     |                                         |\n| leftComponent     | Component to render on the left side             | `React.Component`                                  | no       |                     | `<ListItemText/>`                       |\n| onClick           | A function to execute when clicked               | `function`                                         | no       |                     | `() => console.log('pressed')`          |\n| rightComponent    | Component to render on the right side            | `React.Component`                                  | no       |                     | `<ChannelValue/>`                       |\n| ripple            | Whether to apply material ripple effect on click | `boolean`                                          | no       | false               |                                         |\n| statusColor       | Status stripe and icon color                     | `string`                                           | no       |                     | '#ff3333', 'orange'                     |\n| subtitle          | The text to show on the second line              | `string` \\| `Array<React.ReactNode>`               | no       |                     | 'Subtitle', ['one', 'two', `<Leaf/>`]   |\n| subtitleSeparator | Separator character for subtitle                 | `string`                                           | no       | '·' ('\\u00B7')      | '-', '/'                                |\n| title             | The text to show on the first line               | `string`                                           | yes      |                     | 123, 'on'                               |\n\n</div>\n"},933:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# ListItemTag\nListItemTag is a text item with a colored background and rounded corners that is used to tag lists.\n\n<img width=\"100%\" alt=\"List Item Tag\" src=\"./images/listItemTag.png\">\n\n### Usage\n\n```typescript\nimport { ListItemTag } from '@pxblue/react-components';\n\n<ListItemTag label={\"Foo Bar\"} backgroundColor={'gold'} fontColor={'black'} />\n```\n\n### API\n\nBesides what's listed below, as an extension of [Material UI's Typography API](https://material-ui.com/api/typography/), the component will pass in all extra props.\n\n<div style=\"overflow: auto;\">\n\n| Prop Name       | Description                   | Type     | Required | Default   | Example   |\n| --------------- | ----------------------------- | -------- | -------- | --------- | --------- |\n| label           | The label text                | `string` | yes      |           | `'Foo'`   |\n| fontColor       | Color of the label            | `string` | no       | `#ffffff` | `'white'` |\n| backgroundColor | Color of the label background | `string` | no       | `#007bc1` | `'green'` |\n\n</div>\n"},934:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# React Components\nWe currently have the following components available for React applications:\n\n- [ChannelValue](https://github.com/pxblue/react-component-library/blob/dev/docs/ChannelValue.md)\n- [Drawer](https://github.com/pxblue/react-component-library/blob/dev/docs/Drawer.md)\n- [DrawerLayout](https://github.com/pxblue/react-component-library/blob/dev/docs/DrawerLayout.md)\n- [EmptyState](https://github.com/pxblue/react-component-library/blob/dev/docs/EmptyState.md)\n- [Hero & HeroBanner](https://github.com/pxblue/react-component-library/blob/dev/docs/Hero.md)\n- [InfoListItem](https://github.com/pxblue/react-component-library/blob/dev/docs/InfoListItem.md)\n- [ListItemTag](https://github.com/pxblue/react-component-library/blob/dev/docs/ListItemTag.md)\n- [ScoreCard](https://github.com/pxblue/react-component-library/blob/dev/docs/ScoreCard.md)\n- [Spacer](https://github.com/pxblue/react-component-library/blob/dev/docs/Spacer.md)\n- [UserMenu](https://github.com/pxblue/react-component-library/blob/dev/docs/UserMenu.md)\n"},935:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# ScoreCard\nCard component that calls attention to particular values.\n\n<div style="text-align: center; width: 100%; display: flex; justify-content: space-evenly; margin-bottom: 20px">\n    <img width="40%" alt="Score Card with multiple highlighted values" src="./images/scoreCard.png"><br/>\n    <img width="40%" alt="Score Card with single badge-style value" src="./images/scoreCard_alt.png"><br/>\n</div>\n\n## Usage\n\n<div style="text-align: center; width: 100%; display: flex; justify-content: space-evenly; margin-bottom: 20px">\n    <img width="80%" alt="Score Card with labels on different parts" src="./images/scoreCardAnatomy.png"><br/>\n</div>\n\n```typescript\nimport { Hero, HeroBanner, ScoreCard } from \'@pxblue/react-components\';\nimport { List, Card, ListItem, ListItemText, ListItemSecondaryAction } from \'@material-ui/core\';\nimport * as Colors from \'@pxblue/colors\';\nimport { MoreVert } from \'@material-ui/icons\';\nimport { Temp } from \'@pxblue/icons-mui\';\n\n...\n<ScoreCard\n    headerColor={Colors.red[500]}\n    headerTitle={\'Substation 3\'}\n    headerFontColor={Colors.white[50]}\n    actionItems={[\n        <MoreVert onClick={() => {}} />,\n    ]}\n    badge={\n        <HeroBanner>\n            <Hero\n                icon={<Temp fontSize={\'inherit\'} htmlColor={Colors.black[500]} />}\n                label={\'Temperature\'}\n                iconSize={48}\n                value={98}\n                units={\'°F\'}\n                fontSize={\'normal\'}\n            />\n        </HeroBanner>\n    }\n    actionRow={\n        <List>\n            <ListItem>\n                <ListItemText primary="View Location" />\n                <ListItemSecondaryAction> <ChevronRight /> </ListItemSecondaryAction>\n            </ListItem>\n        </List>\n    }\n>\n    {/* Card Body Content */}\n</ScoreCard>\n```\n\n## API\n\n<div style="overflow: auto;">\n\n| Prop Name             | Description                                 | Type                  | Required | Default                      |\n|-----------------------|---------------------------------------------|-----------------------|----------|------------------------------|\n| headerTitle           | The primary text                            | `string`              | yes      |                              |\n| headerSubtitle        | The secondary text                          | `string`              | no       |                              | \n| headerInfo            | Tertiary text                               | `string`              | no       |                              |\n| headerColor           | The color of the header                     | `string`              | no       | `theme.palette.primary.main` |\n| headerFontColor       | The color for text and icons in header      | `string`              | no       | `white`                      | \n| headerBackgroundImage | An image to display in the header           | `string`              | no       |                              | \n| actionItems           | Icons to show to the right of the text      | `JSX.Element[]`       | no       |                              |\n| actionLimit           | Max number of actionItems in the header     | `number`              | no       | 3                            |  \n| badge                 | The component to render in the callout area | `React.Component`     | no       |                              |\n| badgeOffset           | Vertical offset for the badge component     | `number`              | no       |                              |\n| actionRow             | Component to render for the footer          | `React.Component`     | no       |                              |\n\n</div>\n'},936:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# Spacer\nAn invisible utility component that acts as a spacer element in various layouts. It works with flexbox sizing or fixed sizing.\n\n<img width="40%" alt="Spacer used in Drawer Body" src="./images/spacer.png"><br/>\n\n## Usage\n```typescript\nimport { Spacer } from \'@pxblue/react-components\';\n...\n<div style={{display: \'flex\'}}>\n    {/* Left Content */}\n    <Spacer flex={1}/>\n    {/* Right Content */}\n</div>\n```\n\n## API\n\n<div style="overflow: auto;">\n\n| Prop Name             | Description                                 | Type                  | Required | Default                      | Examples                              |\n|-----------------------|---------------------------------------------|-----------------------|----------|------------------------------|---------------------------------------|\n| classes               | Classes object to override styles           | `Object`              | no       |                              | {root: \'customRootClass\'}             |\n| flex                  | Flex grow/shrink value for flex layouts     | `number`              | no       | 1                            |                                       |\n| height                | Height (in px) for static layouts           | `number`              | no       |                              |                                       |\n| width                 | Width (in px) for static layouts            | `number`              | no       |                              |                                       |\n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                 |\n|------------------|---------------------------------------------|\n| root             | Styles applied to the root element          |\n'},937:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/channelValue.361119ef.png"},938:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/drawer.737ba65b.png"},939:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/drawerAnatomy.7a75b4cc.png"},940:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/drawerLayout.9ed60ec4.png"},941:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/emptyState.33629f3e.png"},942:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/heroes.983e0866.png"},943:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/infoListItem.33c2abf6.png"},944:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/listItemTag.185ee093.png"},945:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/scoreCard.b52ac8b3.png"},946:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/scoreCardAnatomy.dbc800d3.png"},947:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/scoreCard_alt.7208b0da.png"},948:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/spacer.20404dde.png"},949:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/circles-bg.0bdac9a5.svg"},950:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/pxb-icon.c26b974a.svg"},952:function(module,exports,__webpack_require__){var map={"./channel-value/_module.stories.tsx":1165,"./drawer/_module.stories.tsx":1166,"./empty-state/_module.stories.tsx":1168,"./hero/_module.stories.tsx":1169,"./info-list-item/_module.stories.tsx":1162,"./list-item-tag/_module.stories.tsx":1170,"./scorecard/_module.stories.tsx":1163,"./spacer/_module.stories.tsx":1171,"./user-menu/_module.stories.tsx":1164,"./welcome.stories.tsx":514};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=952},990:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/farm.8a32e08b.jpg"}},[[573,1,2]]]);
//# sourceMappingURL=main.e667e58df5c8b75ab2c8.bundle.js.map