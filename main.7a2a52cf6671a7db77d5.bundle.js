(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1168:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),dist=__webpack_require__(156),react=__webpack_require__(0),react_default=__webpack_require__.n(react),constants=__webpack_require__(17),utils=__webpack_require__(16),PermIdentity=__webpack_require__(541),Today=__webpack_require__(549),Accessibility=__webpack_require__(521),NotificationsActive=__webpack_require__(539),Menu=__webpack_require__(536),addon_knobs_dist=__webpack_require__(5),addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),navGroupItems1=[{title:"Identity Management",itemID:"1",icon:react_default.a.createElement(PermIdentity.a,null),onClick:function(){}},{title:"Calendar",itemID:"2",icon:react_default.a.createElement(Today.a,null)},{title:"Accessibility",itemID:"3",icon:react_default.a.createElement(Accessibility.a,null)},{title:"Notifications",itemID:"4",icon:react_default.a.createElement(NotificationsActive.a,null)}],withBasicConfig=addSourceDecorator((function(context){return react_default.a.createElement(react_components.Drawer,{open:Object(addon_knobs_dist.boolean)("open",!0)},react_default.a.createElement(react_components.DrawerHeader,{icon:react_default.a.createElement(Menu.a,null),title:Object(addon_knobs_dist.text)("title","Simple Drawer")}),react_default.a.createElement(react_components.DrawerBody,null,react_default.a.createElement(react_components.DrawerNavGroup,{activeItem:context.state.selected,items:navGroupItems1})))}),{__STORY__:"import { Accessibility, Menu, NotificationsActive, PermIdentity, Today } from '@material-ui/icons';\nimport { Drawer, DrawerBody, DrawerHeader, DrawerNavGroup, NavItem } from '@pxblue/react-components';\nimport { boolean, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\nimport { DrawerStoryContext } from './util';\n\nexport const navGroupItems1: NavItem[] = [\n    {\n        title: 'Identity Management',\n        itemID: '1',\n        icon: <PermIdentity />,\n        onClick: (): void => {\n            // Set DrawerNavGroup activeItem here.\n        },\n    },\n    {\n        title: 'Calendar',\n        itemID: '2',\n        icon: <Today />,\n    },\n    {\n        title: 'Accessibility',\n        itemID: '3',\n        icon: <Accessibility />,\n    },\n    {\n        title: 'Notifications',\n        itemID: '4',\n        icon: <NotificationsActive />,\n    },\n];\n\nexport const withBasicConfig = (context: DrawerStoryContext): StoryFnReactReturnType => (\n    <Drawer open={boolean('open', true)}>\n        <DrawerHeader icon={<Menu />} title={text('title', 'Simple Drawer')} />\n        <DrawerBody>\n            <DrawerNavGroup activeItem={context.state.selected} items={navGroupItems1} />\n        </DrawerBody>\n    </Drawer>\n);\n\nwithBasicConfig.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withBasicConfig.story={name:constants.d};__webpack_require__(12).withSource;var withDifferentVariants=(0,__webpack_require__(12).addSource)((function(context){return react_default.a.createElement(react_components.Drawer,{open:Object(addon_knobs_dist.boolean)("open",!0),variant:Object(addon_knobs_dist.select)("variant",["permanent","persistent","temporary"],"permanent")},react_default.a.createElement(react_components.DrawerHeader,{icon:react_default.a.createElement(Menu.a,null),title:"Drawer with variants"}),react_default.a.createElement(react_components.DrawerBody,null,react_default.a.createElement(react_components.DrawerNavGroup,{activeItem:context.state.selected,items:navGroupItems1})))}),{__STORY__:"import { Drawer, DrawerBody, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components';\nimport { boolean, select } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { DrawerStoryContext } from './util';\nimport { navGroupItems1 } from './with-basic-config';\nimport { Menu } from '@material-ui/icons';\n\nexport const withDifferentVariants = (context: DrawerStoryContext): StoryFnReactReturnType => (\n    <Drawer\n        open={boolean('open', true)}\n        variant={select('variant', ['permanent', 'persistent', 'temporary'], 'permanent')}\n    >\n        <DrawerHeader icon={<Menu />} title={'Drawer with variants'} />\n        <DrawerBody>\n            <DrawerNavGroup activeItem={context.state.selected} items={navGroupItems1} />\n        </DrawerBody>\n    </Drawer>\n);\n\nwithDifferentVariants.story = { name: 'with different variants' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-different-variants.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withDifferentVariants.story={name:"with different variants"};var Typography=__webpack_require__(83),icons_Menu=__webpack_require__(154),Menu_default=__webpack_require__.n(icons_Menu),Drawer=__webpack_require__(26),with_custom_header_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),farmBgImage=__webpack_require__(555),withCustomHeader=with_custom_header_addSourceDecorator((function(context){return react_default.a.createElement(Drawer.Drawer,{open:Object(addon_knobs_dist.boolean)("open",!0)},react_default.a.createElement(Drawer.DrawerHeader,{backgroundImage:farmBgImage,backgroundOpacity:.5,icon:react_default.a.createElement(Menu_default.a,null),titleContent:react_default.a.createElement("div",{style:{zIndex:1,paddingLeft:"20px",paddingTop:"15px"}},react_default.a.createElement(Typography.a,{variant:"subtitle2"},"Customizable"),react_default.a.createElement(Typography.a,{variant:"h6",style:{marginTop:"-10px"}},"Header Content Goes Here"))}),react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{activeItem:context.state.selected,items:navGroupItems1})))}),{__STORY__:"import { Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Drawer, DrawerBody, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components/core/Drawer';\nimport { boolean } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { DrawerStoryContext } from './util';\nimport { navGroupItems1 } from './with-basic-config';\n\nconst farmBgImage = require('../../assets/farm.jpg');\n\nexport const withCustomHeader = (context: DrawerStoryContext): StoryFnReactReturnType => (\n    <Drawer open={boolean('open', true)}>\n        <DrawerHeader\n            backgroundImage={farmBgImage}\n            backgroundOpacity={0.5}\n            icon={<MenuIcon />}\n            titleContent={\n                <div style={{ zIndex: 1, paddingLeft: '20px', paddingTop: '15px' }}>\n                    <Typography variant=\"subtitle2\">Customizable</Typography>\n                    <Typography variant=\"h6\" style={{ marginTop: '-10px' }}>\n                        Header Content Goes Here\n                    </Typography>\n                </div>\n            }\n        />\n        <DrawerBody>\n            <DrawerNavGroup activeItem={context.state.selected} items={navGroupItems1} />\n        </DrawerBody>\n    </Drawer>\n);\n\nwithCustomHeader.story = { name: 'with custom header' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-header.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withCustomHeader.story={name:"with custom header"};var TextField=__webpack_require__(1211),IconButton=__webpack_require__(324),ExpansionPanel=__webpack_require__(1213),ExpansionPanelSummary=__webpack_require__(1206),ExpansionPanelDetails=__webpack_require__(1205),InputAdornment=__webpack_require__(1207),SvgIcon=__webpack_require__(565),SvgIcon_default=__webpack_require__.n(SvgIcon),Search=__webpack_require__(546),with_subheader_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),filter=react_default.a.createElement(TextField.a,{id:"outlined-basic",label:"filter",variant:"outlined",fullWidth:!0,InputProps:{endAdornment:react_default.a.createElement(InputAdornment.a,{position:"end"},react_default.a.createElement(IconButton.a,null,react_default.a.createElement(Search.a,null)))}}),accordion=react_default.a.createElement(ExpansionPanel.a,null,react_default.a.createElement(ExpansionPanelSummary.a,{expandIcon:react_default.a.createElement(SvgIcon_default.a,null),"aria-controls":"panel1a-content",id:"panel1a-header"},react_default.a.createElement(Typography.a,null,"Expansion Panel 1")),react_default.a.createElement(ExpansionPanelDetails.a,null,react_default.a.createElement(Typography.a,null,"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet blandit leo lobortis eget."))),withSubheader=with_subheader_addSourceDecorator((function(context){var subheaderContent=Object(addon_knobs_dist.optionsKnob)("Subheader Content",{filter:"Filter",accordion:"Accordion"},"Filter",{display:"inline-radio"});return react_default.a.createElement(Drawer.Drawer,{open:Object(addon_knobs_dist.boolean)("open",!0)},react_default.a.createElement(Drawer.DrawerHeader,{icon:react_default.a.createElement(Menu.a,null),title:"Subheader Demo",subtitle:"See the DrawerSubheader below"}),react_default.a.createElement(Drawer.DrawerSubheader,null,react_default.a.createElement("div",{style:{display:"flex",justifyContent:"center",padding:"20px"}},"Filter"===subheaderContent?filter:accordion)),react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{activeItem:context.state.selected,items:navGroupItems1})))}),{__STORY__:"import {\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    IconButton,\n    TextField,\n    Typography,\n} from '@material-ui/core';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ExpandMoreIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport { Menu, Search } from '@material-ui/icons';\nimport {\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerNavGroup,\n    DrawerSubheader,\n} from '@pxblue/react-components/core/Drawer';\nimport { boolean, optionsKnob } from '@storybook/addon-knobs';\nimport { OptionsKnobOptionsDisplay } from '@storybook/addon-knobs/dist/components/types/Options';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { DrawerStoryContext } from './util';\nimport { navGroupItems1 } from './with-basic-config';\n\nconst filter = (\n    <TextField\n        id=\"outlined-basic\"\n        label=\"filter\"\n        variant=\"outlined\"\n        fullWidth\n        InputProps={{\n            endAdornment: (\n                <InputAdornment position=\"end\">\n                    <IconButton>\n                        <Search />\n                    </IconButton>\n                </InputAdornment>\n            ),\n        }}\n    />\n);\nconst accordion = (\n    <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1a-content\" id=\"panel1a-header\">\n            <Typography>Expansion Panel 1</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n            <Typography>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse malesuada lacus ex, sit amet\n                blandit leo lobortis eget.\n            </Typography>\n        </ExpansionPanelDetails>\n    </ExpansionPanel>\n);\n\nexport const withSubheader = (context: DrawerStoryContext): StoryFnReactReturnType => {\n    const valuesObj = {\n        filter: 'Filter',\n        accordion: 'Accordion',\n    };\n    const optionsObj = {\n        display: 'inline-radio' as OptionsKnobOptionsDisplay,\n    };\n    const subheaderContent = optionsKnob('Subheader Content', valuesObj, 'Filter', optionsObj);\n\n    return (\n        <Drawer open={boolean('open', true)}>\n            <DrawerHeader icon={<Menu />} title={'Subheader Demo'} subtitle={'See the DrawerSubheader below'} />\n            <DrawerSubheader>\n                <div\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'center',\n                        padding: '20px',\n                    }}\n                >\n                    {subheaderContent === 'Filter' ? filter : accordion}\n                </div>\n            </DrawerSubheader>\n            <DrawerBody>\n                <DrawerNavGroup activeItem={context.state.selected} items={navGroupItems1} />\n            </DrawerBody>\n        </Drawer>\n    );\n};\n\nwithSubheader.story = { name: 'with subheader' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-subheader.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withSubheader.story={name:"with subheader"};var Dashboard=__webpack_require__(528),Toc=__webpack_require__(548),with_multiple_DrawerNavGroups_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),with_multiple_DrawerNavGroups_STORY_="import { Dashboard, Menu, Toc } from '@material-ui/icons';\nimport { NavItem, Spacer } from '@pxblue/react-components';\nimport { Drawer, DrawerBody, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components/core/Drawer';\nimport { boolean, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { DrawerStoryContext } from './util';\nimport { navGroupItems1 } from './with-basic-config';\n\nexport const navGroupItems2 = (context: DrawerStoryContext): NavItem[] => [\n    {\n        title: 'Overview',\n        itemID: 'group2-1',\n        icon: <Dashboard />,\n        onClick: (): void => {\n            context.store.set({ selected: 'group2-1' });\n        },\n    },\n    {\n        title: 'Timeline',\n        itemID: 'group2-2',\n        icon: <Toc />,\n        onClick: (): void => {\n            context.store.set({ selected: 'group2-2' });\n        },\n    },\n];\n\nexport const withMultipleNavGroups = (context: DrawerStoryContext): StoryFnReactReturnType => (\n    <Drawer open={boolean('open', true)}>\n        <DrawerHeader icon={<Menu />} title={'PX Blue Drawer'} subtitle={'with multiple navigation groups'} />\n        <DrawerBody>\n            <DrawerNavGroup\n                title={text('navGroup[0].title', 'First DrawerNavGroup')}\n                activeItem={context.state.selected}\n                items={navGroupItems1}\n            />\n            {boolean('Add Spacer', false) && <Spacer />}\n            <DrawerNavGroup\n                title={text('navGroup[1].title', 'Second DrawerNavGroup')}\n                activeItem={context.state.selected}\n                items={navGroupItems2(context)}\n            />\n        </DrawerBody>\n    </Drawer>\n);\n\nwithMultipleNavGroups.story = { name: 'with multiple DrawerNavGroups' };\n",with_multiple_DrawerNavGroups_ADDS_MAP_={},with_multiple_DrawerNavGroups_MODULE_DEPENDENCIES_=[],with_multiple_DrawerNavGroups_LOCAL_DEPENDENCIES_={},with_multiple_DrawerNavGroups_IDS_TO_FRAMEWORKS_={},navGroupItems2=with_multiple_DrawerNavGroups_addSourceDecorator((function(context){return[{title:"Overview",itemID:"group2-1",icon:react_default.a.createElement(Dashboard.a,null),onClick:function(){context.store.set({selected:"group2-1"})}},{title:"Timeline",itemID:"group2-2",icon:react_default.a.createElement(Toc.a,null),onClick:function(){context.store.set({selected:"group2-2"})}}]}),{__STORY__:with_multiple_DrawerNavGroups_STORY_,__ADDS_MAP__:with_multiple_DrawerNavGroups_ADDS_MAP_,__MAIN_FILE_LOCATION__:"/with-multiple-DrawerNavGroups.tsx",__MODULE_DEPENDENCIES__:with_multiple_DrawerNavGroups_MODULE_DEPENDENCIES_,__LOCAL_DEPENDENCIES__:with_multiple_DrawerNavGroups_LOCAL_DEPENDENCIES_,__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:with_multiple_DrawerNavGroups_IDS_TO_FRAMEWORKS_}),withMultipleNavGroups=with_multiple_DrawerNavGroups_addSourceDecorator((function(context){return react_default.a.createElement(Drawer.Drawer,{open:Object(addon_knobs_dist.boolean)("open",!0)},react_default.a.createElement(Drawer.DrawerHeader,{icon:react_default.a.createElement(Menu.a,null),title:"PX Blue Drawer",subtitle:"with multiple navigation groups"}),react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{title:Object(addon_knobs_dist.text)("navGroup[0].title","First DrawerNavGroup"),activeItem:context.state.selected,items:navGroupItems1}),Object(addon_knobs_dist.boolean)("Add Spacer",!1)&&react_default.a.createElement(react_components.Spacer,null),react_default.a.createElement(Drawer.DrawerNavGroup,{title:Object(addon_knobs_dist.text)("navGroup[1].title","Second DrawerNavGroup"),activeItem:context.state.selected,items:navGroupItems2(context)})))}),{__STORY__:with_multiple_DrawerNavGroups_STORY_,__ADDS_MAP__:with_multiple_DrawerNavGroups_ADDS_MAP_,__MAIN_FILE_LOCATION__:"/with-multiple-DrawerNavGroups.tsx",__MODULE_DEPENDENCIES__:with_multiple_DrawerNavGroups_MODULE_DEPENDENCIES_,__LOCAL_DEPENDENCIES__:with_multiple_DrawerNavGroups_LOCAL_DEPENDENCIES_,__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:with_multiple_DrawerNavGroups_IDS_TO_FRAMEWORKS_});withMultipleNavGroups.story={name:"with multiple DrawerNavGroups"};var Add=__webpack_require__(522),PinDrop=__webpack_require__(543),Remove=__webpack_require__(544),AddAPhoto=__webpack_require__(523),FitnessCenter=__webpack_require__(532),colors_dist=__webpack_require__(9),with_nested_list_items_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),getIcon=function(icon){switch(icon){case"<Add />":return react_default.a.createElement(Add.a,null);case"<PinDrop />":return react_default.a.createElement(PinDrop.a,null);case"<Remove />":return react_default.a.createElement(Remove.a,null);case"<AddAPhoto />":return react_default.a.createElement(AddAPhoto.a,null);case"undefined":default:return}},withNestedListItems=with_nested_list_items_addSourceDecorator((function(context){var state,open=Object(addon_knobs_dist.boolean)("open",!0,"DrawerNavGroup"),divider=Object(addon_knobs_dist.boolean)("divider",!0,"DrawerNavGroup"),nestedDivider=Object(addon_knobs_dist.boolean)("nestedDivider",!1,"DrawerNavGroup"),chevron=Object(addon_knobs_dist.boolean)("chevron",!1,"DrawerNavGroup"),nestedBackgroundColor=Object(addon_knobs_dist.color)("nestedBackgroundColor",colors_dist.white[200],"DrawerNavGroup"),groupUseExpandIcon=Object(addon_knobs_dist.select)("expandIcon",["undefined","<Add />","<PinDrop />"],"undefined","DrawerNavGroup"),groupUseCollapseIcon=Object(addon_knobs_dist.select)("collapseIcon",["undefined","<Remove />","<AddAPhoto />"],"undefined","DrawerNavGroup"),showIcon=Object(addon_knobs_dist.boolean)("Show Top-Level Icons",!0,"NavItem"),hidePadding=Object(addon_knobs_dist.boolean)("hidePadding",!1,"NavItem"),useRightComponent=Object(addon_knobs_dist.select)("rightComponent",["undefined","<ListItemTag />","<ChannelValue />"],"undefined","NavItem"),itemUseExpandIcon=Object(addon_knobs_dist.select)("expandIcon",["undefined","<Add />","<PinDrop />"],"undefined","NavItem"),itemUseCollapseIcon=Object(addon_knobs_dist.select)("collapseIcon",["undefined","<Remove />","<AddAPhoto />"],"undefined","NavItem"),rightComponent=function(){switch(useRightComponent){case"undefined":return;case"<ListItemTag />":return react_default.a.createElement(react_components.ListItemTag,{label:"56+",backgroundColor:colors_dist.gold[50],fontColor:colors_dist.gold[800]});case"<ChannelValue />":return react_default.a.createElement(react_components.ChannelValue,{value:2,units:"V"})}}();return react_default.a.createElement(Drawer.Drawer,{open:open,key:"drawer"},react_default.a.createElement(Drawer.DrawerHeader,{title:"Power Xpert Blue",icon:react_default.a.createElement(Menu_default.a,null)}),(state=context.state,react_default.a.createElement(react_components.DrawerBody,null,react_default.a.createElement(react_components.DrawerNavGroup,{divider:divider,nestedDivider:nestedDivider,title:"Multi-Level Navigation Group",hidePadding:hidePadding,activeItem:state.selected,chevron:chevron,nestedBackgroundColor:nestedBackgroundColor,expandIcon:getIcon(groupUseExpandIcon),collapseIcon:getIcon(groupUseCollapseIcon),items:[{title:"User Guide",icon:showIcon?react_default.a.createElement(AddAPhoto.a,null):void 0,itemID:"User Guide",rightComponent:rightComponent,expandIcon:getIcon(itemUseExpandIcon),collapseIcon:getIcon(itemUseCollapseIcon),items:[{title:"Getting Started",itemID:"Getting Started",subtitle:"Introduction to Eaton",onClick:function(){context.store.set({selected:"Getting Started"})}},{title:"Tutorials",itemID:"Tutorials",items:[{title:"For Developers",itemID:"For Developers",onClick:function(){context.store.set({selected:"For Developers"})}},{title:"For Designers",itemID:"For Designers",items:[{title:"Component Library",itemID:"Component Library",onClick:function(){context.store.set({selected:"Component Library"})}},{title:"Typography Rules",itemID:"Typography Rules",onClick:function(){context.store.set({selected:"Typography Rules"})}},{title:"Theme Rules",itemID:"Theme Rules",onClick:function(){context.store.set({selected:"Theme Rules"})}}]}]},{title:"Environment Setup",itemID:"Environment Setup",onClick:function(){context.store.set({selected:"Environment Setup"})}}]},{title:"Community",itemID:"Community",icon:showIcon?react_default.a.createElement(FitnessCenter.a,null):void 0,onClick:function(){context.store.set({selected:"Community"})},items:[{title:"License",itemID:"License",onClick:function(){context.store.set({selected:"License"})}},{title:"Contribute",itemID:"Contribute",items:[{title:"Hall of Fame",itemID:"Hall of Fame",onClick:function(){context.store.set({selected:"Hall of Fame"})}},{title:"Contributing Guide",itemID:"Contributing Guide",onClick:function(){context.store.set({selected:"Contributing Guide"})}}]}]},{title:"Accessibility",itemID:"Accessibility",icon:showIcon?react_default.a.createElement(Accessibility.a,null):void 0,onClick:function(){context.store.set({selected:"Accessibility"})}},{title:"Notifications",itemID:"Notifications",icon:showIcon?react_default.a.createElement(NotificationsActive.a,null):void 0,onClick:function(){context.store.set({selected:"Notifications"})}}]}))))}),{__STORY__:"import { Accessibility, Add, AddAPhoto, FitnessCenter, NotificationsActive, PinDrop, Remove } from '@material-ui/icons';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue, DrawerBody, DrawerNavGroup, ListItemTag } from '@pxblue/react-components';\nimport { Drawer, DrawerHeader } from '@pxblue/react-components/core/Drawer';\nimport { boolean, select, color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { DrawerState, DrawerStoryContext } from './util';\n\nconst userGuide = 'User Guide';\nconst license = 'License';\nconst accessibility = 'Accessibility';\nconst notifications = 'Notifications';\nconst gettingStarted = 'Getting Started';\nconst tutorials = 'Tutorials';\nconst forDevelopers = 'For Developers';\nconst forDesigners = 'For Designers';\nconst environmentSetup = 'Environment Setup';\nconst community = 'Community';\nconst hallOfFame = 'Hall of Fame';\nconst contribute = 'Contribute';\nconst contributingGuide = 'Contributing Guide';\nconst componentLibrary = 'Component Library';\nconst typographyRules = 'Typography Rules';\nconst themeRules = 'Theme Rules';\n\nconst getIcon = (icon: string): JSX.Element | undefined => {\n    switch (icon) {\n        case '<Add />':\n            return <Add />;\n        case '<PinDrop />':\n            return <PinDrop />;\n        case '<Remove />':\n            return <Remove />;\n        case '<AddAPhoto />':\n            return <AddAPhoto />;\n        case 'undefined':\n        default:\n            return undefined;\n    }\n};\n\nexport const withNestedListItems = (context: DrawerStoryContext): StoryFnReactReturnType => {\n    const DrawerNavGroupID = 'DrawerNavGroup';\n    const open = boolean('open', true, DrawerNavGroupID);\n    const divider = boolean('divider', true, DrawerNavGroupID);\n    const nestedDivider = boolean('nestedDivider', false, DrawerNavGroupID);\n    const chevron = boolean('chevron', false, DrawerNavGroupID);\n    const nestedBackgroundColor = color('nestedBackgroundColor', Colors.white[200], DrawerNavGroupID);\n    const groupUseExpandIcon = select(\n        'expandIcon',\n        ['undefined', '<Add />', '<PinDrop />'],\n        'undefined',\n        DrawerNavGroupID\n    );\n    const groupUseCollapseIcon = select(\n        'collapseIcon',\n        ['undefined', '<Remove />', '<AddAPhoto />'],\n        'undefined',\n        DrawerNavGroupID\n    );\n\n    const NavItemID = 'NavItem';\n    const showIcon = boolean('Show Top-Level Icons', true, NavItemID);\n    const hidePadding = boolean('hidePadding', false, NavItemID);\n    const useRightComponent = select(\n        'rightComponent',\n        ['undefined', '<ListItemTag />', '<ChannelValue />'],\n        'undefined',\n        NavItemID\n    );\n    const itemUseExpandIcon = select('expandIcon', ['undefined', '<Add />', '<PinDrop />'], 'undefined', NavItemID);\n    const itemUseCollapseIcon = select(\n        'collapseIcon',\n        ['undefined', '<Remove />', '<AddAPhoto />'],\n        'undefined',\n        NavItemID\n    );\n\n    const rightComponent = ((): JSX.Element | undefined => {\n        switch (useRightComponent) {\n            case 'undefined':\n                return undefined;\n            case '<ListItemTag />':\n                return <ListItemTag label=\"56+\" backgroundColor={Colors.gold[50]} fontColor={Colors.gold[800]} />;\n            case '<ChannelValue />':\n                return <ChannelValue value={2} units={'V'} />;\n            default:\n                break;\n        }\n    })();\n\n    const drawerItemList = (state: DrawerState): JSX.Element => (\n        <DrawerBody>\n            <DrawerNavGroup\n                divider={divider}\n                nestedDivider={nestedDivider}\n                title={'Multi-Level Navigation Group'}\n                hidePadding={hidePadding}\n                activeItem={state.selected}\n                chevron={chevron}\n                nestedBackgroundColor={nestedBackgroundColor}\n                expandIcon={getIcon(groupUseExpandIcon)}\n                collapseIcon={getIcon(groupUseCollapseIcon)}\n                items={[\n                    {\n                        title: userGuide,\n                        icon: showIcon ? <AddAPhoto /> : undefined,\n                        itemID: userGuide,\n                        rightComponent: rightComponent,\n                        expandIcon: getIcon(itemUseExpandIcon),\n                        collapseIcon: getIcon(itemUseCollapseIcon),\n                        items: [\n                            {\n                                title: gettingStarted,\n                                itemID: gettingStarted,\n                                subtitle: 'Introduction to Eaton',\n                                onClick: (): void => {\n                                    context.store.set({ selected: gettingStarted });\n                                },\n                            },\n                            {\n                                title: tutorials,\n                                itemID: tutorials,\n                                items: [\n                                    {\n                                        title: forDevelopers,\n                                        itemID: forDevelopers,\n                                        onClick: (): void => {\n                                            context.store.set({ selected: forDevelopers });\n                                        },\n                                    },\n                                    {\n                                        title: forDesigners,\n                                        itemID: forDesigners,\n                                        items: [\n                                            {\n                                                title: componentLibrary,\n                                                itemID: componentLibrary,\n                                                onClick: (): void => {\n                                                    context.store.set({ selected: componentLibrary });\n                                                },\n                                            },\n                                            {\n                                                title: typographyRules,\n                                                itemID: typographyRules,\n                                                onClick: (): void => {\n                                                    context.store.set({ selected: typographyRules });\n                                                },\n                                            },\n                                            {\n                                                title: themeRules,\n                                                itemID: themeRules,\n                                                onClick: (): void => {\n                                                    context.store.set({ selected: themeRules });\n                                                },\n                                            },\n                                        ],\n                                    },\n                                ],\n                            },\n                            {\n                                title: environmentSetup,\n                                itemID: environmentSetup,\n                                onClick: (): void => {\n                                    context.store.set({ selected: environmentSetup });\n                                },\n                            },\n                        ],\n                    },\n                    {\n                        title: community,\n                        itemID: community,\n                        icon: showIcon ? <FitnessCenter /> : undefined,\n                        onClick: (): void => {\n                            context.store.set({ selected: community });\n                        },\n                        items: [\n                            {\n                                title: license,\n                                itemID: license,\n                                onClick: (): void => {\n                                    context.store.set({ selected: license });\n                                },\n                            },\n                            {\n                                title: contribute,\n                                itemID: contribute,\n                                items: [\n                                    {\n                                        title: hallOfFame,\n                                        itemID: hallOfFame,\n                                        onClick: (): void => {\n                                            context.store.set({ selected: hallOfFame });\n                                        },\n                                    },\n                                    {\n                                        title: contributingGuide,\n                                        itemID: contributingGuide,\n                                        onClick: (): void => {\n                                            context.store.set({ selected: contributingGuide });\n                                        },\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                    {\n                        title: accessibility,\n                        itemID: accessibility,\n                        icon: showIcon ? <Accessibility /> : undefined,\n                        onClick: (): void => {\n                            context.store.set({ selected: accessibility });\n                        },\n                    },\n                    {\n                        title: notifications,\n                        itemID: notifications,\n                        icon: showIcon ? <NotificationsActive /> : undefined,\n                        onClick: (): void => {\n                            context.store.set({ selected: notifications });\n                        },\n                    },\n                ]}\n            />\n        </DrawerBody>\n    );\n\n    return (\n        <Drawer open={open} key={'drawer'}>\n            <DrawerHeader title={'Power Xpert Blue'} icon={<MenuIcon />} />\n            {drawerItemList(context.state)}\n        </Drawer>\n    );\n};\n\nwithNestedListItems.story = { name: 'with nested list items' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-nested-list-items.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withNestedListItems.story={name:"with nested list items"};var Divider=__webpack_require__(513),with_footer_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),EatonLogo=__webpack_require__(186),withFooter=with_footer_addSourceDecorator((function(context){return react_default.a.createElement(Drawer.Drawer,{open:Object(addon_knobs_dist.boolean)("Drawer.open",!0)},react_default.a.createElement(Drawer.DrawerHeader,{icon:react_default.a.createElement(Menu.a,null),title:"Footer Example"}),react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{activeItem:context.state.selected,items:navGroupItems2(context)})),react_default.a.createElement(Drawer.DrawerFooter,{backgroundColor:Object(addon_knobs_dist.color)("DrawerFooter.backgroundColor",colors_dist.white[50])},react_default.a.createElement(Divider.a,null),react_default.a.createElement("div",{style:{display:"flex",justifyContent:"center"}},react_default.a.createElement("img",{src:EatonLogo,style:{margin:"10px"},alt:"Eaton Logo",height:50,width:"auto"}))))}),{__STORY__:"import { Divider } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components/core/Drawer';\nimport { boolean, color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { DrawerStoryContext } from './util';\nimport { navGroupItems2 } from './with-multiple-DrawerNavGroups';\n\nconst EatonLogo = require('../../assets/EatonLogo.svg');\n\nexport const withFooter = (context: DrawerStoryContext): StoryFnReactReturnType => (\n    <Drawer open={boolean('Drawer.open', true)}>\n        <DrawerHeader icon={<Menu />} title={'Footer Example'} />\n        <DrawerBody>\n            <DrawerNavGroup activeItem={context.state.selected} items={navGroupItems2(context)} />\n        </DrawerBody>\n\n        <DrawerFooter backgroundColor={color('DrawerFooter.backgroundColor', Colors.white[50])}>\n            <Divider />\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img src={EatonLogo} style={{ margin: '10px' }} alt=\"Eaton Logo\" height={50} width={'auto'} />\n            </div>\n        </DrawerFooter>\n    </Drawer>\n);\n\nwithFooter.story = { name: 'with footer' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-footer.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withFooter.story={name:"with footer"};var Devices=__webpack_require__(529),AirportShuttle=__webpack_require__(524),MoveToInbox=__webpack_require__(566),MoveToInbox_default=__webpack_require__.n(MoveToInbox),Send=__webpack_require__(567),Send_default=__webpack_require__.n(Send),with_full_config_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),with_full_config_EatonLogo=__webpack_require__(186),topologyBgImage=__webpack_require__(144),with_full_config_farmBgImage=__webpack_require__(555),with_full_config_getIcon=function(icon){switch(icon){case"<Add />":return react_default.a.createElement(Add.a,null);case"<PinDrop />":return react_default.a.createElement(PinDrop.a,null);case"<Remove />":return react_default.a.createElement(Remove.a,null);case"<AddAPhoto />":return react_default.a.createElement(AddAPhoto.a,null);case"<Menu />":return react_default.a.createElement(Menu.a,null);case"<FitnessCenter />":return react_default.a.createElement(FitnessCenter.a,null);case"<Dashboard />":return react_default.a.createElement(Dashboard.a,null);case"undefined":default:return}},headerBackgroundImageOptions={Pattern:topologyBgImage,Farm:with_full_config_farmBgImage,undefined:void 0},withFullConfig=with_full_config_addSourceDecorator((function(context){var drawerKnobs={activeItemBackgroundColor:Object(addon_knobs_dist.color)("activeItemBackgroundColor",colors_dist.blue[50],"Drawer"),activeItemFontColor:Object(addon_knobs_dist.color)("activeItemFontColor",colors_dist.blue[500],"Drawer"),activeItemIconColor:Object(addon_knobs_dist.color)("activeItemIconColor",colors_dist.blue[500],"Drawer"),activeItemBackgroundShape:Object(addon_knobs_dist.select)("activeItemBackgroundShape",["round","square"],"round","Drawer"),chevron:Object(addon_knobs_dist.boolean)("chevron",!1,"Drawer"),collapseIcon:with_full_config_getIcon(Object(addon_knobs_dist.select)("collapseIcon",["undefined","<Remove />","<AddAPhoto />"],"undefined","Drawer")),divider:Object(addon_knobs_dist.boolean)("divider",!0,"Drawer"),expandIcon:with_full_config_getIcon(Object(addon_knobs_dist.select)("expandIcon",["undefined","<Add />","<PinDrop />"],"undefined","Drawer")),hidePadding:Object(addon_knobs_dist.boolean)("hidePadding",!1,"Drawer"),itemFontColor:Object(addon_knobs_dist.color)("itemFontColor",colors_dist.gray[500],"Drawer"),itemIconColor:Object(addon_knobs_dist.color)("itemIconColor",colors_dist.gray[500],"Drawer"),nestedBackgroundColor:Object(addon_knobs_dist.color)("nestedBackgroundColor",colors_dist.white[200],"Drawer"),nestedDivider:Object(addon_knobs_dist.boolean)("nestedDivider",!1,"Drawer"),open:Object(addon_knobs_dist.boolean)("open",!0,"Drawer"),ripple:Object(addon_knobs_dist.boolean)("ripple",!0,"Drawer"),variant:Object(addon_knobs_dist.select)("variant",["permanent","persistent","temporary"],"persistent","Drawer"),width:Object(addon_knobs_dist.number)("width",350,{range:!0,min:200,max:700,step:50},"Drawer")},headerKnobs={backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.gold[800],"Header"),backgroundImage:headerBackgroundImageOptions[Object(addon_knobs_dist.select)("backgroundImage",["undefined","Pattern","Farm"],"Pattern","Header")],backgroundOpacity:Object(addon_knobs_dist.number)("backgroundOpacity",.4,{range:!0,min:0,max:1,step:.1},"Header"),fontColor:Object(addon_knobs_dist.color)("fontColor",colors_dist.white[50],"Header"),icon:with_full_config_getIcon(Object(addon_knobs_dist.select)("icon",["<Menu />","<FitnessCenter />","undefined"],"<Menu />","Header")),subtitle:Object(addon_knobs_dist.text)("subtitle","Organize your menu items here","Header"),title:Object(addon_knobs_dist.text)("title","PX Blue Drawer","Header")},bodyKnobs={backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.white[50],"Body")},navGroupKnobs={title:Object(addon_knobs_dist.text)("drawerNavGroup[0].title","NavGroup 1","NavGroup")},navItemKnobs={icon:with_full_config_getIcon(Object(addon_knobs_dist.select)("icon",["<Dashboard />","<FitnessCenter />","undefined"],"<Dashboard />","NavItem")),statusColor:Object(addon_knobs_dist.color)("statusColor",colors_dist.green[300],"NavItem"),subtitle:Object(addon_knobs_dist.text)("subtitle","Learn more about us","NavItem"),title:Object(addon_knobs_dist.text)("title","Overview","NavItem")},links1=[{icon:navItemKnobs.icon,statusColor:navItemKnobs.statusColor,subtitle:navItemKnobs.subtitle,title:navItemKnobs.title||"title",itemID:"0",items:[{title:"Monthly Report",itemID:"Monthly Report",onClick:function(){context.store.set({selected:"Monthly Report"})}},{title:"Annual Report",itemID:"Annual Report",onClick:function(){context.store.set({selected:"Annual Report"})}}]},{title:"Timeline",itemID:"Timeline",onClick:function(){context.store.set({selected:"Timeline"})},icon:react_default.a.createElement(Toc.a,null)},{title:"Locations",itemID:"Locations",onClick:function(){context.store.set({selected:"Locations"})},icon:react_default.a.createElement(PinDrop.a,null)},{title:"Devices",itemID:"Devices",subtitle:"5 new warnings",statusColor:colors_dist.yellow[500],onClick:function(){context.store.set({selected:"Devices"})},icon:react_default.a.createElement(Devices.a,null)},{title:"Photos",itemID:"Photos",onClick:function(){context.store.set({selected:"Photos"})},icon:react_default.a.createElement(AddAPhoto.a,null)},{title:"Schedule",itemID:"Schedule",onClick:function(){context.store.set({selected:"Schedule"})},icon:react_default.a.createElement(AirportShuttle.a,null)}],links2=[{title:"User Guide",itemID:"User Guide",onClick:function(){context.store.set({selected:"User Guide"})},icon:react_default.a.createElement(MoveToInbox_default.a,null)},{title:"License Agreement",itemID:"License Agreement",subtitle:"For Eaton employees only",onClick:function(){context.store.set({selected:"License Agreement"})},icon:react_default.a.createElement(Send_default.a,null)},{title:"Accessibility",itemID:"Accessibility",icon:react_default.a.createElement(Accessibility.a,null),items:[{title:"Color Contrast Guide",itemID:"Color Contrast Guide",onClick:function(){context.store.set({selected:"Color Contrast Guide"})}},{title:"Screen Reader",itemID:"Screen Reader",onClick:function(){context.store.set({selected:"Screen Reader"})}}]},{title:"Notifications",itemID:"Notifications",onClick:function(){context.store.set({selected:"Notifications"})},icon:react_default.a.createElement(NotificationsActive.a,null)}],showFooter=Object(addon_knobs_dist.boolean)("Show footer",!0,"Footer"),footerBackgroundColor=Object(addon_knobs_dist.color)("backgroundColor",colors_dist.white[50],"Footer");return react_default.a.createElement(react_components.Drawer,{key:"drawer",activeItem:context.state.selected,activeItemBackgroundColor:drawerKnobs.activeItemBackgroundColor,activeItemFontColor:drawerKnobs.activeItemFontColor,activeItemIconColor:drawerKnobs.activeItemIconColor,activeItemBackgroundShape:drawerKnobs.activeItemBackgroundShape,chevron:drawerKnobs.chevron,collapseIcon:drawerKnobs.collapseIcon,divider:drawerKnobs.divider,expandIcon:drawerKnobs.expandIcon,hidePadding:drawerKnobs.hidePadding,itemFontColor:drawerKnobs.itemFontColor,itemIconColor:drawerKnobs.itemIconColor,nestedBackgroundColor:drawerKnobs.nestedBackgroundColor,nestedDivider:drawerKnobs.nestedDivider,open:drawerKnobs.open,ripple:drawerKnobs.ripple,variant:drawerKnobs.variant,width:drawerKnobs.width},react_default.a.createElement(react_components.DrawerHeader,{backgroundColor:headerKnobs.backgroundColor,backgroundImage:headerKnobs.backgroundImage,backgroundOpacity:headerKnobs.backgroundOpacity,fontColor:headerKnobs.fontColor,icon:headerKnobs.icon,subtitle:headerKnobs.subtitle,title:headerKnobs.title}),react_default.a.createElement(react_components.DrawerBody,{backgroundColor:bodyKnobs.backgroundColor},react_default.a.createElement(react_components.DrawerNavGroup,{items:links1,title:navGroupKnobs.title}),react_default.a.createElement(react_components.DrawerNavGroup,{items:links2,titleContent:react_default.a.createElement("div",{style:{display:"flex",justifyContent:"space-between",fontWeight:600}},react_default.a.createElement("div",null,"NavGroup 2"),react_default.a.createElement("div",null,"Software Version v1.0.3"))})),showFooter&&react_default.a.createElement(react_components.DrawerFooter,{backgroundColor:footerBackgroundColor},react_default.a.createElement(Divider.a,null),react_default.a.createElement("div",{style:{display:"flex",justifyContent:"center"}},react_default.a.createElement("img",{src:with_full_config_EatonLogo,style:{margin:"10px"},alt:"Eaton Logo",height:50,width:"auto"}))))}),{__STORY__:"import { Divider } from '@material-ui/core';\nimport {\n    Accessibility,\n    Add,\n    AddAPhoto,\n    AirportShuttle,\n    Dashboard,\n    Devices,\n    FitnessCenter,\n    NotificationsActive,\n    Remove,\n    PinDrop,\n    Toc,\n    Menu,\n} from '@material-ui/icons';\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox';\nimport SendIcon from '@material-ui/icons/Send';\nimport * as Colors from '@pxblue/colors';\nimport {\n    Drawer,\n    DrawerComponentProps,\n    DrawerBody,\n    DrawerFooter,\n    DrawerHeader,\n    DrawerNavGroup,\n    DrawerHeaderProps,\n    DrawerBodyProps,\n    DrawerNavGroupProps,\n    NavItem,\n} from '@pxblue/react-components';\nimport { boolean, color, number, select, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\nimport { DrawerStoryContext } from './util';\n\nconst EatonLogo = require('../../assets/EatonLogo.svg');\nconst topologyBgImage = require('../../assets/topology_40.png');\nconst farmBgImage = require('../../assets/farm.jpg');\n\nconst userGuide = 'User Guide';\nconst accessibility = 'Accessibility';\nconst notifications = 'Notifications';\nconst overview = 'Overview';\nconst timeline = 'Timeline';\nconst locations = 'Locations';\nconst devices = 'Devices';\nconst photos = 'Photos';\nconst schedule = 'Schedule';\nconst agreement = 'License Agreement';\nconst monthlyReport = 'Monthly Report';\nconst annualReport = 'Annual Report';\nconst colorContrastGuide = 'Color Contrast Guide';\nconst screenReader = 'Screen Reader';\n\nconst getIcon = (icon: string): JSX.Element | undefined => {\n    switch (icon) {\n        case '<Add />':\n            return <Add />;\n        case '<PinDrop />':\n            return <PinDrop />;\n        case '<Remove />':\n            return <Remove />;\n        case '<AddAPhoto />':\n            return <AddAPhoto />;\n        case '<Menu />':\n            return <Menu />;\n        case '<FitnessCenter />':\n            return <FitnessCenter />;\n        case '<Dashboard />':\n            return <Dashboard />;\n        case 'undefined':\n        default:\n            return undefined;\n    }\n};\n\nconst headerBackgroundImageOptions = {\n    Pattern: topologyBgImage,\n    Farm: farmBgImage,\n    undefined: undefined,\n};\n\nexport const withFullConfig = (context: DrawerStoryContext): StoryFnReactReturnType => {\n    // storybook tab names\n    const drawerGroupId = 'Drawer';\n    const headerGroupId = 'Header';\n    const bodyGroupId = 'Body';\n    const navGroupId = 'NavGroup';\n    const navItemId = 'NavItem';\n    const footerGroupId = 'Footer';\n\n    const drawerKnobs: DrawerComponentProps = {\n        activeItemBackgroundColor: color('activeItemBackgroundColor', Colors.blue[50], drawerGroupId),\n        activeItemFontColor: color('activeItemFontColor', Colors.blue[500], drawerGroupId),\n        activeItemIconColor: color('activeItemIconColor', Colors.blue[500], drawerGroupId),\n        activeItemBackgroundShape: select('activeItemBackgroundShape', ['round', 'square'], 'round', drawerGroupId),\n        chevron: boolean('chevron', false, drawerGroupId),\n        collapseIcon: getIcon(\n            select('collapseIcon', ['undefined', '<Remove />', '<AddAPhoto />'], 'undefined', drawerGroupId)\n        ),\n        divider: boolean('divider', true, drawerGroupId),\n        expandIcon: getIcon(select('expandIcon', ['undefined', '<Add />', '<PinDrop />'], 'undefined', drawerGroupId)),\n        hidePadding: boolean('hidePadding', false, drawerGroupId),\n        itemFontColor: color('itemFontColor', Colors.gray[500], drawerGroupId),\n        itemIconColor: color('itemIconColor', Colors.gray[500], drawerGroupId),\n        nestedBackgroundColor: color('nestedBackgroundColor', Colors.white[200], drawerGroupId),\n        nestedDivider: boolean('nestedDivider', false, drawerGroupId),\n        open: boolean('open', true, drawerGroupId),\n        ripple: boolean('ripple', true, drawerGroupId),\n        variant: select('variant', ['permanent', 'persistent', 'temporary'], 'persistent', drawerGroupId),\n        width: number(\n            'width',\n            350,\n            {\n                range: true,\n                min: 200,\n                max: 700,\n                step: 50,\n            },\n            drawerGroupId\n        ),\n    };\n\n    const headerKnobs: DrawerHeaderProps = {\n        backgroundColor: color('backgroundColor', Colors.gold[800], headerGroupId),\n        backgroundImage:\n            headerBackgroundImageOptions[\n                select('backgroundImage', ['undefined', 'Pattern', 'Farm'], 'Pattern', headerGroupId)\n            ],\n        backgroundOpacity: number('backgroundOpacity', 0.4, { range: true, min: 0, max: 1, step: 0.1 }, headerGroupId),\n        fontColor: color('fontColor', Colors.white[50], headerGroupId),\n        icon: getIcon(select('icon', ['<Menu />', '<FitnessCenter />', 'undefined'], '<Menu />', headerGroupId)),\n        subtitle: text('subtitle', 'Organize your menu items here', headerGroupId),\n        title: text('title', 'PX Blue Drawer', headerGroupId),\n    };\n\n    const bodyKnobs: DrawerBodyProps = {\n        backgroundColor: color('backgroundColor', Colors.white[50], bodyGroupId),\n    };\n\n    const navGroupKnobs: Partial<DrawerNavGroupProps> = {\n        title: text('drawerNavGroup[0].title', 'NavGroup 1', navGroupId),\n    };\n\n    const navItemKnobs: Partial<NavItem> = {\n        icon: getIcon(select('icon', ['<Dashboard />', '<FitnessCenter />', 'undefined'], '<Dashboard />', navItemId)),\n        statusColor: color('statusColor', Colors.green[300], navItemId),\n        subtitle: text('subtitle', 'Learn more about us', navItemId),\n        title: text('title', overview, navItemId),\n    };\n\n    // DrawerNavGroup.items\n    const links1 = [\n        {\n            icon: navItemKnobs.icon,\n            statusColor: navItemKnobs.statusColor,\n            subtitle: navItemKnobs.subtitle,\n            // title is a required prop, using a placeholder in case the knob is empty\n            title: navItemKnobs.title || 'title',\n            itemID: '0',\n            items: [\n                {\n                    title: monthlyReport,\n                    itemID: monthlyReport,\n                    onClick: (): void => {\n                        context.store.set({ selected: monthlyReport });\n                    },\n                },\n                {\n                    title: annualReport,\n                    itemID: annualReport,\n                    onClick: (): void => {\n                        context.store.set({ selected: annualReport });\n                    },\n                },\n            ],\n        },\n        {\n            title: timeline,\n            itemID: timeline,\n            onClick: (): void => {\n                context.store.set({ selected: timeline });\n            },\n            icon: <Toc />,\n        },\n        {\n            title: locations,\n            itemID: locations,\n            onClick: (): void => {\n                context.store.set({ selected: locations });\n            },\n            icon: <PinDrop />,\n        },\n        {\n            title: devices,\n            itemID: devices,\n            subtitle: '5 new warnings',\n            statusColor: Colors.yellow[500],\n            onClick: (): void => {\n                context.store.set({ selected: devices });\n            },\n            icon: <Devices />,\n        },\n        {\n            title: photos,\n            itemID: photos,\n            onClick: (): void => {\n                context.store.set({ selected: photos });\n            },\n            icon: <AddAPhoto />,\n        },\n        {\n            title: schedule,\n            itemID: schedule,\n            onClick: (): void => {\n                context.store.set({ selected: schedule });\n            },\n            icon: <AirportShuttle />,\n        },\n    ];\n\n    const links2 = [\n        {\n            title: userGuide,\n            itemID: userGuide,\n            onClick: (): void => {\n                context.store.set({ selected: userGuide });\n            },\n            icon: <MoveToInboxIcon />,\n        },\n        {\n            title: agreement,\n            itemID: agreement,\n            subtitle: 'For Eaton employees only',\n            onClick: (): void => {\n                context.store.set({ selected: agreement });\n            },\n            icon: <SendIcon />,\n        },\n        {\n            title: accessibility,\n            itemID: accessibility,\n            icon: <Accessibility />,\n            items: [\n                {\n                    title: colorContrastGuide,\n                    itemID: colorContrastGuide,\n                    onClick: (): void => {\n                        context.store.set({ selected: colorContrastGuide });\n                    },\n                },\n                {\n                    title: screenReader,\n                    itemID: screenReader,\n                    onClick: (): void => {\n                        context.store.set({ selected: screenReader });\n                    },\n                },\n            ],\n        },\n        {\n            title: notifications,\n            itemID: notifications,\n            onClick: (): void => {\n                context.store.set({ selected: notifications });\n            },\n            icon: <NotificationsActive />,\n        },\n    ];\n\n    // Footer props\n    const showFooter = boolean('Show footer', true, footerGroupId);\n    const footerBackgroundColor = color('backgroundColor', Colors.white[50], footerGroupId);\n\n    // You can replace the knob props with your own values\n    return (\n        <Drawer\n            key={'drawer'}\n            activeItem={context.state.selected}\n            activeItemBackgroundColor={drawerKnobs.activeItemBackgroundColor}\n            activeItemFontColor={drawerKnobs.activeItemFontColor}\n            activeItemIconColor={drawerKnobs.activeItemIconColor}\n            activeItemBackgroundShape={drawerKnobs.activeItemBackgroundShape}\n            chevron={drawerKnobs.chevron}\n            collapseIcon={drawerKnobs.collapseIcon}\n            divider={drawerKnobs.divider}\n            expandIcon={drawerKnobs.expandIcon}\n            hidePadding={drawerKnobs.hidePadding}\n            itemFontColor={drawerKnobs.itemFontColor}\n            itemIconColor={drawerKnobs.itemIconColor}\n            nestedBackgroundColor={drawerKnobs.nestedBackgroundColor}\n            nestedDivider={drawerKnobs.nestedDivider}\n            open={drawerKnobs.open}\n            ripple={drawerKnobs.ripple}\n            variant={drawerKnobs.variant}\n            width={drawerKnobs.width}\n        >\n            <DrawerHeader\n                backgroundColor={headerKnobs.backgroundColor}\n                backgroundImage={headerKnobs.backgroundImage}\n                backgroundOpacity={headerKnobs.backgroundOpacity}\n                fontColor={headerKnobs.fontColor}\n                icon={headerKnobs.icon}\n                subtitle={headerKnobs.subtitle}\n                title={headerKnobs.title}\n            />\n            <DrawerBody backgroundColor={bodyKnobs.backgroundColor}>\n                <DrawerNavGroup items={links1} title={navGroupKnobs.title} />\n                <DrawerNavGroup\n                    items={links2}\n                    titleContent={\n                        <div\n                            style={{\n                                display: 'flex',\n                                justifyContent: 'space-between',\n                                fontWeight: 600,\n                            }}\n                        >\n                            <div>NavGroup 2</div>\n                            <div>Software Version v1.0.3</div>\n                        </div>\n                    }\n                />\n            </DrawerBody>\n\n            {showFooter && (\n                <DrawerFooter backgroundColor={footerBackgroundColor}>\n                    <Divider />\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <img src={EatonLogo} style={{ margin: '10px' }} alt=\"Eaton Logo\" height={50} width={'auto'} />\n                    </div>\n                </DrawerFooter>\n            )}\n        </Drawer>\n    );\n};\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}});withFullConfig.story={name:constants.c};var assets_EatonLogo=__webpack_require__(186),EatonLogo_default=__webpack_require__.n(assets_EatonLogo),inDrawerLayout=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(context){return react_default.a.createElement(react_components.DrawerLayout,{drawer:react_default.a.createElement(Drawer.Drawer,{open:Object(addon_knobs_dist.boolean)("open",!0),width:Object(addon_knobs_dist.number)("width",350,{range:!0,min:200,max:700,step:50}),variant:Object(addon_knobs_dist.select)("variant",["permanent","persistent","temporary"],"permanent")},react_default.a.createElement(Drawer.DrawerHeader,{icon:react_default.a.createElement(Menu_default.a,null),titleContent:react_default.a.createElement("div",{style:{paddingLeft:"20px",paddingTop:"15px"}},react_default.a.createElement(Typography.a,{variant:"subtitle2",style:{fontWeight:100}},"PX Blue"),react_default.a.createElement(Typography.a,{variant:"h6",style:{marginTop:"-10px"}},"DrawerLayout"))}),react_default.a.createElement(Drawer.DrawerBody,null,react_default.a.createElement(Drawer.DrawerNavGroup,{activeItem:context.state.selected,items:navGroupItems1})),react_default.a.createElement(Drawer.DrawerFooter,null,react_default.a.createElement("div",{style:{display:"flex",justifyContent:"center"}},react_default.a.createElement("img",{src:EatonLogo_default.a,style:{margin:"10px"},alt:"Eaton Logo",height:50,width:"auto"}))))},react_default.a.createElement("div",{style:{backgroundColor:"#b7b7b7",color:"white",height:"100%",padding:"30px",boxSizing:"border-box",fontSize:"60px"}},"Body content goes here."))}),{__STORY__:"import { Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { DrawerLayout } from '@pxblue/react-components';\nimport { Drawer, DrawerBody, DrawerFooter, DrawerHeader, DrawerNavGroup } from '@pxblue/react-components/core/Drawer';\nimport { boolean, number, select } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n// @ts-ignore\nimport EatonLogo from '../../assets/EatonLogo.svg';\nimport { DrawerStoryContext } from './util';\nimport { navGroupItems1 } from './with-basic-config';\n\nexport const inDrawerLayout = (context: DrawerStoryContext): StoryFnReactReturnType => (\n    <DrawerLayout\n        drawer={\n            <Drawer\n                open={boolean('open', true)}\n                width={number('width', 350, {\n                    range: true,\n                    min: 200,\n                    max: 700,\n                    step: 50,\n                })}\n                variant={select('variant', ['permanent', 'persistent', 'temporary'], 'permanent')}\n            >\n                <DrawerHeader\n                    icon={<MenuIcon />}\n                    titleContent={\n                        <div style={{ paddingLeft: '20px', paddingTop: '15px' }}>\n                            <Typography variant=\"subtitle2\" style={{ fontWeight: 100 }}>\n                                PX Blue\n                            </Typography>\n                            <Typography variant=\"h6\" style={{ marginTop: '-10px' }}>\n                                DrawerLayout\n                            </Typography>\n                        </div>\n                    }\n                />\n                <DrawerBody>\n                    <DrawerNavGroup activeItem={context.state.selected} items={navGroupItems1} />\n                </DrawerBody>\n                <DrawerFooter>\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <img src={EatonLogo} style={{ margin: '10px' }} alt=\"Eaton Logo\" height={50} width={'auto'} />\n                    </div>\n                </DrawerFooter>\n            </Drawer>\n        }\n    >\n        <div\n            style={{\n                backgroundColor: '#b7b7b7',\n                color: 'white',\n                height: '100%',\n                padding: '30px',\n                boxSizing: 'border-box',\n                fontSize: '60px',\n            }}\n        >\n            Body content goes here.\n        </div>\n    </DrawerLayout>\n);\n\ninDrawerLayout.story = { name: 'within a DrawerLayout' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/within-a-DrawerLayout.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/drawer",__IDS_TO_FRAMEWORKS__:{}}));inDrawerLayout.story={name:"within a DrawerLayout"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicConfig",(function(){return withBasicConfig})),__webpack_require__.d(__webpack_exports__,"withDifferentVariants",(function(){return withDifferentVariants})),__webpack_require__.d(__webpack_exports__,"withCustomHeader",(function(){return withCustomHeader})),__webpack_require__.d(__webpack_exports__,"withSubheader",(function(){return withSubheader})),__webpack_require__.d(__webpack_exports__,"withMultipleNavGroups",(function(){return withMultipleNavGroups})),__webpack_require__.d(__webpack_exports__,"withNestedListItems",(function(){return withNestedListItems})),__webpack_require__.d(__webpack_exports__,"withFooter",(function(){return withFooter})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig})),__webpack_require__.d(__webpack_exports__,"inDrawerLayout",(function(){return inDrawerLayout}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},store=new dist.Store({selected:""}),drawerModule={title:constants.a+"/Drawer",component:react_components.Drawer,decorators:[utils.e,function(storyFn){return react_default.a.createElement("div",{style:{display:"flex",height:"100%",alignSelf:"flex-start",width:"100%"}},storyFn())},function(storyFn){return react_default.a.createElement(dist.State,{store:store},(function(state){return function(store,items){items.map((function(item){item.onClick=function(){return store.set({selected:item.itemID})}}))}(store,navGroupItems1),storyFn({store:store,state:state})}))}],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("Drawer.md")}})};__webpack_exports__.default=drawerModule},1169:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),react=__webpack_require__(0),react_default=__webpack_require__.n(react),constants=__webpack_require__(17),utils=__webpack_require__(16),dist=__webpack_require__(5),withBasicUsage=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{title:Object(dist.text)("title","Info List Item")})}),{__STORY__:"import { InfoListItem } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\n\nexport const withBasicUsage = (): StoryFnReactReturnType => <InfoListItem title={text('title', 'Info List Item')} />;\n\nwithBasicUsage.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}}));withBasicUsage.story={name:constants.d};__webpack_require__(12).withSource;var withSubtitle=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{title:Object(dist.text)("title","Info List Item"),subtitle:Object(dist.text)("subtitle","this is a subtitle within an InfoListItem")})}),{__STORY__:"import { InfoListItem } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withSubtitle = (): StoryFnReactReturnType => (\n    <InfoListItem\n        title={text('title', 'Info List Item')}\n        subtitle={text('subtitle', 'this is a subtitle within an InfoListItem')}\n    />\n);\n\nwithSubtitle.story = { name: 'with subtitle' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-subtitle.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withSubtitle.story={name:"with subtitle"};var colors_dist=__webpack_require__(9),icons_mui=__webpack_require__(22),withIcon=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{title:"Info List Item",subtitle:"with an icon",icon:react_default.a.createElement(icons_mui.Leaf,null),iconColor:Object(dist.color)("iconColor",colors_dist.green[500])})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { Leaf } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withIcon = (): StoryFnReactReturnType => (\n    <InfoListItem\n        title={'Info List Item'}\n        subtitle={'with an icon'}\n        icon={<Leaf />}\n        iconColor={color('iconColor', Colors.green[500])}\n    />\n);\n\nwithIcon.story = { name: 'with icon' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-icon.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}}));withIcon.story={name:"with icon"};__webpack_require__(12).withSource;var withArrayForSubtitles=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{title:"Temperature",subtitle:["4",react_default.a.createElement(icons_mui.Leaf,{key:"subtitle",fontSize:"inherit"}),"leaves"],subtitleSeparator:Object(dist.text)("subtitleSeparator","___"),icon:react_default.a.createElement(icons_mui.Temp,null)})}),{__STORY__:"import { Leaf, Temp } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withArrayForSubtitles = (): StoryFnReactReturnType => (\n    <InfoListItem\n        title={'Temperature'}\n        subtitle={['4', <Leaf key={'subtitle'} fontSize={'inherit'} />, 'leaves']}\n        subtitleSeparator={text('subtitleSeparator', '___')}\n        icon={<Temp />}\n    />\n);\n\nwithArrayForSubtitles.story = { name: 'with array for subtitles' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-array-for-subtitles.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withArrayForSubtitles.story={name:"with array for subtitles"};__webpack_require__(12).withSource;var withAvatar=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{avatar:!0,title:"Info List Item",subtitle:"with an avatar",statusColor:Object(dist.color)("statusColor",colors_dist.green[500]),icon:react_default.a.createElement(icons_mui.GradeA,null)})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { GradeA } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withAvatar = (): StoryFnReactReturnType => (\n    <InfoListItem\n        avatar\n        title={'Info List Item'}\n        subtitle={'with an avatar'}\n        statusColor={color('statusColor', Colors.green[500])}\n        icon={<GradeA />}\n    />\n);\n\nwithAvatar.story = { name: 'with avatar' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-avatar.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withAvatar.story={name:"with avatar"};__webpack_require__(12).withSource;var withBackgroundColor=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{title:"Info List Item",subtitle:"with a configurable background color",fontColor:colors_dist.white[500],iconColor:colors_dist.white[50],icon:react_default.a.createElement(icons_mui.Leaf,null),backgroundColor:Object(dist.color)("backgroundColor",colors_dist.blue[500])})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { Leaf } from '@pxblue/icons-mui';\nimport { InfoListItem } from '@pxblue/react-components';\nimport { color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withBackgroundColor = (): StoryFnReactReturnType => (\n    <InfoListItem\n        title={'Info List Item'}\n        subtitle={'with a configurable background color'}\n        fontColor={Colors.white[500]}\n        iconColor={Colors.white[50]}\n        icon={<Leaf />}\n        backgroundColor={color('backgroundColor', Colors.blue[500])}\n    />\n);\n\nwithBackgroundColor.story = { name: 'with background color' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-background-color.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withBackgroundColor.story={name:"with background color"};__webpack_require__(12).withSource;var withLeftComponent=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{title:"Info List Item",subtitle:"with a ChannelValue component to the left",icon:react_default.a.createElement(icons_mui.Device,null),leftComponent:react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("leftComponent.ChannelValue.value","15"),units:Object(dist.text)("leftComponent.ChannelValue.units","A")})})}),{__STORY__:"import { Device } from '@pxblue/icons-mui';\nimport { ChannelValue, InfoListItem } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withLeftComponent = (): StoryFnReactReturnType => (\n    <InfoListItem\n        title={'Info List Item'}\n        subtitle={'with a ChannelValue component to the left'}\n        icon={<Device />}\n        leftComponent={\n            <ChannelValue\n                value={text('leftComponent.ChannelValue.value', '15')}\n                units={text('leftComponent.ChannelValue.units', 'A')}\n            />\n        }\n    />\n);\n\nwithLeftComponent.story = { name: 'with leftComponent' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-leftComponent.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withLeftComponent.story={name:"with leftComponent"};__webpack_require__(12).withSource;var withRightComponent=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.InfoListItem,{title:"Info List Item",subtitle:"with a ChannelValue component on the right side",icon:react_default.a.createElement(icons_mui.Device,null),rightComponent:react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("rightComponent.ChannelValue.value","15"),units:Object(dist.text)("rightComponent.ChannelValue.units","A")})})}),{__STORY__:"import { Device } from '@pxblue/icons-mui';\nimport { ChannelValue, InfoListItem } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withRightComponent = (): StoryFnReactReturnType => (\n    <InfoListItem\n        title={'Info List Item'}\n        subtitle={'with a ChannelValue component on the right side'}\n        icon={<Device />}\n        rightComponent={\n            <ChannelValue\n                value={text('rightComponent.ChannelValue.value', '15')}\n                units={text('rightComponent.ChannelValue.units', 'A')}\n            />\n        }\n    />\n);\n\nwithRightComponent.story = { name: 'with rightComponent' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-rightComponent.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}});withRightComponent.story={name:"with rightComponent"};var addon_actions_dist=__webpack_require__(19),withFullConfig=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){var divider=Object(dist.select)("divider",["none","full","partial"],"full"),appliedDivider="none"===divider?void 0:divider;return react_default.a.createElement(react_components.InfoListItem,{title:Object(dist.text)("title","Info List Item"),subtitle:Object(dist.text)("subtitle","with all customizable properties"),icon:Object(dist.boolean)("Show Icon",!0)?react_default.a.createElement(icons_mui.Device,null):void 0,hidePadding:Object(dist.boolean)("hidePadding",!1),statusColor:Object(dist.color)("statusColor",colors_dist.yellow[500]),iconColor:Object(dist.color)("iconColor",colors_dist.blue[500]),fontColor:Object(dist.color)("fontColor",colors_dist.blue[500]),backgroundColor:Object(dist.color)("backgroundColor",colors_dist.white[50]),avatar:Object(dist.boolean)("avatar",!1),chevron:Object(dist.boolean)("chevron",!0),dense:Object(dist.boolean)("dense",!1),divider:appliedDivider,ripple:Object(dist.boolean)("ripple",!0),onClick:Object(addon_actions_dist.action)("clicked"),wrapTitle:Object(dist.boolean)("wrapTitle",!1),wrapSubtitle:Object(dist.boolean)("wrapSubtitle",!1)})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { Device } from '@pxblue/icons-mui';\n\nimport { InfoListItem } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { boolean, color, select, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\n\nexport const withFullConfig = (): StoryFnReactReturnType => {\n    const divider = select('divider', ['none', 'full', 'partial'], 'full');\n    const appliedDivider = divider === 'none' ? undefined : divider;\n\n    return (\n        <InfoListItem\n            title={text('title', 'Info List Item')}\n            subtitle={text('subtitle', 'with all customizable properties')}\n            icon={boolean('Show Icon', true) ? <Device /> : undefined}\n            hidePadding={boolean('hidePadding', false)}\n            statusColor={color('statusColor', Colors.yellow[500])}\n            iconColor={color('iconColor', Colors.blue[500])}\n            fontColor={color('fontColor', Colors.blue[500])}\n            backgroundColor={color('backgroundColor', Colors.white[50])}\n            avatar={boolean('avatar', false)}\n            chevron={boolean('chevron', true)}\n            dense={boolean('dense', false)}\n            divider={appliedDivider}\n            ripple={boolean('ripple', true)}\n            onClick={action('clicked')}\n            wrapTitle={boolean('wrapTitle', false)}\n            wrapSubtitle={boolean('wrapSubtitle', false)}\n        />\n    );\n};\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}}));withFullConfig.story={name:constants.c};var List=__webpack_require__(326),withinFullList=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){var divider=Object(dist.select)("divider",["none","full","partial"],"full"),appliedDivider="none"===divider?void 0:divider;return react_default.a.createElement(List.a,{style:{color:colors_dist.gray[800],padding:0}},react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:"Status",divider:appliedDivider,statusColor:colors_dist.green[500],subtitleSeparator:"/",icon:react_default.a.createElement(icons_mui.Leaf,{color:"inherit"}),rightComponent:react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:"Online, ESS+"})}),react_default.a.createElement(react_components.InfoListItem,{title:"Input Voltage",divider:appliedDivider,avatar:!0,subtitle:["Phase A","Phase B","Phase C"],icon:react_default.a.createElement(icons_mui.GradeA,null),rightComponent:react_default.a.createElement("span",null,react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:478,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:479,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:473,units:"V"}))}),react_default.a.createElement(react_components.InfoListItem,{title:"Output Voltage",divider:appliedDivider,avatar:!0,statusColor:colors_dist.red[500],fontColor:colors_dist.red[500],subtitle:["Phase A","Phase B","Phase C"],icon:react_default.a.createElement(icons_mui.GradeA,{color:"inherit"}),rightComponent:react_default.a.createElement("span",{style:{color:colors_dist.red[500]}},react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:480,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:480,units:"V"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:480,units:"V"}))}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:"Output Current",divider:appliedDivider,icon:react_default.a.createElement(icons_mui.Device,{color:"inherit"}),rightComponent:react_default.a.createElement("span",null,react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:15,units:"A"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:14.9,units:"A"}),","," ",react_default.a.createElement(react_components.ChannelValue,{fontSize:16,value:15,units:"A"}))}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,title:"Temperature",divider:appliedDivider,icon:react_default.a.createElement(icons_mui.Temp,null),rightComponent:react_default.a.createElement(react_components.ChannelValue,{fontSize:16,icon:react_default.a.createElement(icons_mui.Leaf,{htmlColor:colors_dist.green[500]}),value:68,units:"°F"})}))}),{__STORY__:"import { List } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { Device, GradeA, Leaf, Temp } from '@pxblue/icons-mui';\nimport { ChannelValue, InfoListItem } from '@pxblue/react-components';\nimport { select } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withinFullList = (): StoryFnReactReturnType => {\n    const divider = select('divider', ['none', 'full', 'partial'], 'full');\n    const appliedDivider = divider === 'none' ? undefined : divider;\n\n    return (\n        <List style={{ color: Colors.gray['800'], padding: 0 }}>\n            <InfoListItem\n                dense\n                title={'Status'}\n                divider={appliedDivider}\n                statusColor={Colors.green[500]}\n                subtitleSeparator={'/'}\n                icon={<Leaf color={'inherit'} />}\n                rightComponent={<ChannelValue fontSize={16} value={'Online, ESS+'} />}\n            />\n            <InfoListItem\n                title={'Input Voltage'}\n                divider={appliedDivider}\n                avatar\n                subtitle={['Phase A', 'Phase B', 'Phase C']}\n                icon={<GradeA />}\n                rightComponent={\n                    <span>\n                        <ChannelValue fontSize={16} value={478} units={'V'} />,{' '}\n                        <ChannelValue fontSize={16} value={479} units={'V'} />,{' '}\n                        <ChannelValue fontSize={16} value={473} units={'V'} />\n                    </span>\n                }\n            />\n            <InfoListItem\n                title={'Output Voltage'}\n                divider={appliedDivider}\n                avatar\n                statusColor={Colors.red[500]}\n                fontColor={Colors.red[500]}\n                subtitle={['Phase A', 'Phase B', 'Phase C']}\n                icon={<GradeA color={'inherit'} />}\n                rightComponent={\n                    <span style={{ color: Colors.red[500] }}>\n                        <ChannelValue fontSize={16} value={480} units={'V'} />,{' '}\n                        <ChannelValue fontSize={16} value={480} units={'V'} />,{' '}\n                        <ChannelValue fontSize={16} value={480} units={'V'} />\n                    </span>\n                }\n            />\n            <InfoListItem\n                dense\n                title={'Output Current'}\n                divider={appliedDivider}\n                icon={<Device color={'inherit'} />}\n                rightComponent={\n                    <span>\n                        <ChannelValue fontSize={16} value={15} units={'A'} />,{' '}\n                        <ChannelValue fontSize={16} value={14.9} units={'A'} />,{' '}\n                        <ChannelValue fontSize={16} value={15} units={'A'} />\n                    </span>\n                }\n            />\n            <InfoListItem\n                dense\n                title={'Temperature'}\n                divider={appliedDivider}\n                icon={<Temp />}\n                rightComponent={\n                    <ChannelValue fontSize={16} icon={<Leaf htmlColor={Colors.green[500]} />} value={68} units={'°F'} />\n                }\n            />\n        </List>\n    );\n};\n\nwithinFullList.story = { name: 'within a full list' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/within-full-list.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/info-list-item",__IDS_TO_FRAMEWORKS__:{}}));withinFullList.story={name:"within a full list"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withSubtitle",(function(){return withSubtitle})),__webpack_require__.d(__webpack_exports__,"withIcon",(function(){return withIcon})),__webpack_require__.d(__webpack_exports__,"withArrayForSubtitles",(function(){return withArrayForSubtitles})),__webpack_require__.d(__webpack_exports__,"withAvatar",(function(){return withAvatar})),__webpack_require__.d(__webpack_exports__,"withBackgroundColor",(function(){return withBackgroundColor})),__webpack_require__.d(__webpack_exports__,"withLeftComponent",(function(){return withLeftComponent})),__webpack_require__.d(__webpack_exports__,"withRightComponent",(function(){return withRightComponent})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig})),__webpack_require__.d(__webpack_exports__,"withinFullList",(function(){return withinFullList}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},infoListModule={title:constants.a+"/Info List Item",component:react_components.InfoListItem,decorators:[utils.e,function(storyFn){return react_default.a.createElement("div",{style:{margin:20,width:"90%",backgroundColor:"white"}},storyFn())}],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("InfoListItem.md")}})};__webpack_exports__.default=infoListModule},1170:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(17),utils=__webpack_require__(16),Avatar=__webpack_require__(1212),Settings=__webpack_require__(547),Email=__webpack_require__(530),ExitToApp=__webpack_require__(531),dist=__webpack_require__(19),addon_knobs_dist=__webpack_require__(5),react=__webpack_require__(0),react_default=__webpack_require__.n(react),addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),with_basic_usage_menuGroups=[{items:[{itemID:"1",title:"Account",icon:react_default.a.createElement(Settings.a,null),onClick:Object(dist.action)("click 'Account'")},{itemID:"2",title:"Contact Us",icon:react_default.a.createElement(Email.a,null),onClick:Object(dist.action)("click 'Contact Us'")},{itemID:"3",title:"Log Out",icon:react_default.a.createElement(ExitToApp.a,null),onClick:Object(dist.action)("click 'Log Out'")}]}],withBasicUsage=addSourceDecorator((function(){var value=Object(addon_knobs_dist.text)("Avatar.value","AB"),avatar=react_default.a.createElement(Avatar.a,null,value);return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:with_basic_usage_menuGroups,onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")})}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport { Email, ExitToApp, Settings } from '@material-ui/icons';\nimport { UserMenu, UserMenuItem } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\n\nconst menuItems: UserMenuItem[] = [\n    {\n        itemID: '1',\n        title: 'Account',\n        icon: <Settings />,\n        onClick: action(\"click 'Account'\"),\n    },\n    {\n        itemID: '2',\n        title: 'Contact Us',\n        icon: <Email />,\n        onClick: action(\"click 'Contact Us'\"),\n    },\n    {\n        itemID: '3',\n        title: 'Log Out',\n        icon: <ExitToApp />,\n        onClick: action(\"click 'Log Out'\"),\n    },\n];\n\nexport const menuGroups = [\n    {\n        items: menuItems,\n    },\n];\n\nexport const withBasicUsage = (): StoryFnReactReturnType => {\n    const value = text('Avatar.value', 'AB');\n    const avatar = <Avatar>{value}</Avatar>;\n    return <UserMenu avatar={avatar} menuGroups={menuGroups} onOpen={action('open')} onClose={action('close')} />;\n};\n\nwithBasicUsage.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withBasicUsage.story={name:constants.d};var makeStyles=__webpack_require__(187),colors_dist=__webpack_require__(9),withCustomColors=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){var classes=Object(makeStyles.a)({root:{color:Object(addon_knobs_dist.color)("fontColor",colors_dist.white[50],"Avatar"),backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.blue[800],"Avatar")},paper:{backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.white[50],"Menu")}})(),avatar=react_default.a.createElement(Avatar.a,{classes:{root:classes.root}},"CD"),group=Object.assign({},with_basic_usage_menuGroups[0]);return group.fontColor=Object(addon_knobs_dist.color)("menuGroups.fontColor",colors_dist.gray[500],"Menu"),group.iconColor=Object(addon_knobs_dist.color)("menuGroups.iconColor",colors_dist.blue[800],"Menu"),react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:[group],MenuProps:{classes:{paper:classes.paper}},onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")})}),{__STORY__:"import { Avatar, makeStyles } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { UserMenu, UserMenuGroup } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { menuGroups } from './with-basic-usage';\n\nexport const withCustomColors = (): StoryFnReactReturnType => {\n    const useStyles = makeStyles({\n        root: {\n            color: color('fontColor', Colors.white[50], 'Avatar'),\n            backgroundColor: color('backgroundColor', Colors.blue[800], 'Avatar'),\n        },\n        paper: {\n            backgroundColor: color('backgroundColor', Colors.white[50], 'Menu'),\n        },\n    });\n\n    const classes = useStyles();\n    const avatar = <Avatar classes={{ root: classes.root }}>CD</Avatar>;\n    const group: UserMenuGroup = Object.assign({}, menuGroups[0]);\n    group.fontColor = color('menuGroups.fontColor', Colors.gray[500], 'Menu');\n    group.iconColor = color('menuGroups.iconColor', Colors.blue[800], 'Menu');\n\n    return (\n        <UserMenu\n            avatar={avatar}\n            menuGroups={[group]}\n            MenuProps={{ classes: { paper: classes.paper } }}\n            onOpen={action('open')}\n            onClose={action('close')}\n        />\n    );\n};\n\nwithCustomColors.story = { name: 'with custom colors' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-colors.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}}));withCustomColors.story={name:"with custom colors"};var Pets=__webpack_require__(542),with_non_text_avatar_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),tRex=__webpack_require__(559),withNonTextAvatar=with_non_text_avatar_addSourceDecorator((function(){var tRexAvatar=react_default.a.createElement(Avatar.a,{src:tRex}),iconAvatar=react_default.a.createElement(Avatar.a,null,react_default.a.createElement(Pets.a,null));return react_default.a.createElement("div",{style:{display:"flex",width:"100px",justifyContent:"space-between"}},react_default.a.createElement(react_components.UserMenu,{avatar:tRexAvatar,menuGroups:with_basic_usage_menuGroups,onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")}),react_default.a.createElement(react_components.UserMenu,{avatar:iconAvatar,menuGroups:with_basic_usage_menuGroups,onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")}))}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport { Pets } from '@material-ui/icons';\nimport { UserMenu } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { menuGroups } from './with-basic-usage';\nconst tRex = require('../../assets/trex.jpeg');\n\nexport const withNonTextAvatar = (): StoryFnReactReturnType => {\n    const tRexAvatar = <Avatar src={tRex} />;\n    const iconAvatar = (\n        <Avatar>\n            <Pets />\n        </Avatar>\n    );\n    return (\n        <div style={{ display: 'flex', width: '100px', justifyContent: 'space-between' }}>\n            <UserMenu avatar={tRexAvatar} menuGroups={menuGroups} onOpen={action('open')} onClose={action('close')} />\n            <UserMenu avatar={iconAvatar} menuGroups={menuGroups} onOpen={action('open')} onClose={action('close')} />\n        </div>\n    );\n};\n\nwithNonTextAvatar.story = { name: 'with non-text avatar' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-non-text-avatar.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withNonTextAvatar.story={name:"with non-text avatar"};__webpack_require__(12).withSource;var withMenuHeader=(0,__webpack_require__(12).addSource)((function(){var avatar=react_default.a.createElement(Avatar.a,null,"EM"),menuTitle=Object(addon_knobs_dist.text)("menuTitle","Menu Title"),menuSubtitle=Object(addon_knobs_dist.text)("menuSubtitle","Menu Subtitle");return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:with_basic_usage_menuGroups,menuTitle:menuTitle,menuSubtitle:menuSubtitle,onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")})}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport { UserMenu } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { menuGroups } from './with-basic-usage';\n\nexport const withMenuHeader = (): StoryFnReactReturnType => {\n    const avatar = <Avatar>EM</Avatar>;\n    const menuTitle = text('menuTitle', 'Menu Title');\n    const menuSubtitle = text('menuSubtitle', 'Menu Subtitle');\n    return (\n        <UserMenu\n            avatar={avatar}\n            menuGroups={menuGroups}\n            menuTitle={menuTitle}\n            menuSubtitle={menuSubtitle}\n            onOpen={action('open')}\n            onClose={action('close')}\n        />\n    );\n};\n\nwithMenuHeader.story = { name: 'with a menu header' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-menu-header.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withMenuHeader.story={name:"with a menu header"};__webpack_require__(12).withSource;var withMenuPlacementOptions=(0,__webpack_require__(12).addSource)((function(){var anchorOriginHorizontal=Object(addon_knobs_dist.select)("MenuProps.anchorOrigin.horizontal",["left","center","right"],"left","Menu"),anchorOriginVertical=Object(addon_knobs_dist.select)("MenuProps.anchorOrigin.vertical",["top","center","bottom"],"top","Menu"),transformOriginHorizontal=Object(addon_knobs_dist.select)("MenuProps.transformOrigin.horizontal",["left","center","right"],"left","Menu"),transformOriginVertical=Object(addon_knobs_dist.select)("MenuProps.transformOrigin.vertical",["top","center","bottom"],"top","Menu");return react_default.a.createElement(react_components.UserMenu,{avatar:react_default.a.createElement(Avatar.a,null,"CD"),menuGroups:with_basic_usage_menuGroups,MenuProps:{anchorOrigin:{horizontal:anchorOriginHorizontal,vertical:anchorOriginVertical},transformOrigin:{horizontal:transformOriginHorizontal,vertical:transformOriginVertical}},onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")})}),{__STORY__:"import { Avatar } from '@material-ui/core';\nimport { UserMenu } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { select } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { menuGroups } from './with-basic-usage';\n\nexport const withMenuPlacementOptions = (): StoryFnReactReturnType => {\n    const anchorOriginHorizontal = select(\n        'MenuProps.anchorOrigin.horizontal',\n        ['left', 'center', 'right'],\n        'left',\n        'Menu'\n    );\n    const anchorOriginVertical = select('MenuProps.anchorOrigin.vertical', ['top', 'center', 'bottom'], 'top', 'Menu');\n    const transformOriginHorizontal = select(\n        'MenuProps.transformOrigin.horizontal',\n        ['left', 'center', 'right'],\n        'left',\n        'Menu'\n    );\n    const transformOriginVertical = select(\n        'MenuProps.transformOrigin.vertical',\n        ['top', 'center', 'bottom'],\n        'top',\n        'Menu'\n    );\n\n    return (\n        <UserMenu\n            avatar={<Avatar>CD</Avatar>}\n            menuGroups={menuGroups}\n            MenuProps={{\n                anchorOrigin: { horizontal: anchorOriginHorizontal, vertical: anchorOriginVertical },\n                transformOrigin: { horizontal: transformOriginHorizontal, vertical: transformOriginVertical },\n            }}\n            onOpen={action('open')}\n            onClose={action('close')}\n        />\n    );\n};\n\nwithMenuPlacementOptions.story = { name: 'with menu placement options' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-menu-placement-options.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withMenuPlacementOptions.story={name:"with menu placement options"};var Menu=__webpack_require__(562),Typography=__webpack_require__(83),Divider=__webpack_require__(513),MenuItem=__webpack_require__(1210),storybook_state_dist=__webpack_require__(156),with_custom_menu_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),EatonLogo=__webpack_require__(186),with_custom_menu_tRex=__webpack_require__(559),store=new storybook_state_dist.Store({open:!1}),withCustomMenu=with_custom_menu_addSourceDecorator((function(){var avatar=react_default.a.createElement(Avatar.a,{src:with_custom_menu_tRex}),open=function(){store.set({open:!0})},close=function(){store.set({open:!1})},menu=function(state){return react_default.a.createElement(Menu.a,{open:state.open,onClose:close},react_default.a.createElement("div",{key:"header",style:{position:"relative",padding:10}},react_default.a.createElement(Typography.a,{variant:"h6"},"Welcome, "),react_default.a.createElement(Typography.a,{style:{fontWeight:600,marginTop:"-10px"},variant:"h3"},"T-Rex"),react_default.a.createElement("div",{style:{position:"absolute",right:0,top:0,height:"100%",width:"100%",opacity:.2,backgroundSize:"cover",backgroundImage:"url("+with_custom_menu_tRex+")"}})),react_default.a.createElement(Divider.a,{key:"divider-1"}),react_default.a.createElement(MenuItem.a,{onClick:close,key:"account"},"My Account"),react_default.a.createElement(MenuItem.a,{onClick:close,key:"logout"},"Logout"),react_default.a.createElement(Divider.a,{key:"divider-2"}),react_default.a.createElement("img",{key:"footer",alt:"tRex",style:{textAlign:"center",padding:"12px 16px 0 16px",height:40},src:EatonLogo}))};return store.set({open:!1}),react_default.a.createElement(storybook_state_dist.State,{store:store},(function(state){return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,onOpen:open,menu:menu(state)})}))}),{__STORY__:"import { Avatar, Divider, Menu, MenuItem, Typography } from '@material-ui/core';\nimport { UserMenu } from '@pxblue/react-components';\nimport { State, Store } from '@sambego/storybook-state';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nconst EatonLogo = require('../../assets/EatonLogo.svg');\nconst tRex = require('../../assets/trex.jpeg');\n\ntype UserMenuState = {\n    open: boolean;\n};\nconst store = new Store<UserMenuState>({\n    open: false,\n});\n\nexport const withCustomMenu = (): StoryFnReactReturnType => {\n    const avatar = <Avatar src={tRex} />;\n    const open = (): void => {\n        store.set({ open: true });\n    };\n    const close = (): void => {\n        store.set({ open: false });\n    };\n\n    const menu = (state: any): JSX.Element => (\n        <Menu open={state.open} onClose={close}>\n            <div key={'header'} style={{ position: 'relative', padding: 10 }}>\n                <Typography variant={'h6'}>Welcome, </Typography>\n                <Typography style={{ fontWeight: 600, marginTop: '-10px' }} variant={'h3'}>\n                    T-Rex\n                </Typography>\n                <div\n                    style={{\n                        position: 'absolute',\n                        right: 0,\n                        top: 0,\n                        height: '100%',\n                        width: '100%',\n                        opacity: 0.2,\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${tRex})`,\n                    }}\n                />\n            </div>\n            <Divider key={'divider-1'} />\n            <MenuItem onClick={close} key={'account'}>\n                My Account\n            </MenuItem>\n            <MenuItem onClick={close} key={'logout'}>\n                Logout\n            </MenuItem>\n            <Divider key={'divider-2'} />\n            <img\n                key={'footer'}\n                alt={'tRex'}\n                style={{ textAlign: 'center', padding: '12px 16px 0 16px', height: 40 }}\n                src={EatonLogo}\n            />\n        </Menu>\n    );\n\n    store.set({ open: false });\n\n    return (\n        <State store={store}>\n            {(state): JSX.Element => <UserMenu avatar={avatar} onOpen={open} menu={menu(state)} />}\n        </State>\n    );\n};\n\nwithCustomMenu.story = { name: 'with custom menu' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-menu.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withCustomMenu.story={name:"with custom menu"};__webpack_require__(12).withSource;var withFullConfig=(0,__webpack_require__(12).addSource)((function(){var classes=Object(makeStyles.a)({root:{color:Object(addon_knobs_dist.color)("fontColor",colors_dist.white[50],"Avatar"),backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.blue[800],"Avatar")},paper:{backgroundColor:Object(addon_knobs_dist.color)("backgroundColor",colors_dist.blue[50],"Menu")}})(),avatar=react_default.a.createElement(Avatar.a,{classes:{root:classes.root}},Object(addon_knobs_dist.text)("Avatar.value","AB","Avatar")),menuTitle=Object(addon_knobs_dist.text)("menuTitle","Menu Title","Menu"),menuSubtitle=Object(addon_knobs_dist.text)("menuSubtitle","Menu Subtitle","Menu"),group=Object.assign({},with_basic_usage_menuGroups[0]);group.fontColor=Object(addon_knobs_dist.color)("menuGroups.fontColor",colors_dist.gray[500],"Menu"),group.iconColor=Object(addon_knobs_dist.color)("menuGroups.iconColor",colors_dist.blue[800],"Menu"),group.title=Object(addon_knobs_dist.text)("menuGroups[0].title","Account Management","Menu");var anchorOriginHorizontal=Object(addon_knobs_dist.select)("MenuProps.anchorOrigin.horizontal",["left","center","right"],"left","Menu"),anchorOriginVertical=Object(addon_knobs_dist.select)("MenuProps.anchorOrigin.vertical",["top","center","bottom"],"top","Menu"),transformOriginHorizontal=Object(addon_knobs_dist.select)("MenuProps.transformOrigin.horizontal",["left","center","right"],"left","Menu"),transformOriginVertical=Object(addon_knobs_dist.select)("MenuProps.transformOrigin.vertical",["top","center","bottom"],"top","Menu");return react_default.a.createElement(react_components.UserMenu,{avatar:avatar,menuGroups:[group],menuTitle:menuTitle,menuSubtitle:menuSubtitle,MenuProps:{classes:{paper:classes.paper},anchorOrigin:{horizontal:anchorOriginHorizontal,vertical:anchorOriginVertical},transformOrigin:{horizontal:transformOriginHorizontal,vertical:transformOriginVertical}},onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")})}),{__STORY__:"import { Avatar, makeStyles } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { UserMenu, UserMenuGroup } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { color, select, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\nimport { menuGroups } from './with-basic-usage';\n\nexport const withFullConfig = (): StoryFnReactReturnType => {\n    const useStyles = makeStyles({\n        root: {\n            color: color('fontColor', Colors.white[50], 'Avatar'),\n            backgroundColor: color('backgroundColor', Colors.blue[800], 'Avatar'),\n        },\n        paper: {\n            backgroundColor: color('backgroundColor', Colors.blue[50], 'Menu'),\n        },\n    });\n\n    const classes = useStyles();\n    const avatar = <Avatar classes={{ root: classes.root }}>{text('Avatar.value', 'AB', 'Avatar')}</Avatar>;\n\n    const menuTitle = text('menuTitle', 'Menu Title', 'Menu');\n    const menuSubtitle = text('menuSubtitle', 'Menu Subtitle', 'Menu');\n\n    const group: UserMenuGroup = Object.assign({}, menuGroups[0]);\n    group.fontColor = color('menuGroups.fontColor', Colors.gray[500], 'Menu');\n    group.iconColor = color('menuGroups.iconColor', Colors.blue[800], 'Menu');\n    group.title = text('menuGroups[0].title', 'Account Management', 'Menu');\n\n    const anchorOriginHorizontal = select(\n        'MenuProps.anchorOrigin.horizontal',\n        ['left', 'center', 'right'],\n        'left',\n        'Menu'\n    );\n    const anchorOriginVertical = select('MenuProps.anchorOrigin.vertical', ['top', 'center', 'bottom'], 'top', 'Menu');\n    const transformOriginHorizontal = select(\n        'MenuProps.transformOrigin.horizontal',\n        ['left', 'center', 'right'],\n        'left',\n        'Menu'\n    );\n    const transformOriginVertical = select(\n        'MenuProps.transformOrigin.vertical',\n        ['top', 'center', 'bottom'],\n        'top',\n        'Menu'\n    );\n\n    return (\n        <UserMenu\n            avatar={avatar}\n            menuGroups={[group]}\n            menuTitle={menuTitle}\n            menuSubtitle={menuSubtitle}\n            MenuProps={{\n                classes: { paper: classes.paper },\n                anchorOrigin: { horizontal: anchorOriginHorizontal, vertical: anchorOriginVertical },\n                transformOrigin: { horizontal: transformOriginHorizontal, vertical: transformOriginVertical },\n            }}\n            onOpen={action('open')}\n            onClose={action('close')}\n        />\n    );\n};\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}});withFullConfig.story={name:constants.c};var AppBar=__webpack_require__(1203),Toolbar=__webpack_require__(517),withinToolbar=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){var useStyles=Object(makeStyles.a)({root:{height:40,minHeight:"unset"},title:{color:colors_dist.gray[100],fontSize:12,textAlign:"right"}}),menuGroups=[{items:[{itemID:"1",title:"Account",icon:react_default.a.createElement(Settings.a,null),onClick:Object(dist.action)("click 'Account'")},{itemID:"2",title:"Contact Us",icon:react_default.a.createElement(Email.a,null),onClick:Object(dist.action)("click 'Contact Us'")},{itemID:"3",title:"Log Out",divider:!0,icon:react_default.a.createElement(ExitToApp.a,null),onClick:Object(dist.action)("click 'Log Out'")},{itemID:"4",title:"v1.03.54",InfoListItemProps:{classes:useStyles()}}]}];return react_default.a.createElement("div",{style:{width:"80%",height:150}},react_default.a.createElement(AppBar.a,{position:"relative",color:"primary",style:{marginTop:"-32px"}},react_default.a.createElement(Toolbar.a,{style:{padding:"0 16px"}},react_default.a.createElement(Typography.a,{variant:"h6"},"Toolbar Title"),react_default.a.createElement(react_components.Spacer,{flex:1}),react_default.a.createElement(react_components.UserMenu,{avatar:react_default.a.createElement(Avatar.a,null),menuGroups:menuGroups,menuTitle:"Jane Doe",menuSubtitle:"Account Manager",onOpen:Object(dist.action)("open"),onClose:Object(dist.action)("close")}))),react_default.a.createElement("div",{style:{height:"100%",backgroundColor:colors_dist.white[50],padding:16}},react_default.a.createElement(Typography.a,{variant:"subtitle1"},"Body Content Goes Here")))}),{__STORY__:"import { AppBar, Avatar, makeStyles, Toolbar, Typography } from '@material-ui/core';\nimport { Spacer, UserMenu, UserMenuItem } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport * as Colors from '@pxblue/colors';\nimport { Email, ExitToApp, Settings } from '@material-ui/icons';\n\nexport const withinToolbar = (): StoryFnReactReturnType => {\n    const useStyles = makeStyles({\n        root: {\n            height: 40,\n            minHeight: 'unset',\n        },\n        title: {\n            color: Colors.gray[100],\n            fontSize: 12,\n            textAlign: 'right',\n        },\n    });\n\n    const menuItems: UserMenuItem[] = [\n        {\n            itemID: '1',\n            title: 'Account',\n            icon: <Settings />,\n            onClick: action(\"click 'Account'\"),\n        },\n        {\n            itemID: '2',\n            title: 'Contact Us',\n            icon: <Email />,\n            onClick: action(\"click 'Contact Us'\"),\n        },\n        {\n            itemID: '3',\n            title: 'Log Out',\n            divider: true,\n            icon: <ExitToApp />,\n            onClick: action(\"click 'Log Out'\"),\n        },\n        {\n            itemID: '4',\n            title: 'v1.03.54',\n            InfoListItemProps: {\n                classes: useStyles(),\n            },\n        },\n    ];\n\n    const menuGroups = [\n        {\n            items: menuItems,\n        },\n    ];\n\n    return (\n        <div style={{ width: '80%', height: 150 }}>\n            <AppBar position={'relative'} color={'primary'} style={{ marginTop: '-32px' }}>\n                <Toolbar style={{ padding: '0 16px' }}>\n                    <Typography variant={'h6'}>Toolbar Title</Typography>\n                    <Spacer flex={1} />\n                    <UserMenu\n                        avatar={<Avatar />}\n                        menuGroups={menuGroups}\n                        menuTitle={'Jane Doe'}\n                        menuSubtitle={'Account Manager'}\n                        onOpen={action('open')}\n                        onClose={action('close')}\n                    />\n                </Toolbar>\n            </AppBar>\n            <div style={{ height: '100%', backgroundColor: Colors.white[50], padding: 16 }}>\n                <Typography variant={'subtitle1'}>Body Content Goes Here</Typography>\n            </div>\n        </div>\n    );\n};\n\nwithinToolbar.story = { name: 'within a toolbar' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/within-a-toolbar.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/user-menu",__IDS_TO_FRAMEWORKS__:{}}));withinToolbar.story={name:"within a toolbar"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withCustomColors",(function(){return withCustomColors})),__webpack_require__.d(__webpack_exports__,"withNonTextAvatar",(function(){return withNonTextAvatar})),__webpack_require__.d(__webpack_exports__,"withMenuHeader",(function(){return withMenuHeader})),__webpack_require__.d(__webpack_exports__,"withMenuPlacementOptions",(function(){return withMenuPlacementOptions})),__webpack_require__.d(__webpack_exports__,"withCustomMenu",(function(){return withCustomMenu})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig})),__webpack_require__.d(__webpack_exports__,"withinToolbar",(function(){return withinToolbar}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},userMenuModule={title:constants.a+"/User Menu",component:react_components.UserMenu,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:__webpack_require__(511)}})};__webpack_exports__.default=userMenuModule},1171:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),react=__webpack_require__(0),react_default=__webpack_require__.n(react),constants=__webpack_require__(17),utils=__webpack_require__(16),icons_mui=__webpack_require__(22),dist=__webpack_require__(5),withBasicUsage=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.Hero,{icon:react_default.a.createElement(icons_mui.GradeA,{fontSize:"inherit"}),label:Object(dist.text)("label","Efficiency")})}),{__STORY__:"import { GradeA } from '@pxblue/icons-mui';\nimport { Hero } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\n\nexport const withBasicUsage = (): StoryFnReactReturnType => (\n    <Hero icon={<GradeA fontSize={'inherit'} />} label={text('label', 'Efficiency')} />\n);\n\nwithBasicUsage.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}}));withBasicUsage.story={name:constants.d};__webpack_require__(12).withSource;var withValueUnits=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.Hero,{icon:react_default.a.createElement(icons_mui.GradeB,{fontSize:"inherit"}),label:"Efficiency",value:Object(dist.text)("value","88"),units:Object(dist.text)("units","%")})}),{__STORY__:"import { GradeB } from '@pxblue/icons-mui';\nimport { Hero } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withValueUnits = (): StoryFnReactReturnType => (\n    <Hero\n        icon={<GradeB fontSize={'inherit'} />}\n        label={'Efficiency'}\n        value={text('value', '88')}\n        units={text('units', '%')}\n    />\n);\n\nwithValueUnits.story = { name: 'with value and units' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-value-and-units.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}});withValueUnits.story={name:"with value and units"};var Schedule=__webpack_require__(545),withChannelValueChildren=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.Hero,{label:"Duration",icon:react_default.a.createElement(Schedule.a,{fontSize:"inherit"})},react_default.a.createElement(react_components.ChannelValue,{fontSize:"large",value:Object(dist.number)("ChannelValue.hours",1),units:"h"}),react_default.a.createElement(react_components.ChannelValue,{fontSize:"large",value:Object(dist.number)("ChannelValue.minutes",27),units:"m"}))}),{__STORY__:"import { Schedule } from '@material-ui/icons';\nimport { ChannelValue, Hero } from '@pxblue/react-components';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withChannelValueChildren = (): StoryFnReactReturnType => (\n    <Hero label={'Duration'} icon={<Schedule fontSize={'inherit'} />}>\n        <ChannelValue fontSize={'large'} value={number('ChannelValue.hours', 1)} units={'h'} />\n        <ChannelValue fontSize={'large'} value={number('ChannelValue.minutes', 27)} units={'m'} />\n    </Hero>\n);\n\nwithChannelValueChildren.story = { name: 'with channelValue children' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-channelValue-children.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}}));withChannelValueChildren.story={name:"with channelValue children"};var colors_dist=__webpack_require__(9),withIconColors=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.Hero,{iconBackgroundColor:Object(dist.color)("iconBackgroundColor",colors_dist.red[500]),icon:react_default.a.createElement(icons_mui.Temp,{fontSize:"inherit",htmlColor:Object(dist.color)("icon.htmlColor",colors_dist.white[500])}),label:"Temperature",value:"38",units:"°C"})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { Temp } from '@pxblue/icons-mui';\nimport { Hero } from '@pxblue/react-components';\nimport { color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withIconColors = (): StoryFnReactReturnType => (\n    <Hero\n        iconBackgroundColor={color('iconBackgroundColor', Colors.red[500])}\n        icon={<Temp fontSize={'inherit'} htmlColor={color('icon.htmlColor', Colors.white[500])} />}\n        label={'Temperature'}\n        value={'38'}\n        units={'°C'}\n    />\n);\n\nwithIconColors.story = { name: 'with icon colors' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-icon-colors.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}}));withIconColors.story={name:"with icon colors"};var addon_actions_dist=__webpack_require__(19),TrendingUp=__webpack_require__(90),TrendingUp_default=__webpack_require__.n(TrendingUp),withFullConfig=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.Hero,{label:Object(dist.text)("label","Velocity"),units:Object(dist.text)("units","RPM"),onClick:Object(addon_actions_dist.action)("clicked"),value:Object(dist.text)("value","470"),valueIcon:Object(dist.boolean)("Show Value Icon",!0)?react_default.a.createElement(TrendingUp_default.a,null):void 0,iconBackgroundColor:Object(dist.color)("iconBackgroundColor",colors_dist.blue[500]),icon:react_default.a.createElement(icons_mui.Fan,{fontSize:"inherit",htmlColor:Object(dist.color)("icon.htmlColor",colors_dist.white[50])}),iconSize:Object(dist.number)("iconSize",35),fontSize:Object(dist.select)("fontSize",["normal","small"],"small")})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { Hero } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { boolean, color, number, text, select } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { Fan } from '@pxblue/icons-mui';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\n\nexport const withFullConfig = (): StoryFnReactReturnType => (\n    <Hero\n        label={text('label', 'Velocity')}\n        units={text('units', 'RPM')}\n        onClick={action('clicked')}\n        value={text('value', '470')}\n        valueIcon={boolean('Show Value Icon', true) ? <TrendingUpIcon /> : undefined}\n        iconBackgroundColor={color('iconBackgroundColor', Colors.blue[500])}\n        icon={<Fan fontSize={'inherit'} htmlColor={color('icon.htmlColor', Colors.white[50])} />}\n        iconSize={number('iconSize', 35)}\n        fontSize={select('fontSize', ['normal', 'small'], 'small')}\n    />\n);\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}}));withFullConfig.story={name:constants.c};__webpack_require__(12).withSource;var inBanner=(0,__webpack_require__(12).addSource)((function(){var heroes=[react_default.a.createElement(react_components.Hero,{key:"hero1",icon:react_default.a.createElement(icons_mui.GradeA,{fontSize:"inherit",htmlColor:colors_dist.green[500]}),label:"Healthy",value:96,units:"/100"}),react_default.a.createElement(react_components.Hero,{key:"hero2",icon:react_default.a.createElement(icons_mui.CurrentCircled,{fontSize:"inherit",htmlColor:colors_dist.yellow[500]}),label:"Load",value:"90",units:"%",fontSize:"normal"}),react_default.a.createElement(react_components.Hero,{key:"hero3",icon:react_default.a.createElement(icons_mui.Temp,{fontSize:"inherit",htmlColor:colors_dist.green[500]}),label:"Temp",value:55,units:"C"}),react_default.a.createElement(react_components.Hero,{key:"hero4",icon:react_default.a.createElement(icons_mui.Leaf,{fontSize:"inherit",htmlColor:colors_dist.green[500]}),label:"Battery",value:96,units:"/100"})],numberDisplayed=Object(dist.number)("count",4,{range:!0,min:0,max:4,step:1});return react_default.a.createElement(react_components.HeroBanner,null,heroes.slice(0,numberDisplayed))}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { CurrentCircled, GradeA, Leaf, Temp } from '@pxblue/icons-mui';\nimport { Hero, HeroBanner } from '@pxblue/react-components';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const inBanner = (): StoryFnReactReturnType => {\n    const heroes = [\n        <Hero\n            key={'hero1'}\n            icon={<GradeA fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n            label={'Healthy'}\n            value={96}\n            units={'/100'}\n        />,\n        <Hero\n            key={'hero2'}\n            icon={<CurrentCircled fontSize={'inherit'} htmlColor={Colors.yellow[500]} />}\n            label={'Load'}\n            value={'90'}\n            units={'%'}\n            fontSize={'normal'}\n        />,\n        <Hero\n            key={'hero3'}\n            icon={<Temp fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n            label={'Temp'}\n            value={55}\n            units={'C'}\n        />,\n        <Hero\n            key={'hero4'}\n            icon={<Leaf fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n            label={'Battery'}\n            value={96}\n            units={'/100'}\n        />,\n    ];\n    const numberDisplayed = number('count', 4, { range: true, min: 0, max: 4, step: 1 });\n    return <HeroBanner>{heroes.slice(0, numberDisplayed)}</HeroBanner>;\n};\n\ninBanner.story = { name: 'within a HeroBanner' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/within-a-HeroBanner.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/hero",__IDS_TO_FRAMEWORKS__:{}});inBanner.story={name:"within a HeroBanner"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withValueUnits",(function(){return withValueUnits})),__webpack_require__.d(__webpack_exports__,"withChannelValueChildren",(function(){return withChannelValueChildren})),__webpack_require__.d(__webpack_exports__,"withIconColors",(function(){return withIconColors})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig})),__webpack_require__.d(__webpack_exports__,"inBanner",(function(){return inBanner}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},heroModule={title:constants.a+"/Hero",component:react_components.Hero,decorators:[utils.e,function(storyFn){return react_default.a.createElement("div",{style:{alignItems:"center",display:"flex",height:"100%"}},storyFn())}],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("Hero.md")}})};__webpack_exports__.default=heroModule},1172:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(17),utils=__webpack_require__(16),List=__webpack_require__(326),ListItem=__webpack_require__(1191),ListItemText=__webpack_require__(1209),dist=__webpack_require__(5),react=__webpack_require__(0),react_default=__webpack_require__.n(react),withBasicUsage=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:Object(dist.text)("headerTitle","Card Title")},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemText } from '@material-ui/core';\nimport { ScoreCard } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\n\nexport const withBasicUsage = (): StoryFnReactReturnType => (\n    <ScoreCard style={{ width: 400, flex: '0 0 auto' }} headerTitle={text('headerTitle', 'Card Title')}>\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithBasicUsage.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}}));withBasicUsage.story={name:constants.d};var colors_dist=__webpack_require__(9),with_custom_header_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),backgroundImage=__webpack_require__(144),withCustomHeader=with_custom_header_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:Object(dist.text)("headerTitle","Card Title"),headerSubtitle:Object(dist.text)("headerSubtitle","Card Subtitle"),headerInfo:Object(dist.text)("headerInfo","4 Devices"),headerColor:Object(dist.color)("headerColor",colors_dist.red[500]),headerFontColor:Object(dist.color)("headerFontColor",colors_dist.white[50]),headerBackgroundImage:backgroundImage},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemText } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { ScoreCard } from '@pxblue/react-components';\nimport { color, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const withCustomHeader = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={text('headerTitle', 'Card Title')}\n        headerSubtitle={text('headerSubtitle', 'Card Subtitle')}\n        headerInfo={text('headerInfo', '4 Devices')}\n        headerColor={color('headerColor', Colors.red[500])}\n        headerFontColor={color('headerFontColor', Colors.white[50])}\n        headerBackgroundImage={backgroundImage}\n    >\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithCustomHeader.story = { name: 'with custom header' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-header.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withCustomHeader.story={name:"with custom header"};var ListItemSecondaryAction=__webpack_require__(1208),ChevronRight=__webpack_require__(526),MoreVert=__webpack_require__(537),Search=__webpack_require__(546),Mail=__webpack_require__(535),Notifications=__webpack_require__(538),ListAlt=__webpack_require__(533),Cloud=__webpack_require__(527),addon_actions_dist=__webpack_require__(19),with_actions_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),with_actions_backgroundImage=__webpack_require__(144),actionRow=react_default.a.createElement(List.a,{style:{cursor:"pointer"}},react_default.a.createElement(ListItem.a,{onClick:Object(addon_actions_dist.action)("view location")},react_default.a.createElement(ListItemText.a,{primary:"View Location"}),react_default.a.createElement(ListItemSecondaryAction.a,null,react_default.a.createElement(ChevronRight.a,null)))),actionItems=[react_default.a.createElement(MoreVert.a,{onClick:Object(addon_actions_dist.action)("clicked more"),key:"morevert"}),react_default.a.createElement(Search.a,{onClick:Object(addon_actions_dist.action)("clicked search"),key:"search"}),react_default.a.createElement(Mail.a,{onClick:Object(addon_actions_dist.action)("clicked mail"),key:"mail"}),react_default.a.createElement(Notifications.a,{onClick:Object(addon_actions_dist.action)("clicked alarms"),key:"notifications"}),react_default.a.createElement(ListAlt.a,{onClick:Object(addon_actions_dist.action)("clicked list"),key:"listalt"}),react_default.a.createElement(Cloud.a,{onClick:Object(addon_actions_dist.action)("clicked cloud"),key:"cloud"})],withActions=with_actions_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:"Substation 3",headerSubtitle:"High Humidity Alarm",headerInfo:"4 Devices",headerColor:colors_dist.red[500],headerFontColor:colors_dist.white[50],headerBackgroundImage:with_actions_backgroundImage,actionItems:actionItems,actionLimit:Object(dist.number)("actionLimit",3,{range:!0,min:1,max:6,step:1}),actionRow:actionRow},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\nimport { ChevronRight, Cloud, ListAlt, Mail, MoreVert, Notifications, Search } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { ScoreCard } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const actionRow = (\n    <List style={{ cursor: 'pointer' }}>\n        <ListItem onClick={action('view location')}>\n            <ListItemText primary=\"View Location\" />\n            <ListItemSecondaryAction>\n                <ChevronRight />\n            </ListItemSecondaryAction>\n        </ListItem>\n    </List>\n);\n\nexport const actionItems = [\n    <MoreVert onClick={action('clicked more')} key={'morevert'} />,\n    <Search onClick={action('clicked search')} key={'search'} />,\n    <Mail onClick={action('clicked mail')} key={'mail'} />,\n    <Notifications onClick={action('clicked alarms')} key={'notifications'} />,\n    <ListAlt onClick={action('clicked list')} key={'listalt'} />,\n    <Cloud onClick={action('clicked cloud')} key={'cloud'} />,\n];\n\nexport const withActions = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={'Substation 3'}\n        headerSubtitle={'High Humidity Alarm'}\n        headerInfo={'4 Devices'}\n        headerColor={Colors.red[500]}\n        headerFontColor={Colors.white[50]}\n        headerBackgroundImage={backgroundImage}\n        actionItems={actionItems}\n        actionLimit={number('actionLimit', 3, { range: true, min: 1, max: 6, step: 1 })}\n        actionRow={actionRow}\n    >\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithActions.story = { name: 'with actions' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-actions.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withActions.story={name:"with actions"};var icons_mui=__webpack_require__(22),with_heroes_addSourceDecorator=(__webpack_require__(12).withSource,__webpack_require__(12).addSource),with_heroes_backgroundImage=__webpack_require__(144),heroes=[react_default.a.createElement(react_components.Hero,{key:"hero1",icon:react_default.a.createElement(icons_mui.Temp,{fontSize:"inherit",htmlColor:colors_dist.black[500]}),label:"Temperature",iconSize:48,iconBackgroundColor:colors_dist.white[50],value:98,units:"°F",fontSize:"normal"}),react_default.a.createElement(react_components.Hero,{key:"hero2",icon:react_default.a.createElement(icons_mui.Moisture,{fontSize:"inherit",htmlColor:colors_dist.blue[300]}),label:"Humidity",value:54,iconBackgroundColor:colors_dist.white[50],units:"%",iconSize:48,fontSize:"normal"})],withHeroes=with_heroes_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:"Substation 3",headerSubtitle:"High Humidity Alarm",headerInfo:"4 Devices",headerColor:colors_dist.red[500],headerFontColor:colors_dist.white[50],headerBackgroundImage:with_heroes_backgroundImage,actionItems:[react_default.a.createElement(MoreVert.a,{onClick:Object(addon_actions_dist.action)("clicked more"),key:"morevert"})],actionRow:actionRow,badge:react_default.a.createElement(react_components.HeroBanner,null,heroes.slice(0,Object(dist.number)("Number of Heroes",1,{range:!0,min:0,max:2,step:1}))),badgeOffset:0},react_default.a.createElement(List.a,null,react_default.a.createElement(ListItem.a,null,react_default.a.createElement(ListItemText.a,{primary:"Body Content"}))))}),{__STORY__:"import { List, ListItem, ListItemText } from '@material-ui/core';\nimport { MoreVert } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { Moisture as Humidity, Temp } from '@pxblue/icons-mui';\nimport { Hero, HeroBanner, ScoreCard } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { actionRow } from './with-actions';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const heroes: JSX.Element[] = [\n    <Hero\n        key={'hero1'}\n        icon={<Temp fontSize={'inherit'} htmlColor={Colors.black[500]} />}\n        label={'Temperature'}\n        iconSize={48}\n        iconBackgroundColor={Colors.white[50]}\n        value={98}\n        units={'°F'}\n        fontSize={'normal'}\n    />,\n    <Hero\n        key={'hero2'}\n        icon={<Humidity fontSize={'inherit'} htmlColor={Colors.blue[300]} />}\n        label={'Humidity'}\n        value={54}\n        iconBackgroundColor={Colors.white[50]}\n        units={'%'}\n        iconSize={48}\n        fontSize={'normal'}\n    />,\n];\n\nexport const withHeroes = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={'Substation 3'}\n        headerSubtitle={'High Humidity Alarm'}\n        headerInfo={'4 Devices'}\n        headerColor={Colors.red[500]}\n        headerFontColor={Colors.white[50]}\n        headerBackgroundImage={backgroundImage}\n        actionItems={[<MoreVert onClick={action('clicked more')} key={'morevert'} />]}\n        actionRow={actionRow}\n        badge={\n            <HeroBanner>\n                {heroes.slice(0, number('Number of Heroes', 1, { range: true, min: 0, max: 2, step: 1 }))}\n            </HeroBanner>\n        }\n        badgeOffset={0}\n    >\n        <List>\n            <ListItem>\n                <ListItemText primary={'Body Content'} />\n            </ListItem>\n        </List>\n    </ScoreCard>\n);\n\nwithHeroes.story = { name: 'with heroes' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-heroes.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withHeroes.story={name:"with heroes"};__webpack_require__(12).withSource;var with_score_badge_addSourceDecorator=__webpack_require__(12).addSource,with_score_badge_backgroundImage=__webpack_require__(144),withScoreBadge=with_score_badge_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:"Substation 3",headerSubtitle:"Normal",headerInfo:"4 Devices",headerFontColor:colors_dist.white[50],headerBackgroundImage:with_score_badge_backgroundImage,actionItems:[react_default.a.createElement(MoreVert.a,{onClick:Object(addon_actions_dist.action)("clicked more"),key:"morevert"})],actionRow:react_default.a.createElement(List.a,{style:{cursor:"pointer"}},react_default.a.createElement(ListItem.a,{onClick:Object(addon_actions_dist.action)("view location")},react_default.a.createElement(ListItemText.a,{primary:"View Location"}),react_default.a.createElement(ListItemSecondaryAction.a,{style:{display:"flex"}},react_default.a.createElement(ChevronRight.a,null)))),badge:react_default.a.createElement(react_components.HeroBanner,null,react_default.a.createElement(react_components.Hero,{icon:react_default.a.createElement(icons_mui.GradeA,{fontSize:"inherit",htmlColor:colors_dist.green[500]}),label:"Grade",iconSize:72,iconBackgroundColor:colors_dist.white[50],value:"98",units:"/100",fontSize:"normal"})),badgeOffset:Object(dist.number)("badgeOffset",-52)},react_default.a.createElement(List.a,{style:{padding:"16px 0"}},react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"0 Alarms",icon:react_default.a.createElement(Notifications.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},fontColor:colors_dist.blue[500],iconColor:colors_dist.blue[500],title:"1 Event",icon:react_default.a.createElement(ListAlt.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"Online",icon:react_default.a.createElement(Cloud.a,{color:"inherit"})})))}),{__STORY__:"import { List, ListItem, ListItemSecondaryAction, ListItemText } from '@material-ui/core';\nimport { ChevronRight, Cloud, ListAlt, MoreVert, Notifications } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { GradeA } from '@pxblue/icons-mui';\nimport { Hero, HeroBanner, InfoListItem, ScoreCard } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const withScoreBadge = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={'Substation 3'}\n        headerSubtitle={'Normal'}\n        headerInfo={'4 Devices'}\n        headerFontColor={Colors.white[50]}\n        headerBackgroundImage={backgroundImage}\n        actionItems={[<MoreVert onClick={action('clicked more')} key={'morevert'} />]}\n        actionRow={\n            <List style={{ cursor: 'pointer' }}>\n                <ListItem onClick={action('view location')}>\n                    <ListItemText primary=\"View Location\" />\n                    <ListItemSecondaryAction style={{ display: 'flex' }}>\n                        <ChevronRight />\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        }\n        badge={\n            <HeroBanner>\n                <Hero\n                    icon={<GradeA fontSize={'inherit'} htmlColor={Colors.green[500]} />}\n                    label={'Grade'}\n                    iconSize={72}\n                    iconBackgroundColor={Colors.white[50]}\n                    value={'98'}\n                    units={'/100'}\n                    fontSize={'normal'}\n                />\n            </HeroBanner>\n        }\n        badgeOffset={number('badgeOffset', -52)}\n    >\n        <List style={{ padding: '16px 0' }}>\n            <InfoListItem dense style={{ height: 36 }} title={'0 Alarms'} icon={<Notifications color={'inherit'} />} />\n            <InfoListItem\n                dense\n                style={{ height: 36 }}\n                fontColor={Colors.blue[500]}\n                iconColor={Colors.blue[500]}\n                title={'1 Event'}\n                icon={<ListAlt color={'inherit'} />}\n            />\n            <InfoListItem dense style={{ height: 36 }} title={'Online'} icon={<Cloud color={'inherit'} />} />\n        </List>\n    </ScoreCard>\n);\n\nwithScoreBadge.story = { name: 'with score badge' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-score-badge.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withScoreBadge.story={name:"with score badge"};__webpack_require__(12).withSource;var with_full_config_addSourceDecorator=__webpack_require__(12).addSource,with_full_config_backgroundImage=__webpack_require__(144),withFullConfig=with_full_config_addSourceDecorator((function(){return react_default.a.createElement(react_components.ScoreCard,{style:{width:400,flex:"0 0 auto"},headerTitle:Object(dist.text)("headerTitle","Substation 3"),headerSubtitle:Object(dist.text)("headerSubtitle","High Humidity Alarm"),headerInfo:Object(dist.text)("headerInfo","4 Devices"),headerColor:Object(dist.color)("headerColor",colors_dist.red[500]),headerFontColor:Object(dist.color)("headerFontColor",colors_dist.white[50]),headerBackgroundImage:Object(dist.boolean)("headerBackgroundImage",!0)?with_full_config_backgroundImage:void 0,actionLimit:Object(dist.number)("actionLimit",3,{range:!0,min:1,max:6,step:1}),actionItems:actionItems,actionRow:actionRow,badge:react_default.a.createElement(react_components.HeroBanner,null,heroes.slice(0,Object(dist.number)("Number of Heroes",1,{range:!0,min:0,max:2,step:1}))),badgeOffset:Object(dist.number)("badgeOffset",-40)},react_default.a.createElement(List.a,{style:{padding:"16px 0"}},react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"0 Alarms",icon:react_default.a.createElement(Notifications.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},fontColor:colors_dist.blue[500],iconColor:colors_dist.blue[500],title:"1 Event",icon:react_default.a.createElement(ListAlt.a,{color:"inherit"})}),react_default.a.createElement(react_components.InfoListItem,{dense:!0,style:{height:36},title:"Online",icon:react_default.a.createElement(Cloud.a,{color:"inherit"})})))}),{__STORY__:"import { List } from '@material-ui/core';\nimport { Cloud, ListAlt, Notifications } from '@material-ui/icons';\nimport * as Colors from '@pxblue/colors';\nimport { HeroBanner, InfoListItem, ScoreCard } from '@pxblue/react-components';\nimport { boolean, color, number, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\nimport { actionItems, actionRow } from './with-actions';\nimport { heroes } from './with-heroes';\n\nconst backgroundImage = require('../../assets/topology_40.png');\n\nexport const withFullConfig = (): StoryFnReactReturnType => (\n    <ScoreCard\n        style={{ width: 400, flex: '0 0 auto' }}\n        headerTitle={text('headerTitle', 'Substation 3')}\n        headerSubtitle={text('headerSubtitle', 'High Humidity Alarm')}\n        headerInfo={text('headerInfo', '4 Devices')}\n        headerColor={color('headerColor', Colors.red[500])}\n        headerFontColor={color('headerFontColor', Colors.white[50])}\n        headerBackgroundImage={boolean('headerBackgroundImage', true) ? backgroundImage : undefined}\n        actionLimit={number('actionLimit', 3, { range: true, min: 1, max: 6, step: 1 })}\n        actionItems={actionItems}\n        actionRow={actionRow}\n        badge={\n            <HeroBanner>\n                {heroes.slice(0, number('Number of Heroes', 1, { range: true, min: 0, max: 2, step: 1 }))}\n            </HeroBanner>\n        }\n        badgeOffset={number('badgeOffset', -40)}\n    >\n        <List style={{ padding: '16px 0' }}>\n            <InfoListItem dense style={{ height: 36 }} title={'0 Alarms'} icon={<Notifications color={'inherit'} />} />\n            <InfoListItem\n                dense\n                style={{ height: 36 }}\n                fontColor={Colors.blue[500]}\n                iconColor={Colors.blue[500]}\n                title={'1 Event'}\n                icon={<ListAlt color={'inherit'} />}\n            />\n            <InfoListItem dense style={{ height: 36 }} title={'Online'} icon={<Cloud color={'inherit'} />} />\n        </List>\n    </ScoreCard>\n);\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/scorecard",__IDS_TO_FRAMEWORKS__:{}});withFullConfig.story={name:constants.c},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withCustomHeader",(function(){return withCustomHeader})),__webpack_require__.d(__webpack_exports__,"withActions",(function(){return withActions})),__webpack_require__.d(__webpack_exports__,"withHeroes",(function(){return withHeroes})),__webpack_require__.d(__webpack_exports__,"withScoreBadge",(function(){return withScoreBadge})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},scorecardModule={title:constants.a+"/Scorecard",component:react_components.ScoreCard,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("ScoreCard.md")}})};__webpack_exports__.default=scorecardModule},1173:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(17),utils=__webpack_require__(16),dist=__webpack_require__(5),react=__webpack_require__(0),react_default=__webpack_require__.n(react),withBasicUsage=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:Object(dist.text)("value",Object(dist.text)("value","123"))})}),{__STORY__:"import { ChannelValue } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\n\nexport const withBasicUsage = (): StoryFnReactReturnType => (\n    <ChannelValue value={text('value', text('value', '123'))} />\n);\n\nwithBasicUsage.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}}));withBasicUsage.story={name:constants.d};__webpack_require__(12).withSource;var withUnits=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:"123",units:Object(dist.text)("units","hz")})}),{__STORY__:"import { ChannelValue } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withUnits = (): StoryFnReactReturnType => <ChannelValue value={'123'} units={text('units', 'hz')} />;\n\nwithUnits.story = { name: 'with units' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-units.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}});withUnits.story={name:"with units"};var TrendingUp=__webpack_require__(90),TrendingUp_default=__webpack_require__.n(TrendingUp),colors_dist=__webpack_require__(9),withIcon=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:"123",units:"hz",icon:react_default.a.createElement(TrendingUp_default.a,{htmlColor:Object(dist.color)("icon.htmlColor",colors_dist.red[500])})})}),{__STORY__:"import Trend from '@material-ui/icons/TrendingUp';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue } from '@pxblue/react-components';\nimport { color } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withIcon = (): StoryFnReactReturnType => (\n    <ChannelValue value={'123'} units={'hz'} icon={<Trend htmlColor={color('icon.htmlColor', Colors.red[500])} />} />\n);\n\nwithIcon.story = { name: 'with icon' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-icon.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}}));withIcon.story={name:"with icon"};__webpack_require__(12).withSource;var withFontSize=(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ChannelValue,{value:"123",units:"hz",icon:react_default.a.createElement(TrendingUp_default.a,{htmlColor:colors_dist.red[500]}),fontSize:Object(dist.number)("fontSize",30)})}),{__STORY__:"import Trend from '@material-ui/icons/TrendingUp';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue } from '@pxblue/react-components';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withFontSize = (): StoryFnReactReturnType => (\n    <ChannelValue\n        value={'123'}\n        units={'hz'}\n        icon={<Trend htmlColor={Colors.red[500]} />}\n        fontSize={number('fontSize', 30)}\n    />\n);\n\nwithFontSize.story = { name: 'with fontSize' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-fontSize.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}});withFontSize.story={name:"with fontSize"};__webpack_require__(12).withSource;var withFullConfig=(0,__webpack_require__(12).addSource)((function(){var value=Object(dist.text)("value","123"),units=Object(dist.text)("units","hz"),textColor=Object(dist.color)("color",colors_dist.red[500]),iconColor=Object(dist.color)("icon.htmlColor",colors_dist.black[500]),icon=Object(dist.boolean)("Show Icon",!0)?react_default.a.createElement(TrendingUp_default.a,{htmlColor:iconColor}):void 0,fontSize=Object(dist.number)("fontSize",30),prefix=Object(dist.boolean)("prefix",!1);return react_default.a.createElement(react_components.ChannelValue,{value:value,units:units,color:textColor,icon:icon,fontSize:fontSize,prefix:prefix})}),{__STORY__:"import Trend from '@material-ui/icons/TrendingUp';\nimport * as Colors from '@pxblue/colors';\nimport { ChannelValue } from '@pxblue/react-components';\nimport { boolean, color, number, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\n\nexport const withFullConfig = (): StoryFnReactReturnType => {\n    const value = text('value', '123');\n    const units = text('units', 'hz');\n    const textColor = color('color', Colors.red[500]);\n    const iconColor = color('icon.htmlColor', Colors.black[500]);\n    const icon = boolean('Show Icon', true) ? <Trend htmlColor={iconColor} /> : undefined;\n    const fontSize = number('fontSize', 30);\n    const prefix = boolean('prefix', false);\n\n    return (\n        <ChannelValue value={value} units={units} color={textColor} icon={icon} fontSize={fontSize} prefix={prefix} />\n    );\n};\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/channel-value",__IDS_TO_FRAMEWORKS__:{}});withFullConfig.story={name:constants.c},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withUnits",(function(){return withUnits})),__webpack_require__.d(__webpack_exports__,"withIcon",(function(){return withIcon})),__webpack_require__.d(__webpack_exports__,"withFontSize",(function(){return withFontSize})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},channelValueModule={title:constants.a+"/Channel Value",component:react_components.ChannelValue,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("ChannelValue.md")}})};__webpack_exports__.default=channelValueModule},1174:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(17),utils=__webpack_require__(16),NotListedLocation=__webpack_require__(540),dist=__webpack_require__(5),react=__webpack_require__(0),react_default=__webpack_require__.n(react),withBasicUsage=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.EmptyState,{icon:react_default.a.createElement(NotListedLocation.a,{fontSize:"inherit",style:{marginBottom:"0"}}),title:Object(dist.text)("title","Location Unknown")})}),{__STORY__:"import { NotListedLocation } from '@material-ui/icons';\nimport { EmptyState } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\n\nexport const withBasicUsage = (): StoryFnReactReturnType => (\n    <EmptyState\n        icon={<NotListedLocation fontSize={'inherit'} style={{ marginBottom: '0' }} />}\n        title={text('title', 'Location Unknown')}\n    />\n);\n\nwithBasicUsage.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/empty-state",__IDS_TO_FRAMEWORKS__:{}}));withBasicUsage.story={name:constants.d};var LocationOff=__webpack_require__(534),withDescription=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.EmptyState,{icon:react_default.a.createElement(LocationOff.a,{fontSize:"inherit",style:{marginBottom:"0"}}),title:Object(dist.text)("title","Location Services Disabled"),description:Object(dist.text)("description","Enable Location Services via Settings to receive GPS information")})}),{__STORY__:"import { LocationOff } from '@material-ui/icons';\nimport { EmptyState } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withDescription = (): StoryFnReactReturnType => (\n    <EmptyState\n        icon={<LocationOff fontSize={'inherit'} style={{ marginBottom: '0' }} />}\n        title={text('title', 'Location Services Disabled')}\n        description={text('description', 'Enable Location Services via Settings to receive GPS information')}\n    />\n);\n\nwithDescription.story = { name: 'with description' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-description.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/empty-state",__IDS_TO_FRAMEWORKS__:{}}));withDescription.story={name:"with description"};var Button=__webpack_require__(1183),AddCircleOutlined=__webpack_require__(569),AddCircleOutlined_default=__webpack_require__.n(AddCircleOutlined),Devices=__webpack_require__(568),Devices_default=__webpack_require__.n(Devices),addon_actions_dist=__webpack_require__(19),withActions=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.EmptyState,{icon:react_default.a.createElement(Devices_default.a,{fontSize:"inherit"}),title:"No Devices",description:"Not a single one",actions:react_default.a.createElement(Button.a,{variant:"contained",color:"primary",style:{margin:"10px"},onClick:Object(addon_actions_dist.action)("Button Clicked")},react_default.a.createElement(AddCircleOutlined_default.a,{style:{marginRight:"5px"}}),Object(dist.text)("Action Text","Add Device"))})}),{__STORY__:"import Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/AddCircleOutlined';\n\nimport DevicesIcon from '@material-ui/icons/Devices';\nimport { EmptyState } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withActions = (): StoryFnReactReturnType => (\n    <EmptyState\n        icon={<DevicesIcon fontSize={'inherit'} />}\n        title={'No Devices'}\n        description={'Not a single one'}\n        actions={\n            <Button variant=\"contained\" color=\"primary\" style={{ margin: '10px' }} onClick={action('Button Clicked')}>\n                <AddIcon style={{ marginRight: '5px' }} />\n                {text('Action Text', 'Add Device')}\n            </Button>\n        }\n    />\n);\n\nwithActions.story = { name: 'with actions' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-actions.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/empty-state",__IDS_TO_FRAMEWORKS__:{}}));withActions.story={name:"with actions"};var TrendingUp=__webpack_require__(90),TrendingUp_default=__webpack_require__.n(TrendingUp),withFullConfig=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){var title=Object(dist.text)("title","Predictions Page Coming Soon"),description=Object(dist.text)("description","A fully redesigned predictions page is coming in our next release!"),actionText=Object(dist.text)("Action Text","Learn More");return react_default.a.createElement(react_components.EmptyState,{icon:react_default.a.createElement(TrendingUp_default.a,{fontSize:"inherit",style:{marginBottom:"0"}}),title:title,description:description,actions:react_default.a.createElement(Button.a,{variant:"outlined",size:"small",color:"primary",style:{margin:"10px"},onClick:Object(addon_actions_dist.action)("Button Clicked")},actionText)})}),{__STORY__:"import Button from '@material-ui/core/Button';\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\nimport { EmptyState } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\n\nexport const withFullConfig = (): StoryFnReactReturnType => {\n    const title = text('title', 'Predictions Page Coming Soon');\n    const description = text('description', 'A fully redesigned predictions page is coming in our next release!');\n    const actionText = text('Action Text', 'Learn More');\n    return (\n        <EmptyState\n            icon={<TrendingUpIcon fontSize={'inherit'} style={{ marginBottom: '0' }} />}\n            title={title}\n            description={description}\n            actions={\n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    color=\"primary\"\n                    style={{ margin: '10px' }}\n                    onClick={action('Button Clicked')}\n                >\n                    {actionText}\n                </Button>\n            }\n        />\n    );\n};\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/empty-state",__IDS_TO_FRAMEWORKS__:{}}));withFullConfig.story={name:constants.c},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withDescription",(function(){return withDescription})),__webpack_require__.d(__webpack_exports__,"withActions",(function(){return withActions})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},emptyStateModule={title:constants.a+"/Empty State",component:react_components.EmptyState,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("EmptyState.md")}})};__webpack_exports__.default=emptyStateModule},1175:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(17),utils=__webpack_require__(16),dist=__webpack_require__(5),react=__webpack_require__(0),react_default=__webpack_require__.n(react),withBasicUsage=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ListItemTag,{label:Object(dist.text)("label","active")})}),{__STORY__:"import { ListItemTag } from '@pxblue/react-components';\nimport { text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_MIN_PROPS_STORY_NAME } from '../../src/constants';\n\nexport const withBasicUsage = (): StoryFnReactReturnType => <ListItemTag label={text('label', 'active')} />;\n\nwithBasicUsage.story = { name: WITH_MIN_PROPS_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-basic-usage.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/list-item-tag",__IDS_TO_FRAMEWORKS__:{}}));withBasicUsage.story={name:constants.d};var colors_dist=__webpack_require__(9),withCustomColors=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ListItemTag,{label:Object(dist.text)("label","active"),backgroundColor:Object(dist.color)("backgroundColor",colors_dist.gold[500]),fontColor:Object(dist.color)("fontColor",colors_dist.black[500])})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { ListItemTag } from '@pxblue/react-components';\nimport { color, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const withCustomColors = (): StoryFnReactReturnType => (\n    <ListItemTag\n        label={text('label', 'active')}\n        backgroundColor={color('backgroundColor', Colors.gold['500'])}\n        fontColor={color('fontColor', Colors.black['500'])}\n    />\n);\n\nwithCustomColors.story = { name: 'with custom colors' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-custom-colors.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/list-item-tag",__IDS_TO_FRAMEWORKS__:{}}));withCustomColors.story={name:"with custom colors"};var addon_actions_dist=__webpack_require__(19),withFullConfig=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement(react_components.ListItemTag,{label:Object(dist.text)("label","clickable"),backgroundColor:Object(dist.color)("backgroundColor",colors_dist.green[700]),fontColor:Object(dist.color)("fontColor",colors_dist.white[100]),onClick:Object(addon_actions_dist.action)("ListItemTag: onClick"),variant:Object(dist.select)("variant",["h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","button","overline","srOnly","inherit"],"overline"),style:{padding:Object(dist.text)("style.padding","0 4px"),width:Object(dist.text)("style.width","initial"),boxSizing:"border-box"},paragraph:Object(dist.boolean)("paragraph",!1),noWrap:Object(dist.boolean)("noWrap",!0)})}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { ListItemTag } from '@pxblue/react-components';\nimport { action } from '@storybook/addon-actions';\nimport { boolean, color, select, text } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { WITH_FULL_CONFIG_STORY_NAME } from '../../src/constants';\n\nexport const withFullConfig = (): StoryFnReactReturnType => (\n    <ListItemTag\n        label={text('label', 'clickable')}\n        backgroundColor={color('backgroundColor', Colors.green['700'])}\n        fontColor={color('fontColor', Colors.white['100'])}\n        onClick={action('ListItemTag: onClick')}\n        variant={select(\n            'variant',\n            [\n                'h1',\n                'h2',\n                'h3',\n                'h4',\n                'h5',\n                'h6',\n                'subtitle1',\n                'subtitle2',\n                'body1',\n                'body2',\n                'caption',\n                'button',\n                'overline',\n                'srOnly',\n                'inherit',\n            ],\n            'overline'\n        )}\n        style={{\n            padding: text('style.padding', '0 4px'),\n            width: text('style.width', 'initial'),\n            boxSizing: 'border-box',\n        }}\n        paragraph={boolean('paragraph', false)}\n        noWrap={boolean('noWrap', true)}\n    />\n);\n\nwithFullConfig.story = { name: WITH_FULL_CONFIG_STORY_NAME };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/with-full-config.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/list-item-tag",__IDS_TO_FRAMEWORKS__:{}}));withFullConfig.story={name:constants.c};var BrightnessMedium=__webpack_require__(525),inInfoListItem=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){return react_default.a.createElement("div",{style:{width:"80%",background:colors_dist.white[50]}},react_default.a.createElement(react_components.InfoListItem,{icon:react_default.a.createElement(BrightnessMedium.a,null),title:"@pxblue/react-themes",subtitle:"Light and dark themes supported",rightComponent:react_default.a.createElement("div",{style:{width:180,display:"flex",justifyContent:"space-between"}},react_default.a.createElement(react_components.ListItemTag,{label:"Build Passing",backgroundColor:colors_dist.green[500]}),react_default.a.createElement(react_components.ListItemTag,{label:"5 Bugs",backgroundColor:colors_dist.yellow[500]}))}))}),{__STORY__:"import * as Colors from '@pxblue/colors';\nimport { InfoListItem, ListItemTag } from '@pxblue/react-components';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport { BrightnessMedium } from '@material-ui/icons';\n\nexport const inInfoListItem = (): StoryFnReactReturnType => (\n    <div style={{ width: '80%', background: Colors.white[50] }}>\n        <InfoListItem\n            icon={<BrightnessMedium />}\n            title={'@pxblue/react-themes'}\n            subtitle={'Light and dark themes supported'}\n            rightComponent={\n                <div style={{ width: 180, display: 'flex', justifyContent: 'space-between' }}>\n                    <ListItemTag label={'Build Passing'} backgroundColor={Colors.green['500']} />\n                    <ListItemTag label={'5 Bugs'} backgroundColor={Colors.yellow['500']} />\n                </div>\n            }\n        />\n    </div>\n);\n\ninInfoListItem.story = { name: 'within an InfoListItem' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/within-InfoListItem.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/list-item-tag",__IDS_TO_FRAMEWORKS__:{}}));inInfoListItem.story={name:"within an InfoListItem"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"withBasicUsage",(function(){return withBasicUsage})),__webpack_require__.d(__webpack_exports__,"withCustomColors",(function(){return withCustomColors})),__webpack_require__.d(__webpack_exports__,"withFullConfig",(function(){return withFullConfig})),__webpack_require__.d(__webpack_exports__,"inInfoListItem",(function(){return inInfoListItem}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},listItemTagModule={title:constants.a+"/List Item Tag",component:react_components.ListItemTag,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("ListItemTag.md")}})};__webpack_exports__.default=listItemTagModule},1177:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var react_components=__webpack_require__(8),constants=__webpack_require__(17),utils=__webpack_require__(16),Typography=__webpack_require__(83),dist=__webpack_require__(9),addon_knobs_dist=__webpack_require__(5),react=__webpack_require__(0),react_default=__webpack_require__.n(react),flexLayout=(__webpack_require__(12).withSource,(0,__webpack_require__(12).addSource)((function(){var flex1=Object(addon_knobs_dist.number)("Item 1 Flex",1,{range:!0,min:1,max:5,step:1}),flex2=Object(addon_knobs_dist.number)("Item 2 Flex",1,{range:!0,min:1,max:5,step:1}),flex3=Object(addon_knobs_dist.number)("Item 3 Flex",1,{range:!0,min:1,max:5,step:1});return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(Typography.a,null,"Horizontal"),react_default.a.createElement("div",{style:{width:300,height:50,display:"flex",flexDirection:"row",alignItems:"stretch"}},react_default.a.createElement(react_components.Spacer,{flex:flex1,style:{background:dist.blue[300]}},"1"),react_default.a.createElement(react_components.Spacer,{flex:flex2,style:{background:dist.yellow[300]}},"2"),react_default.a.createElement(react_components.Spacer,{flex:flex3,style:{background:dist.red[300]}},"3")),react_default.a.createElement(Typography.a,{style:{marginTop:20}},"Vertical"),react_default.a.createElement("div",{style:{width:300,height:150,display:"flex",flexDirection:"column",alignItems:"stretch"}},react_default.a.createElement(react_components.Spacer,{flex:flex1,style:{background:dist.blue[300]}},"1"),react_default.a.createElement(react_components.Spacer,{flex:flex2,style:{background:dist.yellow[300]}},"2"),react_default.a.createElement(react_components.Spacer,{flex:flex3,style:{background:dist.red[300]}},"3")))}),{__STORY__:"import { Typography } from '@material-ui/core';\nimport * as Colors from '@pxblue/colors';\nimport { Spacer } from '@pxblue/react-components';\nimport { number } from '@storybook/addon-knobs';\nimport { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\n\nexport const flexLayout = (): StoryFnReactReturnType => {\n    const flex1 = number('Item 1 Flex', 1, { range: true, min: 1, max: 5, step: 1 });\n    const flex2 = number('Item 2 Flex', 1, { range: true, min: 1, max: 5, step: 1 });\n    const flex3 = number('Item 3 Flex', 1, { range: true, min: 1, max: 5, step: 1 });\n\n    return (\n        <>\n            <Typography>Horizontal</Typography>\n            <div style={{ width: 300, height: 50, display: 'flex', flexDirection: 'row', alignItems: 'stretch' }}>\n                <Spacer flex={flex1} style={{ background: Colors.blue[300] }}>\n                    1\n                </Spacer>\n                <Spacer flex={flex2} style={{ background: Colors.yellow[300] }}>\n                    2\n                </Spacer>\n                <Spacer flex={flex3} style={{ background: Colors.red[300] }}>\n                    3\n                </Spacer>\n            </div>\n            <Typography style={{ marginTop: 20 }}>Vertical</Typography>\n            <div style={{ width: 300, height: 150, display: 'flex', flexDirection: 'column', alignItems: 'stretch' }}>\n                <Spacer flex={flex1} style={{ background: Colors.blue[300] }}>\n                    1\n                </Spacer>\n                <Spacer flex={flex2} style={{ background: Colors.yellow[300] }}>\n                    2\n                </Spacer>\n                <Spacer flex={flex3} style={{ background: Colors.red[300] }}>\n                    3\n                </Spacer>\n            </div>\n        </>\n    );\n};\n\nflexLayout.story = { name: 'with flex layout' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/flex-layout.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/spacer",__IDS_TO_FRAMEWORKS__:{}}));flexLayout.story={name:"with flex layout"};__webpack_require__(12).withSource;var staticLayout=(0,__webpack_require__(12).addSource)((function(){var size1=Object(addon_knobs_dist.number)("Item 1 Size (px)",60,{range:!0,min:20,max:100,step:20}),size2=Object(addon_knobs_dist.number)("Item 2 Size (px)",60,{range:!0,min:20,max:100,step:20}),size3=Object(addon_knobs_dist.number)("Item 3 Size (px)",60,{range:!0,min:20,max:100,step:20});return react_default.a.createElement(react_default.a.Fragment,null,react_default.a.createElement(Typography.a,null,"Horizontal"),react_default.a.createElement("div",{style:{width:300,height:50,display:"inline"}},react_default.a.createElement(react_components.Spacer,{width:size1,style:{background:dist.blue[300],display:"inline-block"}},"1"),react_default.a.createElement(react_components.Spacer,{width:size2,style:{background:dist.yellow[300],display:"inline-block"}},"2"),react_default.a.createElement(react_components.Spacer,{width:size3,style:{background:dist.red[300],display:"inline-block"}},"3")),react_default.a.createElement(Typography.a,{style:{marginTop:20}},"Vertical"),react_default.a.createElement("div",{style:{width:300,height:300}},react_default.a.createElement(react_components.Spacer,{height:size1,style:{background:dist.blue[300]}},"1"),react_default.a.createElement(react_components.Spacer,{height:size2,style:{background:dist.yellow[300]}},"2"),react_default.a.createElement(react_components.Spacer,{height:size3,style:{background:dist.red[300]}},"3")))}),{__STORY__:"import { StoryFnReactReturnType } from '@storybook/react/dist/client/preview/types';\nimport React from 'react';\nimport * as Colors from '@pxblue/colors';\nimport { Spacer } from '@pxblue/react-components';\nimport { Typography } from '@material-ui/core';\nimport { number } from '@storybook/addon-knobs';\n\nexport const staticLayout = (): StoryFnReactReturnType => {\n    const size1 = number('Item 1 Size (px)', 60, { range: true, min: 20, max: 100, step: 20 });\n    const size2 = number('Item 2 Size (px)', 60, { range: true, min: 20, max: 100, step: 20 });\n    const size3 = number('Item 3 Size (px)', 60, { range: true, min: 20, max: 100, step: 20 });\n\n    return (\n        <>\n            <Typography>Horizontal</Typography>\n            <div style={{ width: 300, height: 50, display: 'inline' }}>\n                <Spacer width={size1} style={{ background: Colors.blue[300], display: 'inline-block' }}>\n                    1\n                </Spacer>\n                <Spacer width={size2} style={{ background: Colors.yellow[300], display: 'inline-block' }}>\n                    2\n                </Spacer>\n                <Spacer width={size3} style={{ background: Colors.red[300], display: 'inline-block' }}>\n                    3\n                </Spacer>\n            </div>\n            <Typography style={{ marginTop: 20 }}>Vertical</Typography>\n            <div style={{ width: 300, height: 300 }}>\n                <Spacer height={size1} style={{ background: Colors.blue[300] }}>\n                    1\n                </Spacer>\n                <Spacer height={size2} style={{ background: Colors.yellow[300] }}>\n                    2\n                </Spacer>\n                <Spacer height={size3} style={{ background: Colors.red[300] }}>\n                    3\n                </Spacer>\n            </div>\n        </>\n    );\n};\n\nstaticLayout.story = { name: 'with static layout' };\n",__ADDS_MAP__:{},__MAIN_FILE_LOCATION__:"/static-layout.tsx",__MODULE_DEPENDENCIES__:[],__LOCAL_DEPENDENCIES__:{},__SOURCE_PREFIX__:"/home/circleci/project/demos/storybook/stories/spacer",__IDS_TO_FRAMEWORKS__:{}});staticLayout.story={name:"with static layout"},__webpack_require__.d(__webpack_exports__,"getReadMeStory",(function(){return utils.b})),__webpack_require__.d(__webpack_exports__,"flexLayout",(function(){return flexLayout})),__webpack_require__.d(__webpack_exports__,"staticLayout",(function(){return staticLayout}));var __assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},spacerModule={title:constants.a+"/Spacer",component:react_components.Spacer,decorators:[utils.e],parameters:__assign(__assign({},utils.d),{notes:{markdown:Object(utils.a)("Spacer.md")}})};__webpack_exports__.default=spacerModule},144:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/topology_40.a5d5a664.png"},16:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return hideTopBanner})),__webpack_require__.d(__webpack_exports__,"e",(function(){return storyWrapper})),__webpack_require__.d(__webpack_exports__,"b",(function(){return getReadMeStory})),__webpack_require__.d(__webpack_exports__,"d",(function(){return storyParams})),__webpack_require__.d(__webpack_exports__,"a",(function(){return getReadMe}));var banner,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_constants__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(17),getBanner=function getBanner(){return banner||(banner=window.top.document.getElementsByClassName("simplebar-content")[1]),banner},setBannerStyle=function setBannerStyle(display){return getBanner().setAttribute("style","display: ".concat(display))},hideTopBanner=function hideTopBanner(){return setBannerStyle("none")},prevUrl="",storyWrapper=function storyWrapper(storyFn){var currentUrl=window.top.location.href;return function showTopBanner(){setBannerStyle("unset")}(),function updateTitle(){setTimeout((function(){window.top.document.title="PX Blue | React Components"}),10);var link=window.top.document.querySelector("link[rel*='icon']")||document.createElement("link");link.type="image/x-icon",link.rel="shortcut icon",link.href="./pxblue.png",window.top.document.getElementsByTagName("head")[0].appendChild(link)}(),currentUrl.replace("/story/","").replace("/info/","")!==prevUrl.replace("/story/","").replace("/info/","")&&!currentUrl.includes("get-read-me")&&currentUrl.includes("/info/")&&function selectCanvasTab(){window.top.history.replaceState(null,"",window.top.location.href.replace("/info/","/story/")),getBanner().children[0].children[0].children[0].children[0].click()}(),prevUrl=currentUrl,react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,storyFn())},getReadMeStory=function getReadMeStory(){return hideTopBanner(),window.top.location.href.includes("/story/")&&function selectNotesTab(){window.top.history.replaceState(null,"",window.top.location.href.replace("/story/","/info/")),getBanner().children[0].children[0].children[0].children[1].click()}(),react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null)};getReadMeStory.story={name:_constants__WEBPACK_IMPORTED_MODULE_1__.b};var storyParams={options:{showPanel:!0},notes:{}},getReadMe=function getReadMe(name){var md=__webpack_require__(930)("./".concat(name));return md.default=md.default.replace(/\(.\/.*md\)/g,(function(substring){var root=window.top.location.href.split("/?")[0],path="?path=/info/".concat(_constants__WEBPACK_IMPORTED_MODULE_1__.a.toLowerCase()),dashed=substring.split("/")[1].split(".")[0].replace(/\.?([A-Z])/g,(function(x){return"-".concat(x.toLowerCase())}));return"(".concat(root).concat(path).concat(dashed,"--get-read-me-story)")})),md}},17:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return COMPONENT_SECTION_NAME})),__webpack_require__.d(__webpack_exports__,"b",(function(){return README_STORY_NAME})),__webpack_require__.d(__webpack_exports__,"d",(function(){return WITH_MIN_PROPS_STORY_NAME})),__webpack_require__.d(__webpack_exports__,"c",(function(){return WITH_FULL_CONFIG_STORY_NAME}));var COMPONENT_SECTION_NAME="Components",README_STORY_NAME="README",WITH_MIN_PROPS_STORY_NAME="with basic usage",WITH_FULL_CONFIG_STORY_NAME="with full config"},186:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/EatonLogo.bb857d1a.svg"},231:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"appliedTheme",(function(){return appliedTheme}));var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__),_storybook_react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(115),_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(5),_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(189),_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(1179),_pxblue_react_themes__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(560),_pxblue_colors__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(9),_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__=(__webpack_require__(916),__webpack_require__(190));_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a.brandTitle="PX Blue React Component Library",_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a.brandImage=__webpack_require__(922),_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a.brandUrl="https://pxblue.github.io",Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addParameters)({name:"PXBlue",notes:{markdown:"<div> </div>"},viewport:{viewports:{iPhone5:{name:"iPhone 5",styles:{width:"320px",height:"568px"}},iPhone6:{name:"iPhone 6",styles:{width:"375px",height:"667px"}},iPad:{name:"iPad",styles:{width:"768px",height:"1024px"}}}},options:{theme:_pxblue_storybook_themes__WEBPACK_IMPORTED_MODULE_8__.a,showRoots:!0}});var appliedTheme=Object(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__.a)(_pxblue_react_themes__WEBPACK_IMPORTED_MODULE_5__.blue);Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addDecorator)((function(storyFn){return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_4__.a,{theme:appliedTheme},react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div",{className:"wrapper",style:{color:_pxblue_colors__WEBPACK_IMPORTED_MODULE_6__.gray[800]}},storyFn()))})),Object(_storybook_react__WEBPACK_IMPORTED_MODULE_1__.addDecorator)(Object(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_2__.withKnobs)({escapeHTML:!1}))},510:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){__webpack_require__.d(__webpack_exports__,"stories",(function(){return stories}));var _material_ui_core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(187),_material_ui_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(323),_material_ui_core__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(83),_material_ui_core__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1183),_storybook_react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(115),react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__),_storybook_config__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(231),_src_utils__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(16),_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(9),withSourceLoader=__webpack_require__(12).withSource,__STORY__=(__webpack_require__(12).addSource,withSourceLoader=__webpack_require__(12).withSource,__webpack_require__(12).addSource,"import { Button, createStyles, makeStyles, Typography } from '@material-ui/core';\nimport { storiesOf } from '@storybook/react';\nimport React from 'react';\nimport { appliedTheme } from '../.storybook/config';\nimport { hideTopBanner, storyWrapper } from '../src/utils';\nimport * as Colors from '@pxblue/colors';\nconst backgroundImage = require('../assets/circles-bg.svg');\n\nexport const stories = storiesOf('Intro/Overview', module);\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            color: appliedTheme.palette.primary.contrastText,\n            backgroundColor: appliedTheme.palette.primary.main,\n            backgroundImage: `url(${backgroundImage})`,\n            backgroundSize: '200%',\n            height: '100%',\n            width: '100%',\n            display: 'flex',\n            alignContent: 'center',\n            justifyContent: 'center',\n            backgroundPosition: 'center',\n        },\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            textAlign: 'center',\n        },\n        icon: {\n            textAlign: 'center',\n        },\n        description: {\n            maxWidth: 900,\n            padding: 36,\n            paddingBottom: 0,\n            fontWeight: 100,\n        },\n        link: {\n            minWidth: 100,\n            fontWeight: 600,\n            borderColor: Colors.white[50],\n            textTransform: 'none',\n            '&:hover': {\n                borderColor: Colors.white[50],\n            },\n        },\n        githubIcon: {\n            width: 24,\n            height: 24,\n            marginRight: 8,\n            fill: Colors.white[50],\n        },\n        github: {\n            fontWeight: 100,\n            color: Colors.white[50],\n        },\n        buttons: {\n            display: 'flex',\n            justifyContent: 'space-around',\n            marginTop: 36,\n        },\n    })\n);\nstories.addParameters({\n    options: {\n        showPanel: false,\n    },\n});\n\nstories.addDecorator(storyWrapper);\n\nstories.add('PX Blue React Components', () => {\n    const classes = useStyles();\n    const icon = require('../assets/pxb-icon.svg');\n    hideTopBanner();\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <div className={classes.icon}>\n                    <img src={icon} alt=\"pxb-icon\" className={'rotate'} />\n                </div>\n                <Typography variant={'h2'}>\n                    Power Xpert <strong>Blue</strong>\n                </Typography>\n                <Typography variant={'h4'}>React Component Library</Typography>\n                <Typography variant={'subtitle1'} className={classes.description}>\n                    Learn about and interact with our PX Blue components using Storybook.\n                </Typography>\n\n                <div className={classes.buttons}>\n                    <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        className={classes.link}\n                        target={'_blank'}\n                        href={'https://github.com/pxblue/react-component-library'}\n                    >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className={classes.githubIcon}>\n                            <title>github</title>\n                            <rect width=\"24\" height=\"24\" fill=\"none\" />\n                            <path d=\"M12,2A10,10,0,0,0,8.84,21.5c.5.08.66-.23.66-.5V19.31C6.73,19.91,6.14,18,6.14,18A2.69,2.69,0,0,0,5,16.5c-.91-.62.07-.6.07-.6a2.1,2.1,0,0,1,1.53,1,2.15,2.15,0,0,0,2.91.83,2.16,2.16,0,0,1,.63-1.34C8,16.17,5.62,15.31,5.62,11.5a3.87,3.87,0,0,1,1-2.71,3.58,3.58,0,0,1,.1-2.64s.84-.27,2.75,1a9.63,9.63,0,0,1,5,0c1.91-1.29,2.75-1,2.75-1a3.58,3.58,0,0,1,.1,2.64,3.87,3.87,0,0,1,1,2.71c0,3.82-2.34,4.66-4.57,4.91a2.39,2.39,0,0,1,.69,1.85V21c0,.27.16.59.67.5A10,10,0,0,0,12,2Z\" />\n                        </svg>\n                        <Typography variant={'subtitle2'} className={classes.github}>\n                            Github\n                        </Typography>\n                    </Button>\n                </div>\n            </div>\n        </div>\n    );\n});\n"),__ADDS_MAP__={},__MODULE_DEPENDENCIES__=[],__LOCAL_DEPENDENCIES__={},__IDS_TO_FRAMEWORKS__={},backgroundImage=__webpack_require__(956),stories=Object(_storybook_react__WEBPACK_IMPORTED_MODULE_4__.storiesOf)("Intro/Overview",module).addParameters({storySource:{source:__STORY__,locationsMap:__ADDS_MAP__}}).addDecorator(withSourceLoader(__STORY__,__ADDS_MAP__,"/welcome.stories.tsx",__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,"/home/circleci/project/demos/storybook/stories",__IDS_TO_FRAMEWORKS__)).addParameters({storySource:{source:__STORY__,locationsMap:__ADDS_MAP__}}).addDecorator(withSourceLoader(__STORY__,__ADDS_MAP__,"/welcome.stories.tsx",__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,"/home/circleci/project/demos/storybook/stories",__IDS_TO_FRAMEWORKS__)),useStyles=Object(_material_ui_core__WEBPACK_IMPORTED_MODULE_0__.a)((function(){return Object(_material_ui_core__WEBPACK_IMPORTED_MODULE_1__.a)({root:{color:_storybook_config__WEBPACK_IMPORTED_MODULE_6__.appliedTheme.palette.primary.contrastText,backgroundColor:_storybook_config__WEBPACK_IMPORTED_MODULE_6__.appliedTheme.palette.primary.main,backgroundImage:"url("+backgroundImage+")",backgroundSize:"200%",height:"100%",width:"100%",display:"flex",alignContent:"center",justifyContent:"center",backgroundPosition:"center"},container:{display:"flex",flexDirection:"column",justifyContent:"center",textAlign:"center"},icon:{textAlign:"center"},description:{maxWidth:900,padding:36,paddingBottom:0,fontWeight:100},link:{minWidth:100,fontWeight:600,borderColor:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50],textTransform:"none","&:hover":{borderColor:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50]}},githubIcon:{width:24,height:24,marginRight:8,fill:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50]},github:{fontWeight:100,color:_pxblue_colors__WEBPACK_IMPORTED_MODULE_8__.white[50]},buttons:{display:"flex",justifyContent:"space-around",marginTop:36}})}));stories.addParameters({options:{showPanel:!1}}),stories.addDecorator(_src_utils__WEBPACK_IMPORTED_MODULE_7__.e),stories.add("PX Blue React Components",(function(){var classes=useStyles(),icon=__webpack_require__(957);return Object(_src_utils__WEBPACK_IMPORTED_MODULE_7__.c)(),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.root},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.container},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.icon},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("img",{src:icon,alt:"pxb-icon",className:"rotate"})),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"h2"},"Power Xpert ",react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("strong",null,"Blue")),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"h4"},"React Component Library"),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"subtitle1",className:classes.description},"Learn about and interact with our PX Blue components using Storybook."),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{className:classes.buttons},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_3__.a,{variant:"outlined",color:"primary",className:classes.link,target:"_blank",href:"https://github.com/pxblue/react-component-library"},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",className:classes.githubIcon},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("title",null,"github"),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("rect",{width:"24",height:"24",fill:"none"}),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("path",{d:"M12,2A10,10,0,0,0,8.84,21.5c.5.08.66-.23.66-.5V19.31C6.73,19.91,6.14,18,6.14,18A2.69,2.69,0,0,0,5,16.5c-.91-.62.07-.6.07-.6a2.1,2.1,0,0,1,1.53,1,2.15,2.15,0,0,0,2.91.83,2.16,2.16,0,0,1,.63-1.34C8,16.17,5.62,15.31,5.62,11.5a3.87,3.87,0,0,1,1-2.71,3.58,3.58,0,0,1,.1-2.64s.84-.27,2.75,1a9.63,9.63,0,0,1,5,0c1.91-1.29,2.75-1,2.75-1a3.58,3.58,0,0,1,.1,2.64,3.87,3.87,0,0,1,1,2.71c0,3.82-2.34,4.66-4.57,4.91a2.39,2.39,0,0,1,.69,1.85V21c0,.27.16.59.67.5A10,10,0,0,0,12,2Z"})),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(_material_ui_core__WEBPACK_IMPORTED_MODULE_2__.a,{variant:"subtitle2",className:classes.github},"Github")))))}))}.call(this,__webpack_require__(509)(module))},511:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# UserMenu\nThe `UserMenu` is an Avatar that opens a Menu when clicked. It is typically used in the top-right corner of an application and indicates who is logged in.\n\n<div style="align-items: center; display:flex; justify-content: space-around">\n\n<img width="30%" alt="UserMenu Avatar" src="./images/userMenuAvatar.png">\n<img width="35%" alt="UserMenu Opened" src="./images/userMenuOpened.png">\n\n</div>\n\n\nThe Menu can be populated via the `menuGroups` prop, or can be entirely customized by supplying your own `Menu`.\n\n## Usage \n```typescript\nimport { UserMenu } from \'@pxblue/react-components\';\nimport { Avatar, Menu } from \'@material-ui/core\';\nimport {Email, Settings} from "@material-ui/icons";\nimport SendIcon from \'@material-ui/icons/Send\';\n\nconst avatar = <Avatar><SendIcon/></Avatar>;\n...\n/* Using menuGroups prop */\n<UserMenu avatar={avatar} menuGroups={[\n    {\n       items: [\n           {\n               title: \'Log Out\',\n               icon: <SendIcon />,\n           },\n           {\n               title: \'Account Settings\',\n               icon: <Settings />,\n           },\n           {\n               title: \'Contact Us\',\n               icon: <Email />,\n           },\n       ],\n    },\n]} />\n\n/* Using menu prop */\n<UserMenu avatar={avatar} menu={<Menu/>} />\n\n```\n\n\n## API\n\n<div style="overflow: auto;">\n\n| Prop Name         | Description                                      | Type                     | Required | Default     |\n|-------------------|--------------------------------------------------|--------------------------|----------|-------------|\n| avatar            | MUI Avatar that displays                         | `Avatar`                 | yes      |             |  \n| classes           | Style overrides                                  | `StyleRules`             | no       |             |           \n| onClose           | Function called when the menu is closed          | `Function`               | no       |             |                                         \n| onOpen            | Function called when the menu is opened          | `Function`               | no       |             |                                         \n| menu              | Custom MUI Menu displayed when Avatar is clicked | Material-UI `Menu`       | no       |             |                                         \n| menuTitle         | Title shown when menu is open                    | `string`                 | no       |             |                                         \n| menuSubtitle      | Subtitle shown when menu is open                 | `string`                 | no       |             |                                         \n| menuGroups        | Groups of menu items that display                | `UserMenuGroups`         | yes      |             |                                         \n| MenuProps         | Property overrides for the MUI Menu              | `MenuProps`              | no       |             |          \n                               \n</div>\n\n#### UserMenuGroups Object\nThe `menuGroups` prop of the `UserMenu` includes many properties from the `DrawerNavGroup` array found within a `DrawerBody`.\n\n<div style="overflow: auto;">\n\n| Prop Name             | Description                             | Type              | Required | Default |\n|-----------------------|-----------------------------------------|-------------------|----------|---------|\n| fontColor             | The color used for the text             | `string`          | no       |         |\n| iconColor             | The color used for icons                | `string`          | no       |         |\n| items                 | List of navigation items to render      | `UserMenuItem[]`  | yes      |         |  \n| title                 | Text to display in the group header     | `string`          | no       |         |  \n\n</div>\n\n#### UserMenuItem Object\n\n<div style="overflow: auto;">\n\n| Attribute       | Description                             | Type               | Required | Default                      |\n|-----------------|-----------------------------------------|--------------------|----------|------------------------------|\n| chevron         | Show chevron icon to the right          | `boolean`          | no       | false                        |  \n| divider         | Show a divider line below the item      | `boolean`          | no       | true                         |  \n| icon            | A component to render for the icon      | `React.Component`  | no       |                              |      \n| onClick         | A function to execute when clicked      | `function`         | no       |                              |    \n| statusColor     | Status stripe and icon color            | `string`           | no       |                              |    \n| subtitle        | The text to show on the second line     | `string`           | no       |                              |    \n| title           | The text to show on the first line      | `string`           | yes      |                              |    \n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                 |\n|------------------|---------------------------------------------|\n| root             | Styles applied to the root element          |\n\n'},555:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/farm.8a32e08b.jpg"},559:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/trex.16a80028.jpeg"},577:function(module,exports,__webpack_require__){__webpack_require__(578),__webpack_require__(724),__webpack_require__(231),__webpack_require__(925),module.exports=__webpack_require__(926)},642:function(module,exports){},922:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/pxblue-react.004ac03a.svg"},926:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(module){var _storybook_react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(115);module._StorybookPreserveDecorators=!0,Object(_storybook_react__WEBPACK_IMPORTED_MODULE_0__.configure)([__webpack_require__(927),__webpack_require__(959)],module)}.call(this,__webpack_require__(509)(module))},927:function(module,exports,__webpack_require__){var map={"./welcome.stories.tsx":510};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=927},930:function(module,exports,__webpack_require__){var map={"./ChannelValue.md":931,"./Drawer.md":932,"./EmptyState.md":933,"./Hero.md":934,"./InfoListItem.md":935,"./ListItemTag.md":936,"./README.md":937,"./ScoreCard.md":938,"./Spacer.md":939,"./UserMenu.md":511,"./images/channelValue.png":940,"./images/channelValueAnatomy.png":941,"./images/drawer.png":942,"./images/drawerAnatomy.png":943,"./images/drawerLayout.png":944,"./images/emptyState.png":945,"./images/emptyStateAnatomy.png":946,"./images/heroes.png":947,"./images/infoListItem.png":948,"./images/listItemTag.png":949,"./images/scoreCard.png":950,"./images/scoreCardAnatomy.png":951,"./images/scoreCard_alt.png":952,"./images/spacer.png":953,"./images/userMenuAvatar.png":954,"./images/userMenuOpened.png":955};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=930},931:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# ChannelValue\nThe ChannelValue component is used to display...a channel value (and units). This component abstracts the styles used to display the channel and units as well as an optional inline icon. These are used as part of the [Hero](./Hero.md) component, but can also be used inline (e.g., in a list).\n\n<div style="text-align:center; width: 100%">\n    <img width="100%" style="max-width: 600px" alt="Channel Value in Hero" src="./images/heroes.png">\n    <hr />\n    <img width="100%" style="max-width: 600px" alt="Channel Value in a list item" src="./images/channelValue.png">\n</div>\n\n\n## Usage\n\n<div style="text-align:center; width: 100%">\n    <img width="100%" style="max-width: 200px" alt="Channel Value Anatomy" src="./images/channelValueAnatomy.png">\n</div>\n\n```typescript\nimport { ChannelValue } from \'@pxblue/react-components\';\n...\n<ChannelValue value={100} units={\'%\'} icon={<Icon/>} />\n```\n\n## API\n<div style="overflow: auto;">\n\n| Prop Name   | Description                                    | Type                     | Required | Default   |\n|-------------|------------------------------------------------|--------------------------|----------|-----------|\n| color       | The color of the font                          | `string`                 | no       | \'inherit\' |\n| classes     | Style overrides                                | `StyleRules`             | no       |           |    \n| fontSize    | The size of the font                           | `string` \\| `number`     | no       | \'inherit\' |   \n| icon        | The inline icon to display                     | `React.Component`        | no       |           |\n| prefix      | Show units before the value                    | `boolean`                | no       | false     |\n| units       | The text to display for the units (light text) | `string`                 | no       |           |\n| value       | The the value (bold text) to display           | `string` \\| `number`     | yes      |           |\n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                 |\n|------------------|---------------------------------------------|\n| root             | Styles applied to the root element          |\n| icon             | Styles applied to the icon element          |\n| units            | Styles applied to the units element         |\n| value            | Styles applied to the value element         |'},932:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# Drawer\nThe Drawer component is a wrapper around the Material UI Drawer that adds specific PX Blue functionality and styling. It is used to organize content (typically navigation links) in a collapsible side panel. The PX Blue Drawer includes helper components for `DrawerHeader`, `DrawerSubheader`, `DrawerBody`, `DrawerNavGroup`, `DrawerFooter`, and `DrawerLayout` to help organize the content.\n\n<div style=\"width: 100%; text-align: center\">\n    <img width=\"100%\" style=\"max-width: 200px\" alt=\"Nested Drawer\" src=\"./images/drawer.png\">\n</div>\n\n## Drawer\nThe Drawer component is the parent container, which manages the overall state of the drawer and renders the child components.\n\n<div style=\"width: 100%; text-align: center\">\n    <img width=\"100%\" style=\"max-width: 400px\" alt=\"Drawer Anatomy\" src=\"./images/drawerAnatomy.png\">\n</div>\n\n### Drawer Usage\n```typescript\nimport { Drawer, DrawerHeader, DrawerSubheader, DrawerBody, DrawerNavGroup, DrawerFooter } from '@pxblue/react-components';\n...\n<Drawer open={true}>\n    <DrawerHeader />\n    <DrawerSubheader />\n    <DrawerBody>\n        <DrawerNavGroup/>\n        <DrawerNavGroup/>\n        <DrawerNavGroup/>\n    </DrawerBody>\n    <DrawerFooter />\n</Drawer>\n\n// a responsive Drawer using Drawer variant \nimport { useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nconst theme = useTheme();\nconst xsDown = useMediaQuery(theme.breakpoints.down('xs'));\n<Drawer \n    open={true}\n    variant={xsDown ? 'temporary' : 'persistent'}\n>\n</Drawer>\n```\n\n### Drawer API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name                       | Description                                                | Type      | Required | Default  |          \n|---------------------------------|------------------------------------------------------------|-----------|----------|----------|\n| open                            | Controls the open/closed state of the drawer               | `boolean` | yes      |          |\n| variant                         | The variant to use (see below)                             | `'permanent' | 'persistent' | 'temporary'`| no | |\n| width                           | Sets the width of the drawer (in px) when open             | `number ` | no       |          |\n| [...sharedProps](#shared-props) | Props that can be set at any level in the drawer hierarchy | -         | no       |          |\n\n</div>\n\nThe `Drawer` has three `variant`s: \n- **Permanent**: Always open, even when `open` is set to false.\n- **Persistent**: When `open` is set to false, the Drawer collapses itself as a navigation rail, and hover will make it expand temporarily; when `open` is set to true, it behaves like a permanent Drawer.\n- **Temporary**: When `open` is set to false, the drawer is hidden; when `open` is set to true, it slides in.\n\n#### Classes\n\nYou can override the classes used by PX Blue by passing a `classes` prop. The Drawer supports the following keys:\n\n| Name             | Description                                     |\n|------------------|-------------------------------------------------|\n| root             | Styles applied to the root element              |\n| content          | Styles applied to the drawer content container  |\n| paper            | MUI Drawer style override for desktop viewports |\n\n## DrawerHeader\nThe `DrawerHeader` contains the content at the top of the `Drawer`. By default, it renders multiple lines of text in the PX Blue style. If you supply a `titleContent`, you can render your own custom content in the title area. \n    \n### DrawerHeader API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name         | Description                                    | Type              | Required | Default                      |\n|-------------------|------------------------------------------------|-------------------|----------|------------------------------|\n| backgroundColor   | The color used for the background              | `string`          | no       | `theme.palette.primary.main` |\n| backgroundImage   | An image to display in the header              | `string`          | no       |                              |\n| backgroundOpacity | The opacity of the background image            | `number`          | no       | `0.3`                        |\n| fontColor         | The color of the text elements                 | `string`          | no       | `Colors.white[50]`           |\n| icon              | A component to render for the icon             | `React.Component` | no       |                              |\n| onIconClick       | A function to execute when the icon is clicked | `function`        | no       | `() => {}`                   |\n| subtitle          | The text to show on the second line            | `string`          | no       |                              |\n| title             | The text to show on the first line             | `string`          | no       |                              |\n| titleContent      | Custom content for header title area           | `React.Component` | no       |                              |\n\n</div>\n\n#### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. The DrawerHeader supports the following keys:\n\n| Name             | Description                                     |\n|------------------|-------------------------------------------------|\n| root             | Styles applied to the root element              |\n| content          | Styles applied to the content container         |\n| background       | Styles applied to the header background         |\n| navigation       | Styles applied to the icon element              |\n| nonClickableIcon | Styles applied to the non-clickable icon element|\n| subtitle         | Styles applied to the subtitle element          |\n| title            | Styles applied to the title element             |\n\n\n## DrawerSubheader\nThe `DrawerSubheader` is an optional section that renders below the header and above the body of the `Drawer`. It can be used to support custom content (passed as children), such as filtering options or to display additional information.\n\n### DrawerSubheader Usage\n```typescript\nimport DrawerSubheader from '@pxblue/react-components/core/Drawer';\n...\n<DrawerSubheader>\n    <div>Custom Subheader Content</div>\n</DrawerSubheader>\n```\n\n## DrawerBody\nThe `DrawerBody` is a wrapper for the main content of the Drawer. The typical use case is to display `DrawerNavGroup` elements, but custom elements (e.g., for spacing) are accepted as well.\n\n### DrawerBody Usage\n```typescript\nimport DrawerBody from '@pxblue/react-components/core/Drawer';\n...\n<DrawerBody>\n    <DrawerNavGroup title={'Nav Items'} items={...} />\n    <DrawerNavGroup title={'More Nav Items'} items={...} />\n</DrawerBody>\n```\n\n### DrawerBody API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name               | Description                                    | Type          | Required | Default |\n|-------------------------|------------------------------------------------|---------------|----------|---------|\n| backgroundColor         | The color used for the background              | `string`      | no       |         |\n| classes                 | Style overrides                                | `StyleRules`  | no       |         |\n\n</div>\n\n#### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. The `DrawerBody` supports the following keys:\n\n| Name             | Description                                     |\n|------------------|-------------------------------------------------|\n| root             | Styles applied to the root element              |\n\n## DrawerNavGroup \nA `DrawerNavGroup` is used inside of the `DrawerBody` to organize links/content. Each group consists of an (optional) group title and a series of NavItems. Most visual props are inherited from the `DrawerBody` but can be overridden at the NavGroup level if desired.\n\nThe `items` property supports nested items to generate collapsible sections in the menu. This can be used to create an arbitrary tree depth, but we do not recommend going more than two levels deep in a navigation Drawer.\n\n### DrawerNavGroup API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name                       | Description                                                | Type              | Required | Default |\n|---------------------------------|------------------------------------------------------------|-------------------|----------|---------|\n| backgroundColor                 | The color used for the background                          | `string`          | no       |         | \n| classes                         | Style overrides                                            | `StyleRules`      | no       |         |\n| items                           | List of NavItems to render                                 | `NestedNavItem[]` | yes      |         | \n| title                           | Text to display in the group header                        | `string`          | no       |         |  \n| titleContent                    | Custom element, substitute for title                       | `React.Component` | no       |         | \n| [...sharedProps](#shared-props) | Props that can be set at any level in the drawer hierarchy | -                 | no       |         |\n\n</div>\n\n#### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. The `DrawerNavGroup` supports the following keys:\n\n| Name                        | Description                                     |\n|-----------------------------|-------------------------------------------------|\n| active                      | Styles applied to the active element            |\n| expandIcon                  | Styles applied to the expandIcon element        |\n| groupHeader                 | Styles applied to the NavGroup header element   |\n| listItemContainer           | Styles applied to the NavItem container         |\n| nestedListGroup             | Styles applied to nested NavItems               |\n| subheader                   | Styles applied to the List subheader element    |\n| nestedTitle                 | Styles applied to nested NavItem title          |\n\n\n## DrawerFooter\nThe `DrawerFooter` is an optional section that renders at the bottom of the `Drawer`. It can be used to add any custom content (as children).\n\n### Usage\n```typescript\nimport DrawerFooter from '@pxblue/react-components/core/Drawer';\n...\n<DrawerFooter>\n    <div>Custom Footer goes here</div>\n</DrawerFooter>\n```\n\n### DrawerFooter API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name       | Description                       | Type          | Required | Default |\n|-----------------|-----------------------------------|---------------|----------|---------|\n| backgroundColor | The color used for the background | `string`      | no       |         |   \n\n</div>\n\n## DrawerNavItem\n\n#### NavItem Object\nThe `items` prop of the `DrawerNavGroup` takes a list of items with the following structure (most of these properties are inherited from `<InfoListItem/>`). A `NavItem` can also include a list of `NestedNavItem` to create a tree structure (see below).\n\n<div style=\"overflow: auto;\">\n\n| Attribute                       | Description                                                  | Type              | Required | Default |\n| ------------------------------- | ------------------------------------------------------------ | ----------------- | -------- | ------- |\n| icon                            | A component to render for the left icon                      | `JSX.Element`     | no       |         |\n| itemID                          | An unique identifier of the NavItem. Item will have 'active' style when this matches activeItem | `string` | yes      |         |\n| items                           | The items nested under this item                             | `NestedNavItem[]` | no       |         |\n| onClick                         | A function to execute when clicked                           | `function`        | no       |         |\n| rightComponent                  | An icon/component to display to the right                    | `JSX.Element`     | no       |         |\n| statusColor                     | Status stripe and icon color                                 | `string`          | no       |         |\n| subtitle                        | The text to show on the second line                          | `string`          | no       |         |\n| title                           | The text to show on the first line                           | `string`          | yes      |         |\n| [...sharedProps](#shared-props) | Props that can be set at any level in the drawer hierarchy   | -                 | no       |         |\n\n</div>\n\n#### NestedNavItem Object\nThe `items` property of the NavItem can be nested to create a tree structure with expand/collapse panels. Nested items take the same properties as `NavItem` with the exception of `icon` (nested items cannot use icons). \n\n``` typescript\n<DrawerNavGroup \n    items=[\n        {\n            title: 'a',\n            itemID: 'a',\n            items: [\n                {\n                    title: 'a-1',\n                    itemID: 'a-1',\n                },\n                {\n                    title: 'a-2',\n                    itemID: 'a-2',\n                    items: [\n                        {\n                            title: 'a-2-1',\n                            itemID: 'a-2-1',\n                        },\n                        {\n                            title: 'a-2-2',\n                            itemID: 'a-2-2',\n                        },\n                    ]\n                },\n                {\n                    title: 'a-3',\n                    itemID: 'a-3',\n                },\n            ]\n        },\n    ]\n/>\n```\n\n\n## Shared Props\nThe following props can be set at any level in the drawer hierarchy (`Drawer`, `DrawerBody`, `DrawerNavGroup`, `NavItem`, or `NestedNavItem`). If they are set on a parent, they will be used for all children. For more customization, you can set these props on individual children and they will override any value set on the parent.\n\n<div style=\"overflow: auto;\">\n\n| Name                      | Description                                                | Type               | Required | Default                                                    |\n| ------------------------- | ---------------------------------------------------------- | ------------------ | -------- | ---------------------------------------------------------- |\n| activeItemBackgroundColor | Background color for the 'active' item                     | `string`           | no       | varies for light/dark theme                                |\n| activeItemBackgroundShape | shape of the active item background                        | `'round'|'square'` | no       | round                                                      |\n| activeItemFontColor       | Font color for the 'active' item                           | `string`           | no       | varies for light/dark theme                                |\n| activeItemIconColor       | Icon color for the 'active' item                           | `string`           | no       | varies for light/dark theme                                |\n| chevron                   | Whether to have chevrons for all menu items                | `boolean`          | no       |                                                            |\n| collapseIcon              | Icon used to collapse drawer                               | `JSX.Element`      | no       | `expandIcon` rotated 180 degrees                           |\n| divider                   | Whether to show a line between all items                   | `boolean`          | no       | true                                                       |\n| expandIcon                | Icon used to expand drawer                                 | `JSX.Element`      | no       | `<ExpandLess />` at top-level, `<ArrowDropUp />` otherwise |\n| hidePadding               | Whether to hide the paddings reserved for menu item icons  | `boolean`          | no       |                                                            |\n| InfoListItemProps         | Used to override InfoListItem props set by the Drawer      | `InfoListItemProps`| no       |                                                            |\n| itemFontColor             | The color used for the item text                           | `string`           | no       | gray[500]                                                  |\n| itemIconColor             | The color used for the icon                                | `string`           | no       | gray[500]                                                  |\n| ripple                    | Whether to apply material ripple effect to items           | `boolean`          | no       | true                                                       |\n\n</div>\n\n\nThe following props control the NavGroup and thus only apply to `Drawer`, and `DrawerNavGroupProps` (so not `NavItem` or `NestedNavItem`):\n\n<div style=\"overflow: auto;\">\n\n| Name                  | Description                                      | Type      | Required | Default                                                      |\n| --------------------- | ------------------------------------------------ | --------- | -------- | ------------------------------------------------------------ |\n| activeItem            | itemID for the 'active' item                     | `string`  | no       |                                                              |\n| nestedBackgroundColor | background color for nested menu items           | `string`  | no       | theme.palette.type === 'light' ? white[200] : black['A200'], |\n| nestedDivider         | Whether to show a line between nested menu items | `boolean` | no       | false                                                        |\n| titleColor            | Font color for group header                      | `string`  | no       | theme.palette.text.primary                                   |\n\n</div>\n\n# DrawerLayout\nThe `DrawerLayout` component is used to provide the appropriate resizing behavior for your main application content when used in conjunction with  a PX Blue `Drawer`. It accepts a `Drawer` as a prop, and the main page content is passed in through child elements.\n\n<div style=\"width: 100%; text-align: center\">\n    <img width=\"100%\" style=\"max-width: 600px\" alt=\"DrawerLayout with labels\" src=\"./images/drawerLayout.png\">\n</div>\n\n## DrawerLayout Usage\n```typescript\nimport { Drawer, DrawerLayout } from '@pxblue/react-components';\n...\n<DrawerLayout drawer={<Drawer ... />}>\n    <>\n        /* Page content goes here */\n    </>\n</DrawerLayout>\n```\n\n### DrawerLayout API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name          | Description                     | Type              | Required | Default |\n|--------------------|---------------------------------|-------------------|----------|---------|\n| drawer             | Drawer component to be embedded | `React.ReactNode` | yes      |         |    \n\n</div>\n\n\n\n> **Note on Scrolling**: When using client-side routing in your application, you may notice that the window scroll position does not reset when navigating to new routes. To address this issue, you will need to manually update the scroll position when new pages are loaded. If you are using React Router they have [several examples](https://reacttraining.com/react-router/web/guides/scroll-restoration) on how to implement this in your application.\n"},933:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# EmptyState\nThe EmptyState component is an element that can be used as a placeholder when no data is present (such as an empty list, or a placeholder page for future content). This is only used when no data is available, rather than during loading (see [empty states pattern](https://pxblue.github.io/patterns/empty-states)).\n\n<div style="width: 100%; text-align: center">\n    <img width="100%" style="max-width: 200px" alt="Empty State component with action button" src="./images/emptyState.png">\n</div>\n\n## Usage\n\n<div style="width: 100%; text-align: center">\n    <img width="100%" style="max-width: 600px" alt="Empty State Anatomy" src="./images/emptyStateAnatomy.png">\n</div>\n\n```typescript\nimport { EmptyState } from \'@pxblue/react-components\';\n\n<EmptyState\n    icon={<AlertIcon style={{ fontSize: \'100px\', marginBottom: \'15px\' }} />}\n    title={"No Alarms Found"}\n/>\n```\n \n## API\n\n<div style="overflow: auto;">\n\n| Prop Name   | Description                             | Type              | Required | Default |\n|-------------|-----------------------------------------|-------------------|----------|---------|\n| actions     | Additional components to render below   | `React.Component` | no       |         |\n| classes     | Style overrides                         | `StyleRules`      | no       |         |    \n| icon        | The primary icon                        | `React.Component` | yes      |         |\n| description | The secondary text to display           | `string`          | no       |         | \n| title       | The main text to display                | `string`          | yes      |         |\n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                 |\n|------------------|---------------------------------------------|\n| root             | Styles applied to the root element          |\n| actions          | Styles applied to the actions               |\n| description      | Styles applied to the description           |\n| icon             | Styles applied to the icon                  |\n| title            | Styles applied to the title                 |'},934:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# Hero\nThe PX Blue Hero components are used to call attention to particular values that are of the most importance to the user. These are typically displayed in a banner.\n\n<div style=\"width: 100%; text-align:center\">\n<img width=\"100%\" style=\"max-width: 600px\" alt=\"Hero Banner\" src=\"./images/heroes.png\">\n</div>\n\nThe Hero component displays a particular icon, value/units, and a label. The icon property will accept any valid component - this will typically be a Material icon, PX Blue icon, or Progress Icon. It will also accept Text/Emoji values.\n\nThe value section of the Hero utilizes a [ChannelValue](./ChannelValue.md) component. To display a single simple value, the information can be passed as props (```value```, ```units```, ```valueIcon```). For more complex values (such as a duration that displays hours and minutes), you can pass in ```<ChannelValue>``` components as children and they will be displayed inline.\n\n## Hero Usage\n```typescript\nimport { Hero } from '@pxblue/react-components';\n\n// Simple usage passing props\n<Hero\n    icon={<Icon/>}\n    label={'Label'}\n    value={99}\n    units={'%'}\n/>\n// Complex example with multiple values as children\n<Hero\n    icon={<Icon/>}\n    label={'Label'}\n>\n    <ChannelValue value={1} units={'h'} />\n    <ChannelValue value={26} units={'m'} />\n</Hero>\n```\n\n## Hero API\n<div style=\"overflow: auto;\">\n\n| Prop Name           | Description                             | Type                                                               | Required | Default                |\n|---------------------|-----------------------------------------|--------------------------------------------------------------------|----------|------------------------|\n| classes             | Style overrides                         | `StyleRules`                                                       | no       |                        |\n| fontSize            | The text size for the value line        | `'normal'` \\| `'small'`                                            | no       | 'normal'               |\n| icon                | The primary icon                        | `React.Component` \\| `string`                                      | yes      |                        |\n| iconBackgroundColor | The color used behind the primary icon  | `string`                                                           | no       | 'transparent'          |\n| iconSize            | The size of the primary icon (min 10px) | `number`                                                           | no       | 36                     |\n| label               | The text shown below the `ChannelValue` | `string`                                                           | yes      |                        |\n| units               | Text to show after the value            | `string`                                                           | no       |                        |\n| value               | The value for the channel               | `string` \\| `number`                                               | no       |                        |\n| valueIcon           | The inline icon with the value          | `React.Component`                                                  | no       |                        |\n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                 |\n|------------------|---------------------------------------------|\n| root             | Styles applied to the root element          |\n| icon             | Styles applied to the icon element          |\n| label            | Styles applied to the label element         |\n| values           | Styles applied to the value element         |\n\n\n\n# HeroBanner\nThe HeroBanner component is a simple wrapper component that is used to contain ```<Hero/>```s. It creates the flex container and sets up the spacing rules to display them. It accepts up to four ```<Hero/>``` components as its children.\n\n## HeroBanner Usage\n```typescript\nimport HeroBanner from '@pxblue/react-components/core/HeroBanner';\nimport Hero from '@pxblue/react-components/core/Hero';\n...\n<HeroBanner divider>\n    <Hero/>\n    <Hero/>\n    <Hero/>\n    <Hero/>\n</HeroBanner>\n```\n\n## HeroBanner API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name | Description                             | Type      | Required | Default |\n|-----------|-----------------------------------------|-----------|----------|---------|\n| divider   | Whether to show the line separator      | `boolean` | no       | false   |\n| limit     | Max number of children to display       | `number`  | no       | 4       |\n\n</div>\n\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                 |\n|------------------|---------------------------------------------|\n| root             | Styles applied to the root element          |\n"},935:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# InfoListItem\nThe InfoListItem is intended to be used in List views. It positions a title as well as optional subtitle(s), icon, and status stripe.\n\n<img width=\"100%\" alt=\"Info List Items in a variety of styles\" src=\"./images/infoListItem.png\">\n\n## Usage\n\n```typescript\nimport { InfoListItem } from '@pxblue/react-components';\nimport { GradeA, Leaf, CurrentCircled, VoltageCircled, Temp } from '@pxblue/icons-mui';\nimport * as Colors from '@pxblue/colors';\n...\n<InfoListItem\n    title={'Status'}\n    divider={'full'}\n    statusColor={Colors.green[500]}\n    subtitleSeparator={'/'}\n    icon={<Leaf color={'inherit'} />}\n/>\n```\n\n## API\n\n<div style=\"overflow: auto;\">\n\n| Prop Name         | Description                                      | Type                                               | Required | Default             |\n|-------------------|--------------------------------------------------|----------------------------------------------------|----------|---------------------|\n| avatar            | Show colored background for icon                 | `boolean`                                          | no       | false               |\n| backgroundColor   | The color used for the background                | `string`                                           | no       |                     |\n| chevron           | Add a chevron icon on the right                  | `boolean`                                          | no       | false               |\n| dense             | Smaller height row with less padding             | `boolean`                                          | no       | false               |\n| divider           | Show a row separator below the row               | `'full'` \\| `'partial'`                            | no       |                     |\n| fontColor         | Title text color                                 | `string`                                           | no       |                     |\n| hidePadding       | Remove left padding if no icon is used           | `boolean`                                          | no       | false               |\n| icon              | A component to render for the icon               | `React.Component`                                  | no       |                     |\n| iconColor         | Color override for the row icon                  | `string`                                           | no       |                     |\n| leftComponent     | Component to render on the left side             | `React.Component`                                  | no       |                     |\n| onClick           | A function to execute when clicked               | `function`                                         | no       |                     |\n| rightComponent    | Component to render on the right side            | `React.Component`                                  | no       |                     |\n| ripple            | Whether to apply material ripple effect on click | `boolean`                                          | no       | false               |\n| statusColor       | Status stripe and icon color                     | `string`                                           | no       |                     |\n| subtitle          | The text to show on the second line              | `string` \\| `Array<React.ReactNode>`               | no       |                     |\n| subtitleSeparator | Separator character for subtitle                 | `string`                                           | no       | '·' ('\\u00B7')      |\n| title             | The text to show on the first line               | `React.ReactNode`                                  | yes      |                     |\n| wrapSubtitle      | Whether to wrap subtitle on overflow             | `boolean`                                          | no       | true                |\n| wrapTitle         | Whether to wrap title on overflow                | `boolean`                                          | no       | true                |\n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                         |\n|------------------|-----------------------------------------------------|\n| root             | Styles applied to the root element                  |  \n| avatar           | Styles applied to the Avatar element                |   \n| icon             | Styles applied to the icon element                  |   \n| rightComponent   | Styles applied to the rightComponent parent element |   \n| separator        | Styles applied to subtitle delimiter                | \n| subtitle         | Styles applied to the subtitle element              |\n| title            | Styles applied to the title element                 |\n"},936:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# ListItemTag\nListItemTag is a text item with a colored background and rounded corners that is used to tag lists.\n\n<img width="100%" alt="List Item Tag" src="./images/listItemTag.png">\n\n## Usage\n\n```typescript\nimport { ListItemTag } from \'@pxblue/react-components\';\n\n<ListItemTag label={"Foo Bar"} backgroundColor={\'gold\'} fontColor={\'black\'} />\n```\n\n## API\n\nBesides what\'s listed below, as an extension of [Material UI\'s Typography API](https://material-ui.com/api/typography/), the component will pass in all extra props.\n\n<div style="overflow: auto;">\n\n| Prop Name       | Description                   | Type     | Required | Default   | \n| --------------- | ----------------------------- | -------- | -------- | --------- | \n| label           | The label text                | `string` | yes      |           |\n| fontColor       | Color of the label            | `string` | no       | `#ffffff` | \n| backgroundColor | Color of the label background | `string` | no       | `#007bc1` | \n\n</div>\n'},937:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="# React Components\nWe currently have the following components available for React applications:\n\n- [ChannelValue](https://github.com/pxblue/react-component-library/blob/dev/docs/ChannelValue.md)\n- [Drawer](https://github.com/pxblue/react-component-library/blob/dev/docs/Drawer.md)\n- [DrawerLayout](https://github.com/pxblue/react-component-library/blob/dev/docs/DrawerLayout.md)\n- [EmptyState](https://github.com/pxblue/react-component-library/blob/dev/docs/EmptyState.md)\n- [Hero & HeroBanner](https://github.com/pxblue/react-component-library/blob/dev/docs/Hero.md)\n- [InfoListItem](https://github.com/pxblue/react-component-library/blob/dev/docs/InfoListItem.md)\n- [ListItemTag](https://github.com/pxblue/react-component-library/blob/dev/docs/ListItemTag.md)\n- [ScoreCard](https://github.com/pxblue/react-component-library/blob/dev/docs/ScoreCard.md)\n- [Spacer](https://github.com/pxblue/react-component-library/blob/dev/docs/Spacer.md)\n- [UserMenu](https://github.com/pxblue/react-component-library/blob/dev/docs/UserMenu.md)\n"},938:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# ScoreCard\nCard component that calls attention to particular values.\n\n<div style="align-items: center; text-align: center; width: 100%; display: flex; justify-content: space-evenly; margin-bottom: 20px">\n    <img width="40%" alt="Score Card with multiple highlighted values" src="./images/scoreCard.png"><br/>\n    <img width="40%" alt="Score Card with single badge-style value" src="./images/scoreCard_alt.png"><br/>\n</div>\n\n## Usage\n\n<div style="align-items: center; text-align: center; width: 100%; display: flex; justify-content: space-evenly; margin-bottom: 20px">\n    <img width="80%" alt="Score Card with labels on different parts" src="./images/scoreCardAnatomy.png"><br/>\n</div>\n\n```typescript\nimport { Hero, HeroBanner, ScoreCard } from \'@pxblue/react-components\';\nimport { List, Card, ListItem, ListItemText, ListItemSecondaryAction } from \'@material-ui/core\';\nimport * as Colors from \'@pxblue/colors\';\nimport { MoreVert } from \'@material-ui/icons\';\nimport { Temp } from \'@pxblue/icons-mui\';\n\n...\n<ScoreCard\n    headerColor={Colors.red[500]}\n    headerTitle={\'Substation 3\'}\n    headerFontColor={Colors.white[50]}\n    actionItems={[\n        <MoreVert onClick={() => {}} />,\n    ]}\n    badge={\n        <HeroBanner>\n            <Hero\n                icon={<Temp fontSize={\'inherit\'} htmlColor={Colors.black[500]} />}\n                label={\'Temperature\'}\n                iconSize={48}\n                value={98}\n                units={\'°F\'}\n                fontSize={\'normal\'}\n            />\n        </HeroBanner>\n    }\n    actionRow={\n        <List>\n            <ListItem>\n                <ListItemText primary="View Location" />\n                <ListItemSecondaryAction> <ChevronRight /> </ListItemSecondaryAction>\n            </ListItem>\n        </List>\n    }\n>\n    {/* Card Body Content */}\n</ScoreCard>\n```\n\n## API\n\n<div style="overflow: auto;">\n\n| Prop Name             | Description                                 | Type                  | Required | Default                      |\n|-----------------------|---------------------------------------------|-----------------------|----------|------------------------------|\n| actionItems           | Icons to show to the right of the text      | `JSX.Element[]`       | no       |                              |\n| actionLimit           | Max number of actionItems in the header     | `number`              | no       | 3                            |  \n| actionRow             | Component to render for the footer          | `React.Component`     | no       |                              |\n| badge                 | The component to render in the callout area | `React.Component`     | no       |                              |\n| badgeOffset           | Vertical offset for the badge component     | `number`              | no       |                              |\n| classes               | Style overrides                             | `StyleRules`          | no       |                              |     \n| headerBackgroundImage | An image to display in the header           | `string`              | no       |                              | \n| headerColor           | The color of the header                     | `string`              | no       | `theme.palette.primary.main` |\n| headerFontColor       | The color for text and icons in header      | `string`              | no       | `white`                      | \n| headerInfo            | Tertiary text                               | `string`              | no       |                              |\n| headerTitle           | The primary text                            | `string`              | yes      |                              |\n| headerSubtitle        | The secondary text                          | `string`              | no       |                              | \n\n</div>\n\nThe `ScoreCard` also extends all Material UI Card props.\n\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name             | Description                                              |\n|------------------|----------------------------------------------------------|\n| root             | Styles applied to the root element                       |\n| actionItems      | Styles applied to the action items container             |\n| badgeWrapper     | Styles applied to the badge container                    |\n| bodyWrapper      | Styles applied to the child nodes container              |\n| content          | Styles applied to justify all body content               |\n| header           | Styles applied to the header container                   |\n| headerBackground | Styles applied to header background image                |\n| headerContent    | Styles applied to the header text and actions container  |\n| headerInfo       | Styles applied to the tertiary text element              |\n| headerTitle      | Styles applied to the title element                      |\n| headerSubtitle   | Styles applied to the subtitle element                   |\n'},939:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='# Spacer\nAn invisible utility component that acts as a spacer element in various layouts. It works with flexbox sizing or fixed sizing.\n\n<div style="width: 100%; text-align:center">\n    <img width="40%" alt="Spacer used in Drawer Body" src="./images/spacer.png"><br/>\n</div>\n\n\n## Usage\n```typescript\nimport { Spacer } from \'@pxblue/react-components\';\n...\n<div style={{display: \'flex\'}}>\n    {/* Left Content */}\n    <Spacer flex={1}/>\n    {/* Right Content */}\n</div>\n```\n\n## API\n\n<div style="overflow: auto;">\n\n| Prop Name | Description                             | Type     | Required | Default | Examples                  |\n|-----------|-----------------------------------------|----------|----------|---------|---------------------------|\n| classes   | Classes object to override styles       | `Object` | no       |         | {root: \'customRootClass\'} |\n| flex      | Flex grow/shrink value for flex layouts | `number` | no       | 1       |                           |\n| height    | Height (in px) for static layouts       | `number` | no       |         |                           |\n| width     | Width (in px) for static layouts        | `number` | no       |         |                           |\n\n</div>\n\n### Classes\nYou can override the classes used by PX Blue by passing a `classes` prop. It supports the following keys:\n\n| Name | Description                        |\n|------|------------------------------------|\n| root | Styles applied to the root element |\n'},940:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/channelValue.361119ef.png"},941:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/channelValueAnatomy.34e1c238.png"},942:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/drawer.737ba65b.png"},943:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/drawerAnatomy.7a75b4cc.png"},944:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/drawerLayout.9ed60ec4.png"},945:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/emptyState.33629f3e.png"},946:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/emptyStateAnatomy.c31810c2.png"},947:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/heroes.983e0866.png"},948:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/infoListItem.33c2abf6.png"},949:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/listItemTag.185ee093.png"},950:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/scoreCard.b52ac8b3.png"},951:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/scoreCardAnatomy.dbc800d3.png"},952:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/scoreCard_alt.7208b0da.png"},953:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/spacer.20404dde.png"},954:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/userMenuAvatar.abebf922.png"},955:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/userMenuOpened.d17b1abb.png"},956:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/circles-bg.8d837a68.svg"},957:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/pxb-icon.c26b974a.svg"},959:function(module,exports,__webpack_require__){var map={"./channel-value/_module.stories.tsx":1173,"./drawer/_module.stories.tsx":1168,"./empty-state/_module.stories.tsx":1174,"./hero/_module.stories.tsx":1171,"./info-list-item/_module.stories.tsx":1169,"./list-item-tag/_module.stories.tsx":1175,"./scorecard/_module.stories.tsx":1172,"./spacer/_module.stories.tsx":1177,"./user-menu/_module.stories.tsx":1170,"./welcome.stories.tsx":510};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=959}},[[577,1,2]]]);
//# sourceMappingURL=main.7a2a52cf6671a7db77d5.bundle.js.map